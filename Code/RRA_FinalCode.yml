# Prepared by Community.lawyer on 12/15/2019
# Compatible with Docassemble version 0.5.4
---
modules:
  - docassemble.base.util
  - .debug
---
mandatory: True
code: |
  import flask, re

  ___pattern = re.compile('https://(.*?).(qa.)?community.lawyer')
  ___match = ___pattern.match(flask.request.base_url)

  if ___match:
    ___current_subdomain = ___match.group(1)

    if not (___current_subdomain == 'app' or ___current_subdomain == 'qa-app'):
      ___subdomain_is_correct = 'mlursul' == ___current_subdomain

      if not ___subdomain_is_correct:
        command('exit', url="https://community.lawyer/404")

  elif False:
    ___pattern = re.compile('https://')
    ___match = ___pattern.match(flask.request.base_url)

    if not ___match:
      command('exit', url="https://community.lawyer/404")

  else:
    command('exit', url="https://community.lawyer/404")

  undefine('___pattern')
  undefine('___match')
---
mandatory: True
code: |
  from docassemble.base.functions import get_uid
  if not defined("___answers_session_id"):
    define("___answers_session_id", get_uid())
---
mandatory: True
code: |
  define("Today", today())
---
mandatory: True
code: |
  import json
  ___subject_url = url_args.get("subject_url")
  if (___subject_url):
    if ("/api/v4/contacts/" in ___subject_url):
      define("clio_contact_id", ___subject_url.replace("/api/v4/contacts/", ''))
    elif ("/api/v4/matters/" in ___subject_url):
      ___matter_id = ___subject_url.replace("/api/v4/matters/", '')
      define("clio_matter_id", ___matter_id)
      ___matter_url = "https://app.clio.com/api/v4/matters/%s?fields=client{id,name}" % (___matter_id)
      ___clio_matters_api_response = requests.get(___matter_url, headers=get_clio_access_headers()).json().get('data')
      ___contact_id = ___clio_matters_api_response.get('client').get('id')
      define("clio_contact_id", ___contact_id)
---
mandatory: True
code: |
  define("___memoized_values", {})
---
mandatory: True
code: |
  define("___server_host", "https://app.community.lawyer")
---
initial: True
code: |
  def ___compiled_metapython_block():
    return True

  import datetime
  import types

  def empty_string():
    return ""

  def ternary(condition, true_value, false_value):
    if is_undefined(condition):
      return Undefined()
    elif is_true(augment(condition)):
      return primitive_value(true_value)
    else:
      return primitive_value(false_value)

  def cl_array_access(array, _index):
    index = _index - 1
    return (array[index] if index < len(array) else None)

  def primitive_value(something):
    return augment(something).wrapped

  def Undefined():
    return augment(None)

  def erase(variable_name):
    undefine(variable_name)
    ___memoized_values.pop(variable_name, None)

  def is_true(arg):
    return primitive_value(arg) == True

  def is_false(arg):
    return primitive_value(arg) == False

  def is_falsy(arg):
    wrapped = primitive_value(arg)
    return wrapped == False or wrapped == None

  def is_truthy(arg):
    wrapped = primitive_value(arg)
    return not is_falsy(wrapped)

  def is_augmented(something):
    return something.__class__.__name__ == 'Augmented'

  def augment(something=None):
    if is_augmented(something):
      return something
    return Augmented(something)

  def is_undefined(something):
    return augment(something).wrapped == None

  def is_not_undefined(something):
    return not is_undefined(something)

  class Augmented(object):
    def __init__(self, something):
      self.wrapped = something
    def __str__(self):
      if self.wrapped:
        return str(self.wrapped)
      else:
        return ''
    # array
    def array_index(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(cl_array_access(self.wrapped, int(arg.wrapped)))
    def array_size(self):
      if is_undefined(self):
        return self
      return augment(len(self.wrapped))
    def array_leading(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped[:int(arg.wrapped)])
    def array_trailing(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped[int(-(arg.wrapped)):])
    def array_excluding_leading(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped[int(arg.wrapped):])
    def array_excluding_trailing(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped[:int(-(arg.wrapped))])
    # boolean
    def boolean_and(self, _arg):
      arg = augment(_arg)
      if is_false(self.wrapped) or is_false(arg.wrapped):
        return augment(False)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped and arg.wrapped)
    def boolean_or(self, _arg):
      arg = augment(_arg)
      if is_true(self.wrapped) or is_true(arg.wrapped):
        return augment(True)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped or arg.wrapped)
    def boolean_not(self):
      if is_undefined(self):
        return self
      return augment(not self.wrapped)
    def boolean_eq(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped == arg.wrapped)
    def boolean_ne(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped != arg.wrapped)
    # number
    def number_add(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped + arg.wrapped)
    def number_subtract(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped - arg.wrapped)
    def number_multiply(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped * arg.wrapped)
    def number_divide(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      if arg.wrapped == 0:
        return Undefined()
      return augment(self.wrapped / arg.wrapped)
    def number_eq(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped == arg.wrapped)
    def number_ne(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped != arg.wrapped)
    def number_gt(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped > arg.wrapped)
    def number_gte(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped >= arg.wrapped)
    def number_lt(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped < arg.wrapped)
    def number_lte(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped <= arg.wrapped)
    # string
    def string_join_with_space(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped + ' ' + arg.wrapped)
    def string_join_without_space(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped + arg.wrapped)
    def string_eq(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped == arg.wrapped)
    def string_ne(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped != arg.wrapped)
    def string_length(self):
      if is_undefined(self):
        return Undefined()
      return augment(len(self.wrapped))
    def character_at(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(list(self.wrapped)).array_index(arg)
    # time
    def time_eq(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped == arg.wrapped)
    def time_ne(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped != arg.wrapped)
    def time_gt(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped > arg.wrapped)
    def time_gte(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped >= arg.wrapped)
    def time_lt(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped < arg.wrapped)
    def time_lte(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped <= arg.wrapped)
    # date
    def date_eq(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped.replace(tzinfo=None) == arg.wrapped.replace(tzinfo=None))
    def date_ne(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped.replace(tzinfo=None) != arg.wrapped.replace(tzinfo=None))
    def date_gt(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped.replace(tzinfo=None) > arg.wrapped.replace(tzinfo=None))
    def date_gte(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped.replace(tzinfo=None) >= arg.wrapped.replace(tzinfo=None))
    def date_lt(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped.replace(tzinfo=None) < arg.wrapped.replace(tzinfo=None))
    def date_lte(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped.replace(tzinfo=None) <= arg.wrapped.replace(tzinfo=None))
    # dictionary
    def dictionary_all_false(self):
      if is_undefined(self):
        return self
      return augment(self.wrapped.all_false())
    def dictionary_all_true(self):
      if is_undefined(self):
        return self
      return augment(self.wrapped.all_true())
    def dictionary_any_false(self):
      if is_undefined(self):
        return self
      return augment(self.wrapped.any_false())
    def dictionary_any_true(self):
      if is_undefined(self):
        return self
      return augment(self.wrapped.any_true())
    def dictionary_access(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.wrapped.get(arg.wrapped))

    def clio_contacts_dictionary_access(self, contact_id):
      import json
      if is_undefined(self) or is_undefined(contact_id):
        return Undefined()
      ___member_response = requests.get("https://app.clio.com/api/v4/contacts/" + str(primitive_value(contact_id)) + "?" + primitive_value(self).get('url_parameters'), headers=get_clio_access_headers()).json().get('data')

      if not ___member_response:
        raise(Exception("The contact id you chose (" + str(primitive_value(contact_id)) + ") for Clio Contacts table '" + primitive_value(self).get('variable_name') + "' didn't match any of your contacts."))

      ___all_field_values = {}
      ___fields = primitive_value(self).get('fields')
      for field in ___fields:
        ___all_field_values.update({ field.get('name'): clio_response_getter(___member_response, field.get('attribute_name'), field.get('sub_attribute_name'), field.get('selector'), field.get('mapped_to_custom_field')) })
      return augment(___all_field_values)

    def clio_matters_dictionary_access(self, matter_id):
      import json
      if is_undefined(self) or is_undefined(matter_id):
        return Undefined()
      ___member_response = requests.get("https://app.clio.com/api/v4/matters/" + str(primitive_value(matter_id)) + "?" + primitive_value(self).get('url_parameters'), headers=get_clio_access_headers()).json().get('data')

      if not ___member_response:
        raise(Exception("The matter id you chose (" + str(primitive_value(matter_id)) + ") for Clio Matters table '" + primitive_value(self).get('variable_name') + "' didn't match any of your matters."))

      ___all_field_values = {}
      ___fields = primitive_value(self).get('fields')
      for field in ___fields:
        ___all_field_values.update({ field.get('name'): clio_response_getter(___member_response, field.get('attribute_name'), field.get('sub_attribute_name'), field.get('selector'), field.get('mapped_to_custom_field')) })
      return augment(___all_field_values)

    def google_tables_dictionary_access(self, key_column_value):
      import json
      if is_undefined(self) or is_undefined(key_column_value):
        return Undefined()

      if (not defined('___google_access_token')):
        ___discovery_document = requests.get("https://accounts.google.com/.well-known/openid-configuration")
        ___refresh_url = ___discovery_document.json().get('token_endpoint')
        ___refresh_data = {'client_id': get_config('google client id'), 'client_secret': get_config('google secret key'), 'grant_type': 'refresh_token', 'refresh_token': ''}
        ___refresh_response = requests.post(url = ___refresh_url, data = ___refresh_data)
        ___google_access_token = ___refresh_response.json().get('access_token')

      ___headers = {'Content-Type': 'application/json', 'Authorization': "Bearer %s" %(___google_access_token)}
      ___sheets_response = requests.get(primitive_value(self).get('sheets_url'), headers=___headers).json().get('values')
      ___key_column_index = ___sheets_response[0].index(primitive_value(self).get('key_column_name'))
      ___selected_row_unflattened = list(filter(lambda row: row[___key_column_index] == str(primitive_value(key_column_value)), ___sheets_response[1:]))

      if len(___selected_row_unflattened) == 0:
        raise(Exception("The index you chose (" + str(primitive_value(key_column_value)) + ") for Google table '" + primitive_value(self).get('variable_name') + "' didn't match any values found in the table."))

      ___selected_row = ___selected_row_unflattened[0]
      ___all_column_values = {}
      ___columns = primitive_value(self).get('columns')

      for column in ___columns:
        ___all_column_values.update({ column.get('name'): list_access_with_default(___selected_row, column.get('column_index')) })

      return augment(___all_column_values)

    def google_table_includes_row_with_key(self, key_column_value):
      import requests, json
      if is_undefined(self) or is_undefined(key_column_value):
        return Undefined()

      if (not defined('___google_access_token')):
        ___discovery_document = requests.get("https://accounts.google.com/.well-known/openid-configuration")
        ___refresh_url = ___discovery_document.json().get('token_endpoint')
        ___refresh_data = {'client_id': get_config('google client id'), 'client_secret': get_config('google secret key'), 'grant_type': 'refresh_token', 'refresh_token': ''}
        ___refresh_response = requests.post(url = ___refresh_url, data = ___refresh_data)
        ___google_access_token = ___refresh_response.json().get('access_token')

      ___headers = {'Content-Type': 'application/json', 'Authorization': "Bearer %s" %(___google_access_token)}
      ___sheets_response = requests.get(primitive_value(self).get('sheets_url'), headers=___headers).json().get('values')
      ___key_column_index = ___sheets_response[0].index(primitive_value(self).get('key_column_name'))
      ___selected_row = list(filter(lambda row: row[___key_column_index] == str(primitive_value(key_column_value)), ___sheets_response[1:]))

      if len(___selected_row) == 0:
        return False

      return True

    def google_row_index(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(self.dictionary_access(arg))

    # date math
    def days_after(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(arg.wrapped.plus(days=self.wrapped))
    def months_after(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(arg.wrapped.plus(months=self.wrapped))
    def years_after(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(arg.wrapped.plus(years=self.wrapped))
    def days_before(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(arg.wrapped.minus(days=self.wrapped))
    def months_before(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(arg.wrapped.minus(months=self.wrapped))
    def years_before(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment(arg.wrapped.minus(years=self.wrapped))
    # date formatting
    def date_format_ddmmyyyy(self):
      if is_undefined(self):
        return self
      return augment(format_date(self.wrapped, format='d/M/yyyy'))
    def date_format_mmddyyyy(self):
      if is_undefined(self):
        return self
      return augment(format_date(self.wrapped, format='M/d/yyyy'))
    def date_format_yyyymmdd(self):
      if is_undefined(self):
        return self
      return augment(format_date(self.wrapped, format='yyyy/M/d'))
    def date_format_mdy_month_name(self):
      if is_undefined(self):
        return self
      return augment(format_date(self.wrapped, format='long'))
    def date_format_mdy_month_name_day_name(self):
      if is_undefined(self):
        return self
      return augment(format_date(self.wrapped, format='full'))
    def days_since(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment((self.wrapped - arg.wrapped).days)
    def months_since(self, _arg):
      from dateutil import relativedelta
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      diff = relativedelta.relativedelta(self.wrapped, arg.wrapped)
      months_diff = diff.months
      years_diff = diff.years
      return augment(months_diff + (years_diff * 12))
    def years_since(self, _arg):
      from dateutil import relativedelta
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      diff = relativedelta.relativedelta(self.wrapped, arg.wrapped)
      return augment(diff.years)
    # checkbox formatting
    def boolean_valued_dictionary_as_comma_delimited_list_of_true_values(self):
      if is_undefined(self):
        return Undefined()
      inner_dict = self.wrapped
      keys_for_true_values = [k for k, v in inner_dict.items() if v]
      return augment(", ".join(keys_for_true_values))
    # string typecasting
    def string_as_number(self):
      if is_undefined(self) or (not floatable(self.wrapped)):
        return Undefined()
      return augment(float(self.wrapped))
    def string_as_date_mm_dd_yyyy(self):
      if is_undefined(self) or (not mm_dd_yyyy_dateable(self.wrapped)):
        return Undefined()
      import datetime
      return augment(datetime.datetime.strptime(primitive_value(self.wrapped), '%m/%d/%Y'))
    def number_format_decimal_precision(self, _arg):
      arg = augment(_arg)
      if is_undefined(self) or is_undefined(arg):
        return Undefined()
      return augment('{:.{prec}f}'.format(self.wrapped, prec=int(arg.wrapped)))
  # typecasting
  def floatable(arg):
    try:
      float(primitive_value(arg))
      return True
    except:
      return False
  def mm_dd_yyyy_dateable(arg):
    import datetime
    try:
      datetime.datetime.strptime(primitive_value(arg), '%m/%d/%Y')
      return True
    except:
      return False
  def typecast_as_date(_arg):
    arg = augment(_arg)
    if is_undefined(arg):
      return arg
    return augment(as_datetime(arg.wrapped))
  def typecast_as_number(_arg):
    arg = augment(_arg)
    if is_undefined(arg):
      return arg
    return augment(float(arg.wrapped))
  def typecast_as_boolean(_arg):
    arg = augment(_arg)
    if is_undefined(arg):
      return arg
    wrapped = arg.wrapped
    if wrapped == 'True':
      return augment(True)
    if wrapped == 'False':
      return augment(False)
    return Undefined()
  def typecast_as_string(_arg):
    arg = augment(_arg)
    if is_undefined(arg):
      return arg
    return augment(str(arg.wrapped))
  def as_url_param_value(_arg):
    arg = augment(_arg)
    if is_undefined(arg):
      return ''
    return augment(typecast_as_string(arg.wrapped))

  # array reducers

  def number_add_array_reducer(_arg):
    from functools import reduce
    arg = augment(_arg)
    if is_undefined(arg):
      return arg
    return reduce(lambda x, y: augment(x).number_add(augment(y)), arg.wrapped)

  def number_multiply_array_reducer(_arg):
    from functools import reduce
    arg = augment(_arg)
    if is_undefined(arg):
      return arg
    return reduce(lambda x, y: augment(x).number_multiply(augment(y)), arg.wrapped)

  def number_mean_array_reducer(_arg):
    arg = augment(_arg)
    if is_undefined(arg):
      return arg
    size = arg.array_size()
    total = number_add_array_reducer(arg)
    return total.number_divide(size)

  def number_maximum_array_reducer(_arg):
    arg = augment(_arg)
    if is_undefined(arg):
      return arg
    return max(map(primitive_value, arg.wrapped))

  def number_minimum_array_reducer(_arg):
    arg = augment(_arg)
    if is_undefined(arg):
      return arg
    return min(map(primitive_value, arg.wrapped))

  def boolean_all_true_array_reducer(_arg):
    from functools import reduce
    arg = augment(_arg)
    if is_undefined(arg):
      return arg
    return reduce(lambda x, y: augment(x).boolean_and(augment(y)), arg.wrapped)

  def boolean_any_true_array_reducer(_arg):
    from functools import reduce
    arg = augment(_arg)
    if is_undefined(arg):
      return arg
    return reduce(lambda x, y: augment(x).boolean_or(augment(y)), arg.wrapped)

  def boolean_all_false_array_reducer(_arg):
    arg = augment(_arg)
    if is_undefined(arg):
      return arg
    return augment(boolean_any_true_array_reducer(arg)).boolean_not()

  def boolean_any_false_array_reducer(_arg):
    arg = augment(_arg)
    if is_undefined(arg):
      return arg
    return augment(boolean_all_true_array_reducer(arg)).boolean_not()

  def cl_array_map(myfunc, _myiterable):
    myiterable = augment(_myiterable)
    if is_undefined(myiterable):
      return myiterable
    return map(myfunc, myiterable.wrapped)

  def is_list(arg):
    return type(augment(arg).wrapped) == type([])

  def is_dict(arg):
    return type(augment(arg).wrapped) == type({})

  def as_url_param_kv_pair(key, _value):
    value = augment(_value)
    if is_list(value):
      if is_dict(cl_array_access(value.wrapped, 1)):
        return list_of_dicts_as_url_param_kv_pairs(key, value)
      else:
        pass
        # no primitive arrays yet
    elif len(str(primitive_value(value))) == 0:
      return ''
    else:
      return '&' + primitive_value(key) + "=" + primitive_value(as_url_param_value(value))

  def list_of_dicts_as_url_param_kv_pairs(key, value):
    pairs = []
    for i, mydict in enumerate(primitive_value(value)):
      for k in primitive_value(mydict).keys():
        key_for_pair = key + '[' + str(i) + ']' + '[' + ___display_mapping[str(k)] + ']'
        value_for_pair = mydict[k]
        pair = '&' + str(key_for_pair) + '=' + str(value_for_pair)
        pairs.append(pair)
    return ''.join(pairs)

  def list_access_with_default(list, index):
    return list[index] if index < len(list) else ''

  def should_show_markdown_variable(var_name):
    return (defined(var_name) and value(var_name) != "")

  def string_as_bool(something):
    return str(primitive_value(something)) == 'True'

  def merge_two_dicts(x, y):
    z = x.copy()
    z.update(y)
    return z

  import re
  from bs4 import BeautifulSoup
  from markdown import markdown

  def markdown_to_plaintext(markdown_string):
    try:
      html_list = list(map(lambda str: markdown(str), markdown_string.split("\n")))
      html_list = list(map(lambda html: re.sub(r'<pre>(.*?)</pre>', ' ', html), html_list))
      html_list = list(map(lambda html: re.sub(r'<code>(.*?)</code >', ' ', html), html_list))
      soup_list = list(map(lambda html: BeautifulSoup(html, "html.parser"), html_list))
      text_list = list(map(lambda soup: ''.join(soup.findAll(text=True)), soup_list))
      text_list = list(map(lambda text: re.sub(r'\n', '\n\n', text), text_list))
      return "\n".join(text_list)
    except:
      return markdown_string

  def clio_response_getter(response_object, attribute_name, sub_attribute_name, selector, custom_field):
    if not response_object:
      raise(Exception("The selection you made didn't match anything found in Clio."))
    if custom_field:
      ___attribute_object = list(filter(lambda item: (item.get('field_name') == attribute_name), response_object.get('custom_field_values')))
      if (len(___attribute_object) == 0):
        return '';
      return ___attribute_object[0].get('value')
    elif (selector != ''):
      ___attribute_object = list(filter(lambda item: (item.get('name') == selector), response_object.get(attribute_name)))
      if (len(___attribute_object) == 0):
        return '';
      return ___attribute_object[0].get(sub_attribute_name)
    elif (sub_attribute_name != ''):
      ___attribute_object = response_object.get(attribute_name)
      if (___attribute_object == None):
        return ''
      return ___attribute_object.get(sub_attribute_name)
    else:
      return response_object.get(attribute_name) or ''

  def as_ccf_update_params(custom_field_values, existing_custom_fields):
    return [as_ccf_update_param(x, existing_custom_fields) for x in custom_field_values]

  def as_ccf_update_param(custom_field_value, existing_custom_fields):
    custom_field_id = custom_field_value.get('custom_field').get('id')
    existing_custom_field_ids = [field.get('custom_field').get('id') for field in existing_custom_fields]
    if custom_field_id in existing_custom_field_ids:
      existing_custom_field = next(x for x in existing_custom_fields if x.get('custom_field').get('id') == custom_field_id)
      existing_custom_field['value'] = custom_field_value.get('value')
      return existing_custom_field
    return custom_field_value

  def as_cgf_update_params(precursory_grouped_update_params, existing_grouped_fields):
    ___transformed_params = {}
    for group_key in precursory_grouped_update_params:
      if group_key not in ___transformed_params:
         ___transformed_params[group_key] = []
      ___objects = precursory_grouped_update_params[group_key]
      for obj in ___objects:
        ___name = obj.get('name')
        ___match = safe_array_access(list(filter(lambda x: x.get('name') == ___name, existing_grouped_fields[group_key])), 0)
        if ___match:
          import copy
          ___new_obj = copy.deepcopy(obj)
          ___new_obj['id'] = ___match.get('id')
          ___transformed_params[group_key] = ___transformed_params[group_key] + [___new_obj]
        else:
          ___transformed_params[group_key] = ___transformed_params[group_key] + [obj]
    return ___transformed_params

  def safe_array_access(the_array, the_index):
    try:
      return the_array[the_index]
    except:
      return None

  def slice_dict(the_dict, the_keys):
    return { key:the_dict[key] for key in set(the_keys) & set(the_dict) }

  def number_to_excel_column_letter(n):
    string = ""
    while n > 0:
        n, remainder = divmod(n - 1, 26)
        string = chr(65 + remainder) + string
    return string

  def prepare_value_for_webhook(item):
    if isinstance(item, DADict):
      return ", ".join(item.true_values())

    return str(item)
---
mandatory: True
code: |
---
mandatory: True
code: |
  ___display_mapping = { '___shortcut_133_false': "Antipsych_1Add is false", '___ivn_133': "Antipsych_1Add is true", '___ivn_137': "Antipsych_1Alt", '___ivn_138': "Antipsych_1AltDose", '___ivn_129': "Antipsych_1Dose", '___ivn_128': "Antipsych_1Name", '___ivn_140': "Antipsych_2Alt", '___ivn_141': "Antipsych_2AltDose", '___ivn_132': "Antipsych_2Dose", '___ivn_131': "Antipsych_2Name", '___ivn_143': "Antipsych_3Alt", '___ivn_144': "Antipsych_3AltDose", '___ivn_135': "Antipsych_3Dose", '___ivn_134': "Antipsych_3Name", '___ivn_181': "Antipsych_4Alt", '___ivn_182': "Antipsych_4AltDose", '___shortcut_130_false': "Antipsych_Add is false", '___ivn_130': "Antipsych_Add is true", '___shortcut_139_false': "Antipsych_Alternative2 is false", '___ivn_139': "Antipsych_Alternative2 is true", '___shortcut_142_false': "Antipsych_Alternative3 is false", '___ivn_142': "Antipsych_Alternative3 is true", '___shortcut_180_false': "Antipsych_Alternative4 is false", '___ivn_180': "Antipsych_Alternative4 is true", '___shortcut_136_false': "Antipsych_Alternatives is false", '___ivn_136': "Antipsych_Alternatives is true", '___shortcut_246_false': "Attorney_Known is false", '___ivn_246': "Attorney_Known is true", '___ivn_226': "CoGaurdian_Last", '___ivn_225': "CoGuardian_First", '___ivn_227': "CoGuardian_Suffix", '___shortcut_222_false': "Co_Address_Same is false", '___ivn_222': "Co_Address_Same is true", '___shortcut_224_false': "Co_Guardian1 is false", '___ivn_224': "Co_Guardian1 is true", '___ivn_45': "Co_Guardian_Address", '___ivn_46': "Co_Guardian_AptNo", '___ivn_47': "Co_Guardian_City", '___ivn_51': "Co_Guardian_Email", '___ivn_50': "Co_Guardian_Phone", '___ivn_48': "Co_Guardian_State", '___ivn_49': "Co_Guardian_Zip", '___shortcut_162_false': "Conservator_Other is false", '___ivn_162': "Conservator_Other is true", '___ivn_206': "Court", '___shortcut_208_choice': "Court is \"Barnstable Probate & Family", '___shortcut_209_choice': "Court is \"Berkshire Probate & Family", '___shortcut_210_choice': "Court is \"Bristol Probate & Family", '___shortcut_211_choice': "Court is \"Dukes Probate & Family", '___shortcut_212_choice': "Court is \"Essex Probate & Family", '___shortcut_213_choice': "Court is \"Franklin Probate & Family", '___shortcut_214_choice': "Court is \"Hampshire Probate & Family", '___shortcut_215_choice': "Court is \"Middlesex Probate & Family", '___shortcut_216_choice': "Court is \"Nantucket Probate & Family", '___shortcut_217_choice': "Court is \"Norfolk Probate & Family", '___shortcut_218_choice': "Court is \"Plymouth Probate & Family", '___shortcut_207_choice': "Court is \"Suffolk Probate & Family", '___shortcut_219_choice': "Court is \"Worcester Probate & Family", '___ivn_191': "Decree_Date_1", '___ivn_163': "End", '___ivn_38': "Guardian_AptNo", '___ivn_39': "Guardian_City", '___shortcut_114_false': "Guardian_Conservator is false", '___ivn_114': "Guardian_Conservator is true", '___ivn_43': "Guardian_Email", '___ivn_198': "Guardian_First1", '___ivn_199': "Guardian_Last1", '___shortcut_35_false': "Guardian_Monitor is false", '___ivn_35': "Guardian_Monitor is true", '___ivn_62': "Guardian_MonitorDate", '___ivn_42': "Guardian_Phone", '___ivn_44': "Guardian_Relationship", '___shortcut_160_false': "Guardian_RepPayee is false", '___ivn_160': "Guardian_RepPayee is true", '___shortcut_161_false': "Guardian_RespFunds is false", '___ivn_161': "Guardian_RespFunds is true", '___ivn_40': "Guardian_State", '___ivn_37': "Guardian_Street", '___ivn_200': "Guardian_Suffix1", '___ivn_41': "Guardian_Zip", '___shortcut_26_false': "Guardian_sCare_PlanReport is false", '___ivn_26': "Guardian_sCare_PlanReport is true", '___ivn_53': "Monitor_AptNo", '___ivn_54': "Monitor_City", '___shortcut_150_false': "Monitor_Clinician is false", '___ivn_150': "Monitor_Clinician is true", '___ivn_152': "Monitor_ClinicianF", '___ivn_151': "Monitor_ClinicianT", '___ivn_153': "Monitor_Comm", '___shortcut_115_false': "Monitor_Conservator is false", '___ivn_115': "Monitor_Conservator is true", '___ivn_60': "Monitor_Date", '___ivn_125': "Monitor_Discussion", '___ivn_29': "Monitor_First", '___ivn_30': "Monitor_Last", '___ivn_124': "Monitor_MeetingDate", '___ivn_146': "Monitor_NonCompliance", '___ivn_57': "Monitor_Phone", '___ivn_58': "Monitor_Relationship", '___ivn_126': "Monitor_ReviewMedRec", '___ivn_56': "Monitor_State", '___ivn_52': "Monitor_Street", '___ivn_31': "Monitor_Suffix", '___shortcut_145_false': "Monitor_TreatmentCompliance is false", '___ivn_145': "Monitor_TreatmentCompliance is true", '___ivn_55': "Monitor_Zip", '___shortcut_95_false': "Resp_1ResAdd is false", '___ivn_95': "Resp_1ResAdd is true", '___ivn_90': "Resp_1ResAddress", '___shortcut_93_false': "Resp_1ResFacility is false", '___ivn_93': "Resp_1ResFacility is true", '___ivn_94': "Resp_1ResFacilityName", '___ivn_177': "Resp_1ResRange", '___shortcut_101_false': "Resp_2ResAdd is false", '___ivn_101': "Resp_2ResAdd is true", '___ivn_96': "Resp_2ResAddress", '___shortcut_100_false': "Resp_2ResFacility is false", '___ivn_100': "Resp_2ResFacility is true", '___ivn_97': "Resp_2ResFacilityName", '___ivn_178': "Resp_2ResRange", '___ivn_102': "Resp_3ResAddress", '___shortcut_106_false': "Resp_3ResFacility is false", '___ivn_106': "Resp_3ResFacility is true", '___ivn_103': "Resp_3ResFacilityName", '___ivn_179': "Resp_3ResRange", '___ivn_67': "Resp_Age", '___ivn_228': "Resp_Attorney", '___ivn_167': "Resp_BeginBalance", '___ivn_70': "Resp_CAptNo", '___ivn_71': "Resp_CCity", '___ivn_72': "Resp_CState", '___ivn_73': "Resp_CZip", '___ivn_159': "Resp_ChangeGuardianship", '___shortcut_154_false': "Resp_Charges is false", '___ivn_154': "Resp_Charges is true", '___ivn_155': "Resp_ChargesEx", '___ivn_148': "Resp_Condition", '___ivn_158': "Resp_ContinueGuardianship", '___ivn_157': "Resp_DecisionMaking", '___ivn_175': "Resp_Facility", '___ivn_169': "Resp_FeeCareProvider", '___ivn_202': "Resp_First1", '___ivn_171': "Resp_GuardianFees", '___ivn_204': "Resp_Last1", '___ivn_203': "Resp_Middle1", '___ivn_170': "Resp_MoneyPersonal", '___ivn_168': "Resp_MoneyReceived", '___ivn_81': "Resp_OtherEx", '___ivn_172': "Resp_OtherExpenses", '___shortcut_89_false': "Resp_ResAdd is false", '___ivn_89': "Resp_ResAdd is true", '___ivn_112': "Resp_ResBestIntEx", '___ivn_176': "Resp_ResDate", '___ivn_82': "Resp_ResExplained", '___shortcut_83_choice': "Resp_ResExplained is \"Resp_ResCommunity", '___shortcut_84_choice': "Resp_ResExplained is \"Resp_ResDDS", '___shortcut_85_choice': "Resp_ResExplained is \"Resp_ResDMH", '___shortcut_87_choice': "Resp_ResExplained is \"Resp_ResHome", '___shortcut_86_choice': "Resp_ResExplained is \"Resp_ResNurse", '___shortcut_88_choice': "Resp_ResExplained is \"Resp_ResOther", '___ivn_107': "Resp_ResLevelCare", '___shortcut_110_choice': "Resp_ResLevelCare is \"Adequate", '___shortcut_109_choice': "Resp_ResLevelCare is \"Good", '___shortcut_111_choice': "Resp_ResLevelCare is \"Poor", '___shortcut_108_choice': "Resp_ResLevelCare is \"Very Good", '___shortcut_229_false': "Resp_SameAddress is false", '___ivn_229': "Resp_SameAddress is true", '___ivn_230': "Resp_Services", '___ivn_69': "Resp_Street", '___ivn_205': "Resp_Suffix1", '___ivn_156': "Resp_Visits", '___shortcut_23_false': "RogerAuthority is false", '___ivn_23': "RogerAuthority is true", '___ivn_196': "RogersReview_Last", '___ivn_195': "RogersReview_Next", '___ivn_194': "TeratmentPlan_Expires1", 'Today': "Today", '___ivn_193': "TreatmentPlan_Approved1", '___ivn_120': "TreatmentPlan_ExtendAmend", '___shortcut_122_choice': "TreatmentPlan_ExtendAmend is \"Change", '___shortcut_121_choice': "TreatmentPlan_ExtendAmend is \"Continue", '___ivn_221': "docket", '___shortcut_3_false': "variable_1 is false", '___ivn_3': "variable_1 is true", '___shortcut_184_false': "variable_2 is false", '___ivn_184': "variable_2 is true" }
---
initial: True
code: |
	import json

	def ___pdf_template_4732_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBeThhQVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--92a7e289f241cbbcde385459f73c7871569e2c00/Review_Order_Antipsychotic_Meds_mpc827.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 1}, "stamps": [{"x": 362.66666666666663, "y": 717.3333333333333, "width": 158.66666666666666, "height": 19.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 290.66666666666663, "y": 758.0, "width": 102.0, "height": 34.666666666666664, "page": 1, "value": markdown_to_plaintext(str(___ivn_221 if ("___ivn_221" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 566.0, "y": 15.333333333333332, "width": 24.666666666666664, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 526.6666666666666, "y": 15.333333333333332, "width": 18.666666666666664, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 29.333333333333332, "y": 690.6666666666666, "width": 120.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 227.33333333333331, "y": 690.6666666666666, "width": 120.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 155.33333333333331, "y": 690.6666666666666, "width": 66.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_203 if ("___ivn_203" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 173.33333333333331, "y": 591.3333333333333, "width": 164.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 110.66666666666666, "y": 564.6666666666666, "width": 156.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 281.3333333333333, "y": 492.66666666666663, "width": 156.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 461.3333333333333, "y": 492.66666666666663, "width": 50.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 110.66666666666666, "y": 447.3333333333333, "width": 236.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 407.3333333333333, "y": 177.33333333333331, "width": 174.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 83.33333333333333, "y": 135.33333333333331, "width": 498.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 58.666666666666664, "y": 116.66666666666666, "width": 216.66666666666666, "height": 14.0, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 512.6666666666666, "y": 52.0, "width": 80.66666666666666, "height": 17.333333333333332, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 516.6666666666666, "y": 492.0, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 552.6666666666666, "y": 492.0, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 48.666666666666664, "y": 177.33333333333331, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 346.0, "y": 99.33333333333333, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 454.0, "y": 99.33333333333333, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_4733_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBekFhQVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--880401b19e0407d415336476682a915e8c30bf50/Rep_Respondents_Counsel_mpc512.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 1}, "stamps": [{"x": 566.0, "y": 15.333333333333332, "width": 24.666666666666664, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 526.6666666666666, "y": 15.333333333333332, "width": 18.666666666666664, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 290.66666666666663, "y": 758.0, "width": 102.0, "height": 25.333333333333332, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 227.33333333333331, "y": 699.3333333333333, "width": 128.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 29.333333333333332, "y": 699.3333333333333, "width": 120.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 155.33333333333331, "y": 699.3333333333333, "width": 66.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 362.66666666666663, "y": 726.6666666666666, "width": 158.66666666666666, "height": 19.333333333333332, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 236.66666666666666, "y": 609.3333333333333, "width": 110.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 317.3333333333333, "y": 564.6666666666666, "width": 110.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 173.33333333333331, "y": 492.66666666666663, "width": 182.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 47.33333333333333, "y": 438.66666666666663, "width": 164.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 227.33333333333331, "y": 438.66666666666663, "width": 164.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 407.3333333333333, "y": 438.66666666666663, "width": 164.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 47.33333333333333, "y": 384.0, "width": 254.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 146.66666666666666, "y": 357.3333333333333, "width": 254.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 326.66666666666663, "y": 402.66666666666663, "width": 254.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 434.66666666666663, "y": 248.0, "width": 102.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 281.3333333333333, "y": 186.66666666666666, "width": 308.66666666666663, "height": 16.0, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 52.0, "y": 222.66666666666666, "width": 214.0, "height": 14.0, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 330.0, "y": 80.0, "width": 260.66666666666663, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 358.66666666666663, "y": 98.0, "width": 232.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 524.6666666666666, "y": 125.33333333333333, "width": 66.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 479.3333333333333, "y": 125.33333333333333, "width": 38.666666666666664, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 281.3333333333333, "y": 125.33333333333333, "width": 192.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 281.3333333333333, "y": 152.0, "width": 210.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 497.3333333333333, "y": 152.0, "width": 92.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 330.0, "y": 60.666666666666664, "width": 260.66666666666663, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 512.6666666666666, "y": 43.33333333333333, "width": 80.66666666666666, "height": 17.333333333333332, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 354.66666666666663, "y": 608.6666666666666, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 418.0, "y": 608.6666666666666, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_4734_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBekVhQVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--1558eeef1d7782a607e059d268161d84beaeca8d/Guardianship_Care_Plan_Report_mpc821.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 4}, "stamps": [{"x": 508.0, "y": 147.33333333333331, "width": 91.33333333333333, "height": 12.0, "page": 3, "value": markdown_to_plaintext(str(___ivn_227 if ("___ivn_227" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 413.3333333333333, "y": 146.66666666666666, "width": 91.33333333333333, "height": 12.0, "page": 3, "value": markdown_to_plaintext(str(___ivn_226 if ("___ivn_226" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 124.0, "y": 147.33333333333331, "width": 91.33333333333333, "height": 12.0, "page": 3, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 385.3333333333333, "y": 230.0, "width": 203.33333333333331, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_175 if ("___ivn_175" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 318.66666666666663, "y": 226.66666666666666, "width": 64.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___shortcut_229_false) if defined("___shortcut_229_false") else Undefined())), (___ivn_73 if ("___ivn_73" in vars) else ""), ("""%s""" % ((augment(___ivn_41) if defined("___ivn_41") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 58.666666666666664, "y": 687.3333333333333, "width": 11.333333333333332, "height": 11.333333333333332, "page": 3, "value": string_as_bool(___ivn_161 if ("___ivn_161" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 29.333333333333332, "y": 92.66666666666666, "width": 154.66666666666666, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str(___ivn_39 if ("___ivn_39" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 535.3333333333333, "y": 572.6666666666666, "width": 11.333333333333332, "height": 11.333333333333332, "page": 2, "value": string_as_bool(___shortcut_154_false if ("___shortcut_154_false" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 43.33333333333333, "y": 214.66666666666666, "width": 536.6666666666666, "height": 44.666666666666664, "page": 2, "value": markdown_to_plaintext(str(___ivn_158 if ("___ivn_158" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 44.0, "y": 692.6666666666666, "width": 536.6666666666666, "height": 40.666666666666664, "page": 2, "value": markdown_to_plaintext(str(___ivn_230 if ("___ivn_230" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 30.666666666666664, "y": 475.3333333333333, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(___ivn_23 if ("___ivn_23" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 20.666666666666664, "y": 234.66666666666666, "width": 153.33333333333331, "height": 16.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_176 if ("___ivn_176" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 566.0, "y": 15.333333333333332, "width": 24.666666666666664, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 526.6666666666666, "y": 15.333333333333332, "width": 18.666666666666664, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 290.66666666666663, "y": 749.3333333333333, "width": 102.0, "height": 25.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_221 if ("___ivn_221" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 227.33333333333331, "y": 690.6666666666666, "width": 128.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 29.333333333333332, "y": 690.6666666666666, "width": 120.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 155.33333333333331, "y": 690.6666666666666, "width": 66.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_203 if ("___ivn_203" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 362.66666666666663, "y": 717.3333333333333, "width": 158.66666666666666, "height": 19.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 452.66666666666663, "y": 548.6666666666666, "width": 129.33333333333331, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_44 if ("___ivn_44" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 164.66666666666666, "y": 548.6666666666666, "width": 75.33333333333333, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_67 if ("___ivn_67" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 182.66666666666666, "y": 530.6666666666666, "width": 164.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_191 if ("___ivn_191" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 191.33333333333331, "y": 450.0, "width": 182.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_193 if ("___ivn_193" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 398.66666666666663, "y": 450.0, "width": 182.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_194 if ("___ivn_194" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 386.66666666666663, "y": 211.33333333333331, "width": 202.0, "height": 16.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_94 if ("___ivn_94" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 20.666666666666664, "y": 188.66666666666666, "width": 153.33333333333331, "height": 16.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_178 if ("___ivn_178" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 180.0, "y": 188.66666666666666, "width": 200.66666666666666, "height": 16.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_96 if ("___ivn_96" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 386.66666666666663, "y": 188.66666666666666, "width": 202.0, "height": 16.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_97 if ("___ivn_97" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 404.66666666666663, "y": 171.33333333333331, "width": 90.0, "height": 18.0, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 504.0, "y": 172.0, "width": 90.0, "height": 18.0, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 44.0, "y": 374.0, "width": 539.3333333333333, "height": 40.666666666666664, "page": 1, "value": markdown_to_plaintext(str(___ivn_148 if ("___ivn_148" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 44.666666666666664, "y": 86.66666666666666, "width": 536.6666666666666, "height": 45.33333333333333, "page": 1, "value": markdown_to_plaintext(str(___ivn_112 if ("___ivn_112" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 180.0, "y": 211.33333333333331, "width": 200.66666666666666, "height": 16.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_90 if ("___ivn_90" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 179.33333333333331, "y": 237.33333333333331, "width": 117.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___shortcut_229_false) if defined("___shortcut_229_false") else Undefined())), (___ivn_69 if ("___ivn_69" in vars) else ""), ("""%s""" % ((augment(___ivn_37) if defined("___ivn_37") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 148.0, "y": 101.33333333333333, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(___shortcut_108_choice if ("___shortcut_108_choice" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 20.666666666666664, "y": 211.33333333333331, "width": 149.33333333333331, "height": 14.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_177 if ("___ivn_177" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 238.0, "y": 101.33333333333333, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(___shortcut_109_choice if ("___shortcut_109_choice" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 566.0, "y": 15.333333333333332, "width": 24.666666666666664, "height": 12.666666666666666, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 526.6666666666666, "y": 15.333333333333332, "width": 18.666666666666664, "height": 12.666666666666666, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 44.666666666666664, "y": 333.3333333333333, "width": 536.6666666666666, "height": 42.0, "page": 2, "value": markdown_to_plaintext(str(___ivn_157 if ("___ivn_157" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 44.666666666666664, "y": 529.3333333333333, "width": 536.6666666666666, "height": 42.666666666666664, "page": 2, "value": markdown_to_plaintext(str(___ivn_155 if ("___ivn_155" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 45.33333333333333, "y": 432.0, "width": 536.6666666666666, "height": 44.0, "page": 2, "value": markdown_to_plaintext(str(___ivn_156 if ("___ivn_156" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 472.0, "y": 623.3333333333333, "width": 11.333333333333332, "height": 11.333333333333332, "page": 2, "value": string_as_bool(___ivn_23 if ("___ivn_23" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 328.0, "y": 100.66666666666666, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(___shortcut_110_choice if ("___shortcut_110_choice" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 417.3333333333333, "y": 101.33333333333333, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(___shortcut_111_choice if ("___shortcut_111_choice" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 46.666666666666664, "y": 124.66666666666666, "width": 536.6666666666666, "height": 46.666666666666664, "page": 2, "value": markdown_to_plaintext(str(___ivn_159 if ("___ivn_159" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 566.0, "y": 15.333333333333332, "width": 24.666666666666664, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 526.6666666666666, "y": 15.333333333333332, "width": 18.666666666666664, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 504.0, "y": 591.3333333333333, "width": 74.66666666666666, "height": 13.333333333333332, "page": 3, "value": markdown_to_plaintext(str(___ivn_167 if ("___ivn_167" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 504.0, "y": 570.6666666666666, "width": 74.66666666666666, "height": 24.0, "page": 3, "value": markdown_to_plaintext(str(___ivn_168 if ("___ivn_168" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 504.0, "y": 541.3333333333333, "width": 74.66666666666666, "height": 13.333333333333332, "page": 3, "value": markdown_to_plaintext(str(___ivn_169 if ("___ivn_169" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 504.0, "y": 522.0, "width": 74.66666666666666, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str(___ivn_170 if ("___ivn_170" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 504.0, "y": 503.3333333333333, "width": 74.66666666666666, "height": 13.333333333333332, "page": 3, "value": markdown_to_plaintext(str(___ivn_171 if ("___ivn_171" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 504.0, "y": 484.0, "width": 74.66666666666666, "height": 13.333333333333332, "page": 3, "value": markdown_to_plaintext(str(___ivn_172 if ("___ivn_172" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 504.0, "y": 465.3333333333333, "width": 74.66666666666666, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 191.33333333333331, "y": 210.0, "width": 210.0, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 29.333333333333332, "y": 120.0, "width": 196.66666666666666, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str(___ivn_37 if ("___ivn_37" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 232.66666666666666, "y": 119.33333333333333, "width": 70.0, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str(___ivn_38 if ("___ivn_38" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 190.0, "y": 92.66666666666666, "width": 36.0, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str(___ivn_40 if ("___ivn_40" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 232.66666666666666, "y": 92.66666666666666, "width": 70.0, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str(___ivn_41 if ("___ivn_41" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 110.66666666666666, "y": 66.0, "width": 192.0, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str(___ivn_42 if ("___ivn_42" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 317.3333333333333, "y": 120.0, "width": 190.66666666666666, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str((ternary(((augment(___shortcut_222_false) if defined("___shortcut_222_false") else Undefined())), (___ivn_45 if ("___ivn_45" in vars) else ""), ("""%s""" % ((augment(___ivn_37) if defined("___ivn_37") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 514.0, "y": 119.33333333333333, "width": 67.33333333333333, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str((ternary(((augment(___shortcut_222_false) if defined("___shortcut_222_false") else Undefined())), (___ivn_46 if ("___ivn_46" in vars) else ""), ("""%s""" % ((augment(___ivn_38) if defined("___ivn_38") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 317.3333333333333, "y": 92.66666666666666, "width": 149.33333333333331, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str((ternary(((augment(___shortcut_222_false) if defined("___shortcut_222_false") else Undefined())), (___ivn_47 if ("___ivn_47" in vars) else ""), ("""%s""" % ((augment(___ivn_39) if defined("___ivn_39") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 472.66666666666663, "y": 92.66666666666666, "width": 34.666666666666664, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str((ternary(((augment(___shortcut_222_false) if defined("___shortcut_222_false") else Undefined())), (___ivn_48 if ("___ivn_48" in vars) else ""), ("""%s""" % ((augment(___ivn_40) if defined("___ivn_40") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 514.0, "y": 92.66666666666666, "width": 67.33333333333333, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str((ternary(((augment(___shortcut_222_false) if defined("___shortcut_222_false") else Undefined())), (___ivn_49 if ("___ivn_49" in vars) else ""), ("""%s""" % ((augment(___ivn_41) if defined("___ivn_41") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 398.66666666666663, "y": 66.0, "width": 183.33333333333331, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str(___ivn_50 if ("___ivn_50" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 534.6666666666666, "y": 623.3333333333333, "width": 11.333333333333332, "height": 11.333333333333332, "page": 2, "value": string_as_bool(___shortcut_23_false if ("___shortcut_23_false" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 29.333333333333332, "y": 146.66666666666666, "width": 91.33333333333333, "height": 12.0, "page": 3, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 472.0, "y": 572.0, "width": 11.333333333333332, "height": 11.333333333333332, "page": 2, "value": string_as_bool(___ivn_154 if ("___ivn_154" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 72.0, "y": 51.33333333333333, "width": 230.0, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str(___ivn_43 if ("___ivn_43" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 360.0, "y": 51.33333333333333, "width": 221.33333333333331, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str(___ivn_51 if ("___ivn_51" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 58.0, "y": 644.6666666666666, "width": 11.333333333333332, "height": 11.333333333333332, "page": 3, "value": string_as_bool((ternary(((augment(___ivn_114) if defined("___ivn_114") else Undefined()).boolean_or((augment(___ivn_162) if defined("___ivn_162") else Undefined()))), (""), (empty_string())))), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 472.0, "y": 743.3333333333333, "width": 11.333333333333332, "height": 11.333333333333332, "page": 3, "value": string_as_bool(___ivn_160 if ("___ivn_160" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 534.6666666666666, "y": 740.6666666666666, "width": 11.333333333333332, "height": 11.333333333333332, "page": 3, "value": string_as_bool(___shortcut_160_false if ("___shortcut_160_false" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 318.66666666666663, "y": 644.0, "width": 11.333333333333332, "height": 11.333333333333332, "page": 3, "value": string_as_bool((ternary(((augment(___shortcut_114_false) if defined("___shortcut_114_false") else Undefined()).boolean_and((augment(___shortcut_162_false) if defined("___shortcut_162_false") else Undefined()))), (""), (empty_string())))), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 318.66666666666663, "y": 689.3333333333333, "width": 11.333333333333332, "height": 11.333333333333332, "page": 3, "value": string_as_bool(___shortcut_161_false if ("___shortcut_161_false" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 566.0, "y": 15.333333333333332, "width": 24.666666666666664, "height": 12.666666666666666, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 526.6666666666666, "y": 15.333333333333332, "width": 18.666666666666664, "height": 12.666666666666666, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 101.33333333333333, "y": 735.3333333333333, "width": 210.0, "height": 12.666666666666666, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 290.66666666666663, "y": 601.3333333333333, "width": 210.0, "height": 12.666666666666666, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 506.66666666666663, "y": 600.6666666666666, "width": 74.66666666666666, "height": 12.666666666666666, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 290.66666666666663, "y": 574.0, "width": 164.66666666666666, "height": 12.666666666666666, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 461.3333333333333, "y": 574.0, "width": 38.666666666666664, "height": 12.666666666666666, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 506.66666666666663, "y": 574.0, "width": 74.66666666666666, "height": 12.666666666666666, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 290.66666666666663, "y": 628.0, "width": 290.66666666666663, "height": 12.666666666666666, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 335.3333333333333, "y": 529.3333333333333, "width": 246.0, "height": 12.666666666666666, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 371.3333333333333, "y": 547.3333333333333, "width": 210.0, "height": 12.666666666666666, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 333.3333333333333, "y": 510.66666666666663, "width": 248.0, "height": 12.666666666666666, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 180.0, "y": 484.0, "width": 26.666666666666664, "height": 22.666666666666664, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 161.33333333333331, "y": 484.0, "width": 26.0, "height": 22.666666666666664, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 415.3333333333333, "y": 484.0, "width": 26.666666666666664, "height": 22.666666666666664, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 396.0, "y": 484.0, "width": 26.0, "height": 22.666666666666664, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 82.66666666666666, "y": 439.3333333333333, "width": 316.66666666666663, "height": 12.666666666666666, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 450.0, "y": 439.3333333333333, "width": 93.33333333333333, "height": 12.666666666666666, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 187.33333333333331, "y": 244.66666666666666, "width": 205.33333333333331, "height": 12.666666666666666, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 452.0, "y": 244.66666666666666, "width": 93.33333333333333, "height": 12.666666666666666, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 65.33333333333333, "y": 200.66666666666666, "width": 482.66666666666663, "height": 63.33333333333333, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 40.666666666666664, "y": 331.3333333333333, "width": 482.66666666666663, "height": 41.33333333333333, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 512.6666666666666, "y": 112.66666666666666, "width": 80.66666666666666, "height": 17.333333333333332, "page": 4, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 130.0, "y": 699.3333333333333, "width": 11.333333333333332, "height": 11.333333333333332, "page": 4, "value": string_as_bool(""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 228.66666666666666, "y": 699.3333333333333, "width": 11.333333333333332, "height": 11.333333333333332, "page": 4, "value": string_as_bool(""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 22.0, "y": 368.0, "width": 11.333333333333332, "height": 11.333333333333332, "page": 4, "value": string_as_bool(""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 22.0, "y": 350.0, "width": 11.333333333333332, "height": 11.333333333333332, "page": 4, "value": string_as_bool(""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 48.666666666666664, "y": 218.66666666666666, "width": 11.333333333333332, "height": 11.333333333333332, "page": 4, "value": string_as_bool(""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 180.0, "y": 226.66666666666666, "width": 68.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___shortcut_229_false) if defined("___shortcut_229_false") else Undefined())), (___ivn_71 if ("___ivn_71" in vars) else ""), ("""%s""" % ((augment(___ivn_39) if defined("___ivn_39") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 250.0, "y": 226.0, "width": 68.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___shortcut_229_false) if defined("___shortcut_229_false") else Undefined())), (___ivn_72 if ("___ivn_72" in vars) else ""), ("""%s""" % ((augment(___ivn_40) if defined("___ivn_40") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 296.66666666666663, "y": 237.33333333333331, "width": 84.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___shortcut_229_false) if defined("___shortcut_229_false") else Undefined())), (___ivn_70 if ("___ivn_70" in vars) else ""), ("""%s""" % ((augment(___ivn_38) if defined("___ivn_38") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 319.3333333333333, "y": 147.33333333333331, "width": 91.33333333333333, "height": 12.0, "page": 3, "value": markdown_to_plaintext(str(___ivn_225 if ("___ivn_225" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 216.0, "y": 148.0, "width": 91.33333333333333, "height": 12.0, "page": 3, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 45.33333333333333, "y": 332.0, "width": 536.6666666666666, "height": 40.0, "page": 3, "value": markdown_to_plaintext(str(___ivn_163 if ("___ivn_163" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_4735_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBeklhQVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--30b08b7c9ceee9f0d93f71993f69f639f72c537b/Report_Monitor_mpc404.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 3}, "stamps": [{"x": 46.0, "y": 646.6666666666666, "width": 343.3333333333333, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_35) if defined("___ivn_35") else Undefined())), (___ivn_134 if ("___ivn_134" in vars) else ""), (empty_string()))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 418.0, "y": 428.66666666666663, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(___shortcut_86_choice if ("___shortcut_86_choice" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 444.0, "y": 534.6666666666666, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(___shortcut_35_false if ("___shortcut_35_false" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 101.33333333333333, "y": 411.3333333333333, "width": 488.66666666666663, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_81 if ("___ivn_81" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 452.66666666666663, "y": 590.6666666666666, "width": 46.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_35) if defined("___ivn_35") else Undefined())), (___ivn_40 if ("___ivn_40" in vars) else ""), ("""%s""" % ((augment(___ivn_56) if defined("___ivn_56") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 566.0, "y": 15.333333333333332, "width": 24.666666666666664, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 526.6666666666666, "y": 15.333333333333332, "width": 18.666666666666664, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 290.66666666666663, "y": 758.0, "width": 102.0, "height": 25.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_221 if ("___ivn_221" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 227.33333333333331, "y": 699.3333333333333, "width": 128.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 29.333333333333332, "y": 699.3333333333333, "width": 120.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 155.33333333333331, "y": 699.3333333333333, "width": 66.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_203 if ("___ivn_203" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 362.66666666666663, "y": 726.6666666666666, "width": 158.66666666666666, "height": 20.666666666666664, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 48.0, "y": 618.0, "width": 232.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_35) if defined("___ivn_35") else Undefined())), (___ivn_198 if ("___ivn_198" in vars) else ""), ("""%s""" % ((augment(___ivn_29) if defined("___ivn_29") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 286.66666666666663, "y": 618.0, "width": 56.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 348.66666666666663, "y": 618.0, "width": 232.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_35) if defined("___ivn_35") else Undefined())), (___ivn_199 if ("___ivn_199" in vars) else ""), ("""%s""" % ((augment(___ivn_30) if defined("___ivn_30") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 48.0, "y": 590.6666666666666, "width": 160.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_35) if defined("___ivn_35") else Undefined())), (___ivn_37 if ("___ivn_37" in vars) else ""), ("""%s""" % ((augment(___ivn_52) if defined("___ivn_52") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 214.0, "y": 590.0, "width": 87.33333333333333, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_35) if defined("___ivn_35") else Undefined())), (___ivn_38 if ("___ivn_38" in vars) else ""), ("""%s""" % ((augment(___ivn_53) if defined("___ivn_53") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 307.3333333333333, "y": 590.0, "width": 139.33333333333331, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_35) if defined("___ivn_35") else Undefined())), (___ivn_39 if ("___ivn_39" in vars) else ""), ("""%s""" % ((augment(___ivn_54) if defined("___ivn_54") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 504.66666666666663, "y": 590.6666666666666, "width": 77.33333333333333, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_35) if defined("___ivn_35") else Undefined())), (___ivn_41 if ("___ivn_41" in vars) else ""), ("""%s""" % ((augment(___ivn_55) if defined("___ivn_55") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 137.33333333333331, "y": 564.6666666666666, "width": 128.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_35) if defined("___ivn_35") else Undefined())), (___ivn_42 if ("___ivn_42" in vars) else ""), ("""%s""" % ((augment(___ivn_57) if defined("___ivn_57") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 443.3333333333333, "y": 564.6666666666666, "width": 138.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_35) if defined("___ivn_35") else Undefined())), (___ivn_44 if ("___ivn_44" in vars) else ""), ("""%s""" % ((augment(___ivn_58) if defined("___ivn_58") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 191.33333333333331, "y": 537.3333333333333, "width": 192.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_60 if ("___ivn_60" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 239.33333333333331, "y": 492.0, "width": 342.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___shortcut_229_false) if defined("___shortcut_229_false") else Undefined())), (___ivn_69 if ("___ivn_69" in vars) else ""), ("""%s""" % ((augment(___ivn_37) if defined("___ivn_37") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 155.33333333333331, "y": 465.3333333333333, "width": 156.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___shortcut_229_false) if defined("___shortcut_229_false") else Undefined())), (___ivn_71 if ("___ivn_71" in vars) else ""), ("""%s""" % ((augment(___ivn_39) if defined("___ivn_39") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 317.3333333333333, "y": 465.3333333333333, "width": 66.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___shortcut_229_false) if defined("___shortcut_229_false") else Undefined())), (___ivn_72 if ("___ivn_72" in vars) else ""), ("""%s""" % ((augment(___ivn_40) if defined("___ivn_40") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 389.3333333333333, "y": 465.3333333333333, "width": 102.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___shortcut_229_false) if defined("___shortcut_229_false") else Undefined())), (___ivn_73 if ("___ivn_73" in vars) else ""), ("""%s""" % ((augment(___ivn_41) if defined("___ivn_41") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 47.33333333333333, "y": 465.3333333333333, "width": 102.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___shortcut_229_false) if defined("___shortcut_229_false") else Undefined())), (___ivn_70 if ("___ivn_70" in vars) else ""), ("""%s""" % ((augment(___ivn_38) if defined("___ivn_38") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 138.66666666666666, "y": 518.6666666666666, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 112.0, "y": 518.6666666666666, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool((ternary(((augment(___ivn_115) if defined("___ivn_115") else Undefined())), (""), (empty_string())))), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 48.666666666666664, "y": 428.66666666666663, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(___shortcut_83_choice if ("___shortcut_83_choice" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 174.66666666666666, "y": 428.66666666666663, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(___shortcut_84_choice if ("___shortcut_84_choice" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 336.66666666666663, "y": 428.66666666666663, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(___shortcut_85_choice if ("___shortcut_85_choice" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 508.0, "y": 428.66666666666663, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(___shortcut_87_choice if ("___shortcut_87_choice" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 48.666666666666664, "y": 410.66666666666663, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(___shortcut_88_choice if ("___shortcut_88_choice" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 356.66666666666663, "y": 256.0, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(___ivn_145 if ("___ivn_145" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 386.66666666666663, "y": 256.0, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(___shortcut_145_false if ("___shortcut_145_false" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 566.0, "y": 15.333333333333332, "width": 24.666666666666664, "height": 12.666666666666666, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 526.6666666666666, "y": 15.333333333333332, "width": 18.666666666666664, "height": 12.666666666666666, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 46.0, "y": 705.3333333333333, "width": 343.3333333333333, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_35) if defined("___ivn_35") else Undefined())), (___ivn_128 if ("___ivn_128" in vars) else ""), (empty_string()))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 392.66666666666663, "y": 705.3333333333333, "width": 190.0, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_35) if defined("___ivn_35") else Undefined())), (___ivn_129 if ("___ivn_129" in vars) else ""), (empty_string()))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 46.0, "y": 676.0, "width": 343.3333333333333, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_35) if defined("___ivn_35") else Undefined())), (___ivn_131 if ("___ivn_131" in vars) else ""), (empty_string()))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 392.66666666666663, "y": 676.0, "width": 190.0, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_35) if defined("___ivn_35") else Undefined())), (___ivn_132 if ("___ivn_132" in vars) else ""), (empty_string()))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 392.66666666666663, "y": 646.6666666666666, "width": 190.0, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_35) if defined("___ivn_35") else Undefined())), (___ivn_135 if ("___ivn_135" in vars) else ""), (empty_string()))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 19.333333333333332, "y": 254.66666666666666, "width": 150.66666666666666, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 278.66666666666663, "y": 254.66666666666666, "width": 136.0, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 418.0, "y": 254.66666666666666, "width": 90.0, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 511.3333333333333, "y": 254.66666666666666, "width": 79.33333333333333, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 19.333333333333332, "y": 225.33333333333331, "width": 150.66666666666666, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 47.33333333333333, "y": 484.0, "width": 536.6666666666666, "height": 40.0, "page": 2, "value": markdown_to_plaintext(str(___ivn_152 if ("___ivn_152" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 45.33333333333333, "y": 385.3333333333333, "width": 536.6666666666666, "height": 40.0, "page": 2, "value": markdown_to_plaintext(str(___ivn_153 if ("___ivn_153" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 417.3333333333333, "y": 535.3333333333333, "width": 11.333333333333332, "height": 11.333333333333332, "page": 1, "value": string_as_bool(___ivn_35 if ("___ivn_35" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 290.66666666666663, "y": 390.66666666666663, "width": 200.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_124 if ("___ivn_124" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 46.666666666666664, "y": 283.3333333333333, "width": 200.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_193 if ("___ivn_193" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 407.3333333333333, "y": 283.3333333333333, "width": 156.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_126 if ("___ivn_126" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 47.33333333333333, "y": 197.33333333333331, "width": 536.6666666666666, "height": 40.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_146 if ("___ivn_146" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 278.66666666666663, "y": 225.33333333333331, "width": 136.0, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 418.0, "y": 225.33333333333331, "width": 90.0, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 511.3333333333333, "y": 225.33333333333331, "width": 79.33333333333333, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 19.333333333333332, "y": 196.0, "width": 150.66666666666666, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 173.33333333333331, "y": 196.0, "width": 102.66666666666666, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 278.66666666666663, "y": 196.0, "width": 136.0, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 418.0, "y": 196.0, "width": 90.0, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 511.3333333333333, "y": 196.0, "width": 79.33333333333333, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 19.333333333333332, "y": 166.0, "width": 150.66666666666666, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 173.33333333333331, "y": 166.0, "width": 102.66666666666666, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 278.66666666666663, "y": 166.0, "width": 136.0, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 418.0, "y": 166.0, "width": 90.0, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 511.3333333333333, "y": 166.0, "width": 79.33333333333333, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 19.333333333333332, "y": 136.66666666666666, "width": 150.66666666666666, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 173.33333333333331, "y": 136.66666666666666, "width": 102.66666666666666, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 278.66666666666663, "y": 136.66666666666666, "width": 136.0, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 418.0, "y": 136.66666666666666, "width": 90.0, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 511.3333333333333, "y": 136.66666666666666, "width": 79.33333333333333, "height": 25.333333333333332, "page": 2, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 566.0, "y": 15.333333333333332, "width": 24.666666666666664, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 526.6666666666666, "y": 15.333333333333332, "width": 18.666666666666664, "height": 12.666666666666666, "page": 3, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 58.666666666666664, "y": 680.0, "width": 162.66666666666666, "height": 23.333333333333332, "page": 3, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 58.666666666666664, "y": 634.0, "width": 162.66666666666666, "height": 23.333333333333332, "page": 3, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 512.6666666666666, "y": 585.3333333333333, "width": 80.66666666666666, "height": 17.333333333333332, "page": 3, "value": markdown_to_plaintext(str("")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 48.0, "y": 516.6666666666666, "width": 11.333333333333332, "height": 11.333333333333332, "page": 2, "value": string_as_bool(___shortcut_150_false if ("___shortcut_150_false" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 47.33333333333333, "y": 482.66666666666663, "width": 536.6666666666666, "height": 40.0, "page": 2, "value": markdown_to_plaintext(str(___ivn_151 if ("___ivn_151" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 47.33333333333333, "y": 349.3333333333333, "width": 536.6666666666666, "height": 39.33333333333333, "page": 1, "value": markdown_to_plaintext(str(___ivn_125 if ("___ivn_125" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 48.0, "y": 532.6666666666666, "width": 11.333333333333332, "height": 11.333333333333332, "page": 2, "value": string_as_bool(___ivn_150 if ("___ivn_150" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_5226_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBelZsQVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--3c908ad84390a309025ba91f52875b13470c50b4/Treatment%20Plan.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 1}, "stamps": [{"x": 358.0, "y": 698.0, "width": 156.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 383.3333333333333, "y": 428.0, "width": 179.33333333333331, "height": 21.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_138 if ("___ivn_138" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 38.0, "y": 517.3333333333333, "width": 336.66666666666663, "height": 22.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_134 if ("___ivn_134" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 38.666666666666664, "y": 674.6666666666666, "width": 112.66666666666666, "height": 12.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 38.666666666666664, "y": 345.3333333333333, "width": 336.66666666666663, "height": 22.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_181 if ("___ivn_181" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 381.3333333333333, "y": 546.0, "width": 179.33333333333331, "height": 22.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_132 if ("___ivn_132" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 38.0, "y": 428.0, "width": 336.66666666666663, "height": 22.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_137 if ("___ivn_137" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 38.666666666666664, "y": 373.3333333333333, "width": 336.66666666666663, "height": 22.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_143 if ("___ivn_143" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 36.666666666666664, "y": 575.3333333333333, "width": 336.66666666666663, "height": 22.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_128 if ("___ivn_128" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 382.66666666666663, "y": 372.66666666666663, "width": 179.33333333333331, "height": 22.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_144 if ("___ivn_144" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 383.3333333333333, "y": 347.3333333333333, "width": 179.33333333333331, "height": 22.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_182 if ("___ivn_182" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 226.0, "y": 675.3333333333333, "width": 126.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 38.0, "y": 544.6666666666666, "width": 336.66666666666663, "height": 22.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_131 if ("___ivn_131" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 382.66666666666663, "y": 518.6666666666666, "width": 179.33333333333331, "height": 22.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_135 if ("___ivn_135" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 158.0, "y": 674.0, "width": 67.33333333333333, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_203 if ("___ivn_203" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 38.0, "y": 398.66666666666663, "width": 336.66666666666663, "height": 22.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_140 if ("___ivn_140" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 382.66666666666663, "y": 574.0, "width": 179.33333333333331, "height": 22.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_129 if ("___ivn_129" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 383.3333333333333, "y": 401.3333333333333, "width": 179.33333333333331, "height": 22.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_141 if ("___ivn_141" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 287.3333333333333, "y": 747.3333333333333, "width": 97.33333333333333, "height": 28.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_221 if ("___ivn_221" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_5227_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBelpsQVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--c055e771a719d68fb421eb7d6542768977914dfe/Clinicians%20Affidavit%20Report%20Extension%20Amendment%20of%20Treatment.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 4}, "stamps": [{"x": 230.0, "y": 682.6666666666666, "width": 120.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 34.666666666666664, "y": 681.3333333333333, "width": 118.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 158.66666666666666, "y": 682.6666666666666, "width": 65.33333333333333, "height": 12.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_203 if ("___ivn_203" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 287.3333333333333, "y": 742.6666666666666, "width": 94.66666666666666, "height": 30.666666666666664, "page": 1, "value": markdown_to_plaintext(str(___ivn_221 if ("___ivn_221" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 356.0, "y": 700.6666666666666, "width": 158.0, "height": 13.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_5228_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBemRsQVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--6dd9ef42749345bbff83385af60e3c300a7c13cf/Motion%20to%20Waive%20Respondent%20Appearance.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 1}, "stamps": [], "should_watermark": True}


	def ___pdf_template_5229_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBemhsQVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--9cb888d0d0569a276eaec2380139faaee4c02d4b/Motion%20to%20Extend%20Amend%20Treatment%20Order.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 1}, "stamps": [{"x": 38.666666666666664, "y": 739.3333333333333, "width": 10.666666666666666, "height": 10.666666666666666, "page": 1, "value": string_as_bool((ternary(((augment(___shortcut_121_choice) if defined("___shortcut_121_choice") else Undefined())), (___shortcut_121_choice if ("___shortcut_121_choice" in vars) else ""), (empty_string())))), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 286.0, "y": 362.66666666666663, "width": 160.0, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_39 if ("___ivn_39" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 383.3333333333333, "y": 618.6666666666666, "width": 10.666666666666666, "height": 10.666666666666666, "page": 1, "value": string_as_bool(___shortcut_122_choice if ("___shortcut_122_choice" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 40.666666666666664, "y": 674.0, "width": 114.66666666666666, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 383.3333333333333, "y": 413.3333333333333, "width": 83.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 290.0, "y": 387.3333333333333, "width": 197.33333333333331, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_37 if ("___ivn_37" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 368.66666666666663, "y": 334.66666666666663, "width": 133.33333333333331, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_42 if ("___ivn_42" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 240.66666666666666, "y": 675.3333333333333, "width": 113.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 286.66666666666663, "y": 414.66666666666663, "width": 83.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 157.33333333333331, "y": 674.0, "width": 83.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_203 if ("___ivn_203" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 221.33333333333331, "y": 544.6666666666666, "width": 205.33333333333331, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_194 if ("___ivn_194" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 475.3333333333333, "y": 415.3333333333333, "width": 83.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 445.3333333333333, "y": 363.3333333333333, "width": 50.666666666666664, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_40 if ("___ivn_40" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 297.3333333333333, "y": 618.0, "width": 10.666666666666666, "height": 10.666666666666666, "page": 1, "value": string_as_bool(___shortcut_121_choice if ("___shortcut_121_choice" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 274.0, "y": 577.3333333333333, "width": 205.33333333333331, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_193 if ("___ivn_193" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 492.66666666666663, "y": 359.3333333333333, "width": 83.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_41 if ("___ivn_41" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 491.3333333333333, "y": 386.66666666666663, "width": 83.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_38 if ("___ivn_38" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 287.3333333333333, "y": 745.3333333333333, "width": 97.33333333333333, "height": 38.666666666666664, "page": 1, "value": markdown_to_plaintext(str(___ivn_221 if ("___ivn_221" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 354.0, "y": 693.3333333333333, "width": 160.0, "height": 12.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 202.0, "y": 739.3333333333333, "width": 10.666666666666666, "height": 10.666666666666666, "page": 1, "value": string_as_bool(___shortcut_122_choice if ("___shortcut_122_choice" in vars) else ""), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_6093_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBeXpvQVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--0ffe7d56eb1939eeab0a579f51807bebd61c5ca4/Clinician%20Affidavit.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 4}, "stamps": [{"x": 358.66666666666663, "y": 699.3333333333333, "width": 158.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 228.0, "y": 680.6666666666666, "width": 124.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 156.66666666666666, "y": 682.0, "width": 68.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_203 if ("___ivn_203" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 36.666666666666664, "y": 681.3333333333333, "width": 117.33333333333333, "height": 12.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 288.66666666666663, "y": 741.3333333333333, "width": 97.33333333333333, "height": 28.666666666666664, "page": 1, "value": markdown_to_plaintext(str(___ivn_221 if ("___ivn_221" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 38.0, "y": 739.3333333333333, "width": 10.666666666666666, "height": 10.666666666666666, "page": 1, "value": string_as_bool((ternary(((augment(___shortcut_121_choice) if defined("___shortcut_121_choice") else Undefined())), (""), (empty_string())))), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}, {"x": 185.33333333333331, "y": 740.0, "width": 10.666666666666666, "height": 10.666666666666666, "page": 1, "value": string_as_bool((ternary(((augment(___shortcut_122_choice) if defined("___shortcut_122_choice") else Undefined())), (""), (empty_string())))), "datatype": "checkbox", "context_height": 792.0, "context_width": 612.0, "font_size": 12, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_6183_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBN1R0QVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--11fb9429beb9f4340594a21f595a79920bef8351/Rogers%20Review%20Hearing%20Checklist%20-%20Suffolk.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 2}, "stamps": [{"x": 352.66666666666663, "y": 596.6666666666666, "width": 182.0, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 434.66666666666663, "y": 679.3333333333333, "width": 43.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 348.66666666666663, "y": 679.3333333333333, "width": 83.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 262.0, "y": 678.0, "width": 83.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 434.66666666666663, "y": 208.0, "width": 83.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_195 if ("___ivn_195" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 137.33333333333331, "y": 207.33333333333331, "width": 116.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 8, "font_color": "000000"}, {"x": 383.3333333333333, "y": 304.0, "width": 115.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 318.0, "y": 422.66666666666663, "width": 115.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 192.66666666666666, "y": 410.66666666666663, "width": 20.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 136.0, "y": 409.3333333333333, "width": 54.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 75.33333333333333, "y": 410.0, "width": 60.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 232.66666666666666, "y": 448.66666666666663, "width": 26.666666666666664, "height": 11.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 164.0, "y": 448.0, "width": 63.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 92.0, "y": 447.3333333333333, "width": 63.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 231.33333333333331, "y": 558.0, "width": 115.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 190.0, "y": 560.0, "width": 20.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 136.66666666666666, "y": 558.6666666666666, "width": 54.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 74.66666666666666, "y": 558.6666666666666, "width": 60.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_6184_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBOC90QVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--66e9eaa63ecf18992d2cb7d1dd3cd0ffe7241430/Rogers%20Review%20Hearing%20Checklist%20-%20Barnstable.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 2}, "stamps": [{"x": 352.0, "y": 597.3333333333333, "width": 184.0, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 431.3333333333333, "y": 678.6666666666666, "width": 83.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 348.0, "y": 679.3333333333333, "width": 83.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 266.0, "y": 678.0, "width": 83.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 434.0, "y": 208.0, "width": 99.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_195 if ("___ivn_195" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 8, "font_color": "000000"}, {"x": 138.66666666666666, "y": 207.33333333333331, "width": 117.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 8, "font_color": "000000"}, {"x": 383.3333333333333, "y": 303.3333333333333, "width": 114.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 78.66666666666666, "y": 410.0, "width": 114.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 421.3333333333333, "y": 422.0, "width": 22.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 373.3333333333333, "y": 422.66666666666663, "width": 48.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 317.3333333333333, "y": 422.0, "width": 55.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 209.33333333333331, "y": 446.66666666666663, "width": 32.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 146.0, "y": 446.0, "width": 55.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 90.0, "y": 446.0, "width": 55.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 231.33333333333331, "y": 558.0, "width": 114.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 187.33333333333331, "y": 558.6666666666666, "width": 22.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 136.0, "y": 558.6666666666666, "width": 48.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 76.0, "y": 557.3333333333333, "width": 55.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_6185_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBOUx0QVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--1fdc22b9d8724f2611335b8f05a137ed0eda58bf/Rogers%20Review%20Hearing%20Checklist%20-%20Berkshire.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 2}, "stamps": [{"x": 352.66666666666663, "y": 596.6666666666666, "width": 180.0, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 410.66666666666663, "y": 677.3333333333333, "width": 69.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 338.66666666666663, "y": 677.3333333333333, "width": 69.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 264.66666666666663, "y": 677.3333333333333, "width": 70.66666666666666, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 432.0, "y": 208.0, "width": 99.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_195 if ("___ivn_195" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 138.0, "y": 209.33333333333331, "width": 116.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 8, "font_color": "000000"}, {"x": 382.66666666666663, "y": 303.3333333333333, "width": 146.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 211.33333333333331, "y": 447.3333333333333, "width": 27.333333333333332, "height": 11.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 149.33333333333331, "y": 446.66666666666663, "width": 58.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 88.0, "y": 446.66666666666663, "width": 58.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 196.66666666666666, "y": 411.3333333333333, "width": 20.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 138.0, "y": 411.3333333333333, "width": 55.33333333333333, "height": 11.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 76.66666666666666, "y": 410.66666666666663, "width": 58.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 316.66666666666663, "y": 422.66666666666663, "width": 124.66666666666666, "height": 11.333333333333332, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 232.0, "y": 558.0, "width": 114.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 190.66666666666666, "y": 557.3333333333333, "width": 20.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 134.66666666666666, "y": 558.0, "width": 55.33333333333333, "height": 11.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 76.0, "y": 557.3333333333333, "width": 58.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_6186_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBOVB0QVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--a36cb7b763d880891d38c53e8275516092520308/Rogers%20Review%20Hearing%20Checklist%20-%20Bristol.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 2}, "stamps": [{"x": 351.3333333333333, "y": 596.6666666666666, "width": 182.66666666666666, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 417.3333333333333, "y": 678.6666666666666, "width": 33.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 330.0, "y": 677.3333333333333, "width": 83.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 264.66666666666663, "y": 678.0, "width": 64.0, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 432.66666666666663, "y": 208.66666666666666, "width": 98.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_195 if ("___ivn_195" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 138.66666666666666, "y": 209.33333333333331, "width": 112.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 8, "font_color": "000000"}, {"x": 208.66666666666666, "y": 446.66666666666663, "width": 31.333333333333332, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 147.33333333333331, "y": 446.66666666666663, "width": 57.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 88.0, "y": 446.66666666666663, "width": 57.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 382.0, "y": 303.3333333333333, "width": 146.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 318.0, "y": 421.3333333333333, "width": 113.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 232.66666666666666, "y": 558.6666666666666, "width": 113.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 190.0, "y": 410.0, "width": 25.333333333333332, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 135.33333333333331, "y": 410.66666666666663, "width": 52.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 76.66666666666666, "y": 410.0, "width": 57.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 185.33333333333331, "y": 558.6666666666666, "width": 25.333333333333332, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 132.66666666666666, "y": 558.6666666666666, "width": 52.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 76.0, "y": 558.6666666666666, "width": 57.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_6187_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBOVR0QVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--287e30c4521c6ac6e4c5804d2422b3f9650cfb4a/Rogers%20Review%20Hearing%20Checklist%20-%20Dukes.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 2}, "stamps": [{"x": 353.3333333333333, "y": 597.3333333333333, "width": 179.33333333333331, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 441.3333333333333, "y": 678.6666666666666, "width": 40.666666666666664, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 352.0, "y": 678.6666666666666, "width": 83.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 264.66666666666663, "y": 678.0, "width": 83.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 432.66666666666663, "y": 208.0, "width": 99.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_195 if ("___ivn_195" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 137.33333333333331, "y": 208.66666666666666, "width": 116.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 8, "font_color": "000000"}, {"x": 206.66666666666666, "y": 446.66666666666663, "width": 37.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 146.0, "y": 446.66666666666663, "width": 54.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 89.33333333333333, "y": 446.66666666666663, "width": 54.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 382.66666666666663, "y": 302.66666666666663, "width": 144.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 190.66666666666666, "y": 411.3333333333333, "width": 23.333333333333332, "height": 11.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 131.33333333333331, "y": 410.66666666666663, "width": 54.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 76.0, "y": 410.0, "width": 54.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 318.0, "y": 422.0, "width": 115.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 230.0, "y": 557.3333333333333, "width": 115.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 187.33333333333331, "y": 559.3333333333333, "width": 23.333333333333332, "height": 11.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 131.33333333333331, "y": 558.6666666666666, "width": 54.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 76.66666666666666, "y": 558.6666666666666, "width": 54.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_6188_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBOVh0QVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--8eba82a71a949cf071897060b10000bcffcc44d0/Rogers%20Review%20Hearing%20Checklist%20-%20Essex.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 2}, "stamps": [{"x": 354.66666666666663, "y": 596.6666666666666, "width": 180.66666666666666, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s  %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 437.3333333333333, "y": 677.3333333333333, "width": 53.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 351.3333333333333, "y": 677.3333333333333, "width": 83.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 266.0, "y": 677.3333333333333, "width": 83.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 433.3333333333333, "y": 208.66666666666666, "width": 99.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_195 if ("___ivn_195" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 138.66666666666666, "y": 208.66666666666666, "width": 116.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 8, "font_color": "000000"}, {"x": 203.33333333333331, "y": 447.3333333333333, "width": 55.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 147.33333333333331, "y": 446.66666666666663, "width": 55.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 88.66666666666666, "y": 446.66666666666663, "width": 55.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 382.66666666666663, "y": 303.3333333333333, "width": 118.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 188.66666666666666, "y": 410.66666666666663, "width": 22.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 134.0, "y": 410.0, "width": 50.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 74.66666666666666, "y": 409.3333333333333, "width": 55.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 317.3333333333333, "y": 422.0, "width": 118.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 229.33333333333331, "y": 558.0, "width": 118.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 186.0, "y": 558.0, "width": 22.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 133.33333333333331, "y": 557.3333333333333, "width": 50.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 77.33333333333333, "y": 557.3333333333333, "width": 55.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_6189_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBOWJ0QVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--7de7e7b620e4a6ebdd99020f2e6888b28dd3161a/Rogers%20Review%20Hearing%20Checklist%20-%20Franklin.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 2}, "stamps": [{"x": 198.0, "y": 446.66666666666663, "width": 52.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 143.33333333333331, "y": 446.66666666666663, "width": 52.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 88.66666666666666, "y": 446.0, "width": 52.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 352.0, "y": 596.6666666666666, "width": 184.0, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 438.66666666666663, "y": 678.6666666666666, "width": 29.333333333333332, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 350.0, "y": 678.0, "width": 83.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 265.3333333333333, "y": 678.0, "width": 83.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 432.66666666666663, "y": 207.33333333333331, "width": 98.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_195 if ("___ivn_195" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 138.66666666666666, "y": 208.0, "width": 114.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 8, "font_color": "000000"}, {"x": 382.0, "y": 302.66666666666663, "width": 144.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 186.0, "y": 410.0, "width": 20.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 130.0, "y": 410.0, "width": 52.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 76.0, "y": 410.0, "width": 52.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 317.3333333333333, "y": 422.0, "width": 110.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 231.33333333333331, "y": 558.0, "width": 110.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 181.33333333333331, "y": 558.0, "width": 20.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 126.66666666666666, "y": 557.3333333333333, "width": 52.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 75.33333333333333, "y": 558.0, "width": 52.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_6190_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBOWZ0QVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--95ed103da0c2f887c7a4fb54236331c2cd19ff38/Rogers%20Review%20Hearing%20Checklist%20-%20Hampshire.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 2}, "stamps": [{"x": 352.0, "y": 597.3333333333333, "width": 182.66666666666666, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 382.0, "y": 678.0, "width": 55.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 322.0, "y": 677.3333333333333, "width": 55.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 264.0, "y": 677.3333333333333, "width": 55.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 432.66666666666663, "y": 208.66666666666666, "width": 103.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_195 if ("___ivn_195" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 138.66666666666666, "y": 209.33333333333331, "width": 115.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 8, "font_color": "000000"}, {"x": 382.66666666666663, "y": 303.3333333333333, "width": 145.33333333333331, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 210.66666666666666, "y": 446.66666666666663, "width": 32.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 150.66666666666666, "y": 446.66666666666663, "width": 55.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 92.66666666666666, "y": 446.66666666666663, "width": 55.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 186.66666666666666, "y": 410.66666666666663, "width": 25.333333333333332, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 134.66666666666666, "y": 410.0, "width": 50.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 78.0, "y": 410.0, "width": 55.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 318.0, "y": 422.0, "width": 120.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 231.33333333333331, "y": 558.0, "width": 112.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 186.0, "y": 558.6666666666666, "width": 25.333333333333332, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 134.0, "y": 558.0, "width": 50.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 78.0, "y": 558.0, "width": 55.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_6191_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBOWp0QVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--01591eeeef7b52164acee136e2aa5765eb1b318d/Rogers%20Review%20Hearing%20Checklist%20-%20Middlesex.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 2}, "stamps": [{"x": 353.3333333333333, "y": 596.6666666666666, "width": 180.66666666666666, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 384.66666666666663, "y": 678.0, "width": 56.666666666666664, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 325.3333333333333, "y": 678.0, "width": 56.666666666666664, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 267.3333333333333, "y": 678.6666666666666, "width": 56.666666666666664, "height": 11.333333333333332, "page": 2, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 432.66666666666663, "y": 209.33333333333331, "width": 98.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_195 if ("___ivn_195" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 139.33333333333331, "y": 209.33333333333331, "width": 114.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 8, "font_color": "000000"}, {"x": 382.0, "y": 302.66666666666663, "width": 146.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 210.66666666666666, "y": 446.66666666666663, "width": 26.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 150.0, "y": 446.66666666666663, "width": 56.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 90.66666666666666, "y": 446.66666666666663, "width": 56.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 320.0, "y": 422.0, "width": 112.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 232.66666666666666, "y": 558.0, "width": 112.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 194.66666666666666, "y": 410.66666666666663, "width": 20.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 136.0, "y": 410.66666666666663, "width": 56.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 77.33333333333333, "y": 410.66666666666663, "width": 56.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 188.66666666666666, "y": 558.6666666666666, "width": 20.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 131.33333333333331, "y": 558.6666666666666, "width": 56.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 75.33333333333333, "y": 558.6666666666666, "width": 56.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_6192_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBOW50QVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--ab8105c6f3217037bc149cdd5f772b56dc47039b/Rogers%20Review%20Hearing%20Checklist%20-%20Norfolk.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 2}, "stamps": [{"x": 352.0, "y": 596.6666666666666, "width": 182.0, "height": 12.0, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 399.3333333333333, "y": 678.0, "width": 62.0, "height": 12.0, "page": 2, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 334.66666666666663, "y": 678.6666666666666, "width": 62.0, "height": 12.0, "page": 2, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 264.66666666666663, "y": 678.6666666666666, "width": 68.0, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 434.0, "y": 208.66666666666666, "width": 97.33333333333333, "height": 12.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_195 if ("___ivn_195" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 140.0, "y": 208.66666666666666, "width": 113.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 8, "font_color": "000000"}, {"x": 383.3333333333333, "y": 303.3333333333333, "width": 146.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 208.66666666666666, "y": 447.3333333333333, "width": 24.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 150.0, "y": 447.3333333333333, "width": 56.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 90.66666666666666, "y": 447.3333333333333, "width": 56.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 192.66666666666666, "y": 411.3333333333333, "width": 20.666666666666664, "height": 11.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 133.33333333333331, "y": 410.0, "width": 56.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 76.0, "y": 410.0, "width": 56.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 318.0, "y": 422.0, "width": 115.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 230.66666666666666, "y": 558.0, "width": 115.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 188.66666666666666, "y": 558.6666666666666, "width": 20.666666666666664, "height": 11.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 133.33333333333331, "y": 558.6666666666666, "width": 56.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 76.66666666666666, "y": 558.6666666666666, "width": 56.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_6193_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBOXJ0QVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--3dff73e20898a29c2281acbd3dba1c2d70f387e3/Rogers%20Review%20Hearing%20Checklist%20-%20Nantucket.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 2}, "stamps": [{"x": 351.3333333333333, "y": 572.0, "width": 182.66666666666666, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 402.0, "y": 653.3333333333333, "width": 64.0, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 334.0, "y": 653.3333333333333, "width": 64.0, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 264.0, "y": 653.3333333333333, "width": 68.0, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 434.0, "y": 194.0, "width": 97.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_195 if ("___ivn_195" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 138.0, "y": 194.0, "width": 117.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 8, "font_color": "000000"}, {"x": 382.66666666666663, "y": 303.3333333333333, "width": 145.33333333333331, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 198.66666666666666, "y": 412.0, "width": 20.666666666666664, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 136.66666666666666, "y": 410.66666666666663, "width": 54.0, "height": 11.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 76.66666666666666, "y": 409.3333333333333, "width": 56.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 214.66666666666666, "y": 448.0, "width": 30.0, "height": 12.0, "page": 1, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 152.66666666666666, "y": 446.0, "width": 56.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 92.66666666666666, "y": 446.66666666666663, "width": 56.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 318.0, "y": 422.0, "width": 112.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 234.0, "y": 558.0, "width": 112.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 188.0, "y": 559.3333333333333, "width": 20.666666666666664, "height": 12.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 132.66666666666666, "y": 557.3333333333333, "width": 54.0, "height": 11.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 76.0, "y": 558.0, "width": 56.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_6194_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBOXZ0QVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--2007805821b1d45a5e2413b95a5e3d859b6f332a/Rogers%20Review%20Hearing%20Checklist%20-%20Plymouth.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 2}, "stamps": [{"x": 352.0, "y": 597.3333333333333, "width": 181.33333333333331, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 404.66666666666663, "y": 678.0, "width": 73.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 336.0, "y": 677.3333333333333, "width": 67.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 266.0, "y": 678.0, "width": 68.66666666666666, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 381.3333333333333, "y": 303.3333333333333, "width": 148.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 433.3333333333333, "y": 208.66666666666666, "width": 98.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_195 if ("___ivn_195" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 140.0, "y": 208.66666666666666, "width": 112.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 8, "font_color": "000000"}, {"x": 212.66666666666666, "y": 446.66666666666663, "width": 23.333333333333332, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 148.66666666666666, "y": 446.66666666666663, "width": 61.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 91.33333333333333, "y": 446.66666666666663, "width": 58.0, "height": 11.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 188.66666666666666, "y": 410.66666666666663, "width": 23.333333333333332, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 126.66666666666666, "y": 410.0, "width": 61.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 75.33333333333333, "y": 409.3333333333333, "width": 50.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 316.66666666666663, "y": 422.0, "width": 123.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 230.0, "y": 558.0, "width": 114.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 184.66666666666666, "y": 558.6666666666666, "width": 23.333333333333332, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 127.33333333333333, "y": 557.3333333333333, "width": 55.33333333333333, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 76.66666666666666, "y": 558.0, "width": 50.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_6195_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBOXp0QVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--1b3f4c390e7104072e6b52e3c355c58eb94bd550/Rogers%20Review%20Hearing%20Checklist%20-%20Worcester.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 2}, "stamps": [{"x": 352.0, "y": 597.3333333333333, "width": 184.66666666666666, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 435.3333333333333, "y": 678.6666666666666, "width": 46.0, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 350.66666666666663, "y": 678.0, "width": 83.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 264.66666666666663, "y": 678.0, "width": 83.33333333333333, "height": 10.666666666666666, "page": 2, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 433.3333333333333, "y": 209.33333333333331, "width": 99.33333333333333, "height": 11.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_195 if ("___ivn_195" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 137.33333333333331, "y": 208.66666666666666, "width": 118.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_206 if ("___ivn_206" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 8, "font_color": "000000"}, {"x": 382.0, "y": 303.3333333333333, "width": 144.0, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""%s %s %s\'s attorney""" % ((augment(___ivn_202) if defined("___ivn_202") else empty_string()),(augment(___ivn_204) if defined("___ivn_204") else empty_string()),(augment(___ivn_205) if defined("___ivn_205") else empty_string()))))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 209.33333333333331, "y": 447.3333333333333, "width": 24.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_205 if ("___ivn_205" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 149.33333333333331, "y": 447.3333333333333, "width": 56.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_204 if ("___ivn_204" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 90.66666666666666, "y": 447.3333333333333, "width": 56.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_202 if ("___ivn_202" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 190.66666666666666, "y": 411.3333333333333, "width": 21.333333333333332, "height": 11.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 134.0, "y": 410.66666666666663, "width": 54.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 76.0, "y": 410.66666666666663, "width": 56.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 318.0, "y": 422.0, "width": 116.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 230.0, "y": 557.3333333333333, "width": 116.66666666666666, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str((ternary(((augment(___ivn_246) if defined("___ivn_246") else Undefined())), (___ivn_228 if ("___ivn_228" in vars) else ""), ("""opposing counsel"""))))), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 189.33333333333331, "y": 557.3333333333333, "width": 21.333333333333332, "height": 11.333333333333332, "page": 1, "value": markdown_to_plaintext(str(___ivn_200 if ("___ivn_200" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 134.0, "y": 557.3333333333333, "width": 54.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_199 if ("___ivn_199" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}, {"x": 77.33333333333333, "y": 557.3333333333333, "width": 56.666666666666664, "height": 10.666666666666666, "page": 1, "value": markdown_to_plaintext(str(___ivn_198 if ("___ivn_198" in vars) else "")), "datatype": "text", "context_height": 792.0, "context_width": 612.0, "font_size": 10, "font_color": "000000"}], "should_watermark": True}


	def ___pdf_template_6196_to_json():
	  import json, re
	  vars = all_variables()
	  return {"template_data": {"url": "https://community.lawyer/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBOTN0QVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--08473185b8f35bdee835b441758d033b92887f77/Rogers%20Review%20Hearing%20Checklist%20.pdf?disposition=attachment", "height": 1188, "width": 918, "page_count": 2}, "stamps": [], "should_watermark": True}


	def ___define_until_idempotent():
		___define_immutable_until_idempotent()
		___define_continuous_until_idempotent()

	def ___define_immutable_until_idempotent():
		original_dict = all_variables()
		___define_immutable()
		if all_variables() != original_dict:
			re_run_logic()
	def ___define_continuous_until_idempotent():
		original_dict = all_variables()
		___define_continuous()
		if all_variables() != original_dict:
			re_run_logic()
	def ___define_immutable():
		vars = all_variables()



		if ((not ("___shortcut_133_false" in vars)) and (("___ivn_133" in vars))):
			define("___shortcut_133_false", ((primitive_value(((augment(___ivn_133) if ("___ivn_133" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_130_false" in vars)) and (("___ivn_130" in vars))):
			define("___shortcut_130_false", ((primitive_value(((augment(___ivn_130) if ("___ivn_130" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_139_false" in vars)) and (("___ivn_139" in vars))):
			define("___shortcut_139_false", ((primitive_value(((augment(___ivn_139) if ("___ivn_139" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_142_false" in vars)) and (("___ivn_142" in vars))):
			define("___shortcut_142_false", ((primitive_value(((augment(___ivn_142) if ("___ivn_142" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_180_false" in vars)) and (("___ivn_180" in vars))):
			define("___shortcut_180_false", ((primitive_value(((augment(___ivn_180) if ("___ivn_180" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_136_false" in vars)) and (("___ivn_136" in vars))):
			define("___shortcut_136_false", ((primitive_value(((augment(___ivn_136) if ("___ivn_136" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_246_false" in vars)) and (("___ivn_246" in vars))):
			define("___shortcut_246_false", ((primitive_value(((augment(___ivn_246) if ("___ivn_246" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_222_false" in vars)) and (("___ivn_222" in vars))):
			define("___shortcut_222_false", ((primitive_value(((augment(___ivn_222) if ("___ivn_222" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_224_false" in vars)) and (("___ivn_224" in vars))):
			define("___shortcut_224_false", ((primitive_value(((augment(___ivn_224) if ("___ivn_224" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_162_false" in vars)) and (("___ivn_162" in vars))):
			define("___shortcut_162_false", ((primitive_value(((augment(___ivn_162) if ("___ivn_162" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_208_choice" in vars)) and (("___ivn_206" in vars))):
			define("___shortcut_208_choice", ((primitive_value(((augment(___ivn_206) if ("___ivn_206" in vars) else Undefined()).string_eq(augment("Barnstable Probate & Family")))))))
		if ((not ("___shortcut_209_choice" in vars)) and (("___ivn_206" in vars))):
			define("___shortcut_209_choice", ((primitive_value(((augment(___ivn_206) if ("___ivn_206" in vars) else Undefined()).string_eq(augment("Berkshire Probate & Family")))))))
		if ((not ("___shortcut_210_choice" in vars)) and (("___ivn_206" in vars))):
			define("___shortcut_210_choice", ((primitive_value(((augment(___ivn_206) if ("___ivn_206" in vars) else Undefined()).string_eq(augment("Bristol Probate & Family")))))))
		if ((not ("___shortcut_211_choice" in vars)) and (("___ivn_206" in vars))):
			define("___shortcut_211_choice", ((primitive_value(((augment(___ivn_206) if ("___ivn_206" in vars) else Undefined()).string_eq(augment("Dukes Probate & Family")))))))
		if ((not ("___shortcut_212_choice" in vars)) and (("___ivn_206" in vars))):
			define("___shortcut_212_choice", ((primitive_value(((augment(___ivn_206) if ("___ivn_206" in vars) else Undefined()).string_eq(augment("Essex Probate & Family")))))))
		if ((not ("___shortcut_213_choice" in vars)) and (("___ivn_206" in vars))):
			define("___shortcut_213_choice", ((primitive_value(((augment(___ivn_206) if ("___ivn_206" in vars) else Undefined()).string_eq(augment("Franklin Probate & Family")))))))
		if ((not ("___shortcut_214_choice" in vars)) and (("___ivn_206" in vars))):
			define("___shortcut_214_choice", ((primitive_value(((augment(___ivn_206) if ("___ivn_206" in vars) else Undefined()).string_eq(augment("Hampshire Probate & Family")))))))
		if ((not ("___shortcut_215_choice" in vars)) and (("___ivn_206" in vars))):
			define("___shortcut_215_choice", ((primitive_value(((augment(___ivn_206) if ("___ivn_206" in vars) else Undefined()).string_eq(augment("Middlesex Probate & Family")))))))
		if ((not ("___shortcut_216_choice" in vars)) and (("___ivn_206" in vars))):
			define("___shortcut_216_choice", ((primitive_value(((augment(___ivn_206) if ("___ivn_206" in vars) else Undefined()).string_eq(augment("Nantucket Probate & Family")))))))
		if ((not ("___shortcut_217_choice" in vars)) and (("___ivn_206" in vars))):
			define("___shortcut_217_choice", ((primitive_value(((augment(___ivn_206) if ("___ivn_206" in vars) else Undefined()).string_eq(augment("Norfolk Probate & Family")))))))
		if ((not ("___shortcut_218_choice" in vars)) and (("___ivn_206" in vars))):
			define("___shortcut_218_choice", ((primitive_value(((augment(___ivn_206) if ("___ivn_206" in vars) else Undefined()).string_eq(augment("Plymouth Probate & Family")))))))
		if ((not ("___shortcut_207_choice" in vars)) and (("___ivn_206" in vars))):
			define("___shortcut_207_choice", ((primitive_value(((augment(___ivn_206) if ("___ivn_206" in vars) else Undefined()).string_eq(augment("Suffolk Probate & Family")))))))
		if ((not ("___shortcut_219_choice" in vars)) and (("___ivn_206" in vars))):
			define("___shortcut_219_choice", ((primitive_value(((augment(___ivn_206) if ("___ivn_206" in vars) else Undefined()).string_eq(augment("Worcester Probate & Family")))))))
		if ((not ("___shortcut_114_false" in vars)) and (("___ivn_114" in vars))):
			define("___shortcut_114_false", ((primitive_value(((augment(___ivn_114) if ("___ivn_114" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_35_false" in vars)) and (("___ivn_35" in vars))):
			define("___shortcut_35_false", ((primitive_value(((augment(___ivn_35) if ("___ivn_35" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_160_false" in vars)) and (("___ivn_160" in vars))):
			define("___shortcut_160_false", ((primitive_value(((augment(___ivn_160) if ("___ivn_160" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_161_false" in vars)) and (("___ivn_161" in vars))):
			define("___shortcut_161_false", ((primitive_value(((augment(___ivn_161) if ("___ivn_161" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_26_false" in vars)) and (("___ivn_26" in vars))):
			define("___shortcut_26_false", ((primitive_value(((augment(___ivn_26) if ("___ivn_26" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_150_false" in vars)) and (("___ivn_150" in vars))):
			define("___shortcut_150_false", ((primitive_value(((augment(___ivn_150) if ("___ivn_150" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_115_false" in vars)) and (("___ivn_115" in vars))):
			define("___shortcut_115_false", ((primitive_value(((augment(___ivn_115) if ("___ivn_115" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_145_false" in vars)) and (("___ivn_145" in vars))):
			define("___shortcut_145_false", ((primitive_value(((augment(___ivn_145) if ("___ivn_145" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_95_false" in vars)) and (("___ivn_95" in vars))):
			define("___shortcut_95_false", ((primitive_value(((augment(___ivn_95) if ("___ivn_95" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_93_false" in vars)) and (("___ivn_93" in vars))):
			define("___shortcut_93_false", ((primitive_value(((augment(___ivn_93) if ("___ivn_93" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_101_false" in vars)) and (("___ivn_101" in vars))):
			define("___shortcut_101_false", ((primitive_value(((augment(___ivn_101) if ("___ivn_101" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_100_false" in vars)) and (("___ivn_100" in vars))):
			define("___shortcut_100_false", ((primitive_value(((augment(___ivn_100) if ("___ivn_100" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_106_false" in vars)) and (("___ivn_106" in vars))):
			define("___shortcut_106_false", ((primitive_value(((augment(___ivn_106) if ("___ivn_106" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_154_false" in vars)) and (("___ivn_154" in vars))):
			define("___shortcut_154_false", ((primitive_value(((augment(___ivn_154) if ("___ivn_154" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_89_false" in vars)) and (("___ivn_89" in vars))):
			define("___shortcut_89_false", ((primitive_value(((augment(___ivn_89) if ("___ivn_89" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_83_choice" in vars)) and (("___ivn_82" in vars))):
			define("___shortcut_83_choice", ((primitive_value(((augment(___ivn_82) if ("___ivn_82" in vars) else Undefined()).string_eq(augment("Resp_ResCommunity")))))))
		if ((not ("___shortcut_84_choice" in vars)) and (("___ivn_82" in vars))):
			define("___shortcut_84_choice", ((primitive_value(((augment(___ivn_82) if ("___ivn_82" in vars) else Undefined()).string_eq(augment("Resp_ResDDS")))))))
		if ((not ("___shortcut_85_choice" in vars)) and (("___ivn_82" in vars))):
			define("___shortcut_85_choice", ((primitive_value(((augment(___ivn_82) if ("___ivn_82" in vars) else Undefined()).string_eq(augment("Resp_ResDMH")))))))
		if ((not ("___shortcut_87_choice" in vars)) and (("___ivn_82" in vars))):
			define("___shortcut_87_choice", ((primitive_value(((augment(___ivn_82) if ("___ivn_82" in vars) else Undefined()).string_eq(augment("Resp_ResHome")))))))
		if ((not ("___shortcut_86_choice" in vars)) and (("___ivn_82" in vars))):
			define("___shortcut_86_choice", ((primitive_value(((augment(___ivn_82) if ("___ivn_82" in vars) else Undefined()).string_eq(augment("Resp_ResNurse")))))))
		if ((not ("___shortcut_88_choice" in vars)) and (("___ivn_82" in vars))):
			define("___shortcut_88_choice", ((primitive_value(((augment(___ivn_82) if ("___ivn_82" in vars) else Undefined()).string_eq(augment("Resp_ResOther")))))))
		if ((not ("___shortcut_110_choice" in vars)) and (("___ivn_107" in vars))):
			define("___shortcut_110_choice", ((primitive_value(((augment(___ivn_107) if ("___ivn_107" in vars) else Undefined()).string_eq(augment("Adequate")))))))
		if ((not ("___shortcut_109_choice" in vars)) and (("___ivn_107" in vars))):
			define("___shortcut_109_choice", ((primitive_value(((augment(___ivn_107) if ("___ivn_107" in vars) else Undefined()).string_eq(augment("Good")))))))
		if ((not ("___shortcut_111_choice" in vars)) and (("___ivn_107" in vars))):
			define("___shortcut_111_choice", ((primitive_value(((augment(___ivn_107) if ("___ivn_107" in vars) else Undefined()).string_eq(augment("Poor")))))))
		if ((not ("___shortcut_108_choice" in vars)) and (("___ivn_107" in vars))):
			define("___shortcut_108_choice", ((primitive_value(((augment(___ivn_107) if ("___ivn_107" in vars) else Undefined()).string_eq(augment("Very Good")))))))
		if ((not ("___shortcut_229_false" in vars)) and (("___ivn_229" in vars))):
			define("___shortcut_229_false", ((primitive_value(((augment(___ivn_229) if ("___ivn_229" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_23_false" in vars)) and (("___ivn_23" in vars))):
			define("___shortcut_23_false", ((primitive_value(((augment(___ivn_23) if ("___ivn_23" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_122_choice" in vars)) and (("___ivn_120" in vars))):
			define("___shortcut_122_choice", ((primitive_value(((augment(___ivn_120) if ("___ivn_120" in vars) else Undefined()).string_eq(augment("Change")))))))
		if ((not ("___shortcut_121_choice" in vars)) and (("___ivn_120" in vars))):
			define("___shortcut_121_choice", ((primitive_value(((augment(___ivn_120) if ("___ivn_120" in vars) else Undefined()).string_eq(augment("Continue")))))))
		if ((not ("___shortcut_3_false" in vars)) and (("___ivn_3" in vars))):
			define("___shortcut_3_false", ((primitive_value(((augment(___ivn_3) if ("___ivn_3" in vars) else Undefined()).boolean_eq(augment(False)))))))
		if ((not ("___shortcut_184_false" in vars)) and (("___ivn_184" in vars))):
			define("___shortcut_184_false", ((primitive_value(((augment(___ivn_184) if ("___ivn_184" in vars) else Undefined()).boolean_eq(augment(False)))))))



	def ___define_continuous():
		vars = all_variables()






	def rich_text_variable_dictionary():
		vars = all_variables()
		return {

		}
---
initial: True
code: |
	___define_until_idempotent()
---
initial: True
code: |
	def passive_possible_variables():
		vars = all_variables()
		generated_names = { '___shortcut_133_false': markdown_to_plaintext(___shortcut_133_false) if ("___shortcut_133_false" in vars) else '', '___ivn_133': markdown_to_plaintext(___ivn_133) if ("___ivn_133" in vars) else '', '___ivn_137': markdown_to_plaintext(___ivn_137) if ("___ivn_137" in vars) else '', '___ivn_138': markdown_to_plaintext(___ivn_138) if ("___ivn_138" in vars) else '', '___ivn_129': markdown_to_plaintext(___ivn_129) if ("___ivn_129" in vars) else '', '___ivn_128': markdown_to_plaintext(___ivn_128) if ("___ivn_128" in vars) else '', '___ivn_140': markdown_to_plaintext(___ivn_140) if ("___ivn_140" in vars) else '', '___ivn_141': markdown_to_plaintext(___ivn_141) if ("___ivn_141" in vars) else '', '___ivn_132': markdown_to_plaintext(___ivn_132) if ("___ivn_132" in vars) else '', '___ivn_131': markdown_to_plaintext(___ivn_131) if ("___ivn_131" in vars) else '', '___ivn_143': markdown_to_plaintext(___ivn_143) if ("___ivn_143" in vars) else '', '___ivn_144': markdown_to_plaintext(___ivn_144) if ("___ivn_144" in vars) else '', '___ivn_135': markdown_to_plaintext(___ivn_135) if ("___ivn_135" in vars) else '', '___ivn_134': markdown_to_plaintext(___ivn_134) if ("___ivn_134" in vars) else '', '___ivn_181': markdown_to_plaintext(___ivn_181) if ("___ivn_181" in vars) else '', '___ivn_182': markdown_to_plaintext(___ivn_182) if ("___ivn_182" in vars) else '', '___shortcut_130_false': markdown_to_plaintext(___shortcut_130_false) if ("___shortcut_130_false" in vars) else '', '___ivn_130': markdown_to_plaintext(___ivn_130) if ("___ivn_130" in vars) else '', '___shortcut_139_false': markdown_to_plaintext(___shortcut_139_false) if ("___shortcut_139_false" in vars) else '', '___ivn_139': markdown_to_plaintext(___ivn_139) if ("___ivn_139" in vars) else '', '___shortcut_142_false': markdown_to_plaintext(___shortcut_142_false) if ("___shortcut_142_false" in vars) else '', '___ivn_142': markdown_to_plaintext(___ivn_142) if ("___ivn_142" in vars) else '', '___shortcut_180_false': markdown_to_plaintext(___shortcut_180_false) if ("___shortcut_180_false" in vars) else '', '___ivn_180': markdown_to_plaintext(___ivn_180) if ("___ivn_180" in vars) else '', '___shortcut_136_false': markdown_to_plaintext(___shortcut_136_false) if ("___shortcut_136_false" in vars) else '', '___ivn_136': markdown_to_plaintext(___ivn_136) if ("___ivn_136" in vars) else '', '___shortcut_246_false': markdown_to_plaintext(___shortcut_246_false) if ("___shortcut_246_false" in vars) else '', '___ivn_246': markdown_to_plaintext(___ivn_246) if ("___ivn_246" in vars) else '', '___ivn_226': markdown_to_plaintext(___ivn_226) if ("___ivn_226" in vars) else '', '___ivn_225': markdown_to_plaintext(___ivn_225) if ("___ivn_225" in vars) else '', '___ivn_227': markdown_to_plaintext(___ivn_227) if ("___ivn_227" in vars) else '', '___shortcut_222_false': markdown_to_plaintext(___shortcut_222_false) if ("___shortcut_222_false" in vars) else '', '___ivn_222': markdown_to_plaintext(___ivn_222) if ("___ivn_222" in vars) else '', '___shortcut_224_false': markdown_to_plaintext(___shortcut_224_false) if ("___shortcut_224_false" in vars) else '', '___ivn_224': markdown_to_plaintext(___ivn_224) if ("___ivn_224" in vars) else '', '___ivn_45': markdown_to_plaintext(___ivn_45) if ("___ivn_45" in vars) else '', '___ivn_46': markdown_to_plaintext(___ivn_46) if ("___ivn_46" in vars) else '', '___ivn_47': markdown_to_plaintext(___ivn_47) if ("___ivn_47" in vars) else '', '___ivn_51': markdown_to_plaintext(___ivn_51) if ("___ivn_51" in vars) else '', '___ivn_50': markdown_to_plaintext(___ivn_50) if ("___ivn_50" in vars) else '', '___ivn_48': markdown_to_plaintext(___ivn_48) if ("___ivn_48" in vars) else '', '___ivn_49': markdown_to_plaintext(___ivn_49) if ("___ivn_49" in vars) else '', '___shortcut_162_false': markdown_to_plaintext(___shortcut_162_false) if ("___shortcut_162_false" in vars) else '', '___ivn_162': markdown_to_plaintext(___ivn_162) if ("___ivn_162" in vars) else '', '___ivn_206': markdown_to_plaintext(___ivn_206) if ("___ivn_206" in vars) else '', '___shortcut_208_choice': markdown_to_plaintext(___shortcut_208_choice) if ("___shortcut_208_choice" in vars) else '', '___shortcut_209_choice': markdown_to_plaintext(___shortcut_209_choice) if ("___shortcut_209_choice" in vars) else '', '___shortcut_210_choice': markdown_to_plaintext(___shortcut_210_choice) if ("___shortcut_210_choice" in vars) else '', '___shortcut_211_choice': markdown_to_plaintext(___shortcut_211_choice) if ("___shortcut_211_choice" in vars) else '', '___shortcut_212_choice': markdown_to_plaintext(___shortcut_212_choice) if ("___shortcut_212_choice" in vars) else '', '___shortcut_213_choice': markdown_to_plaintext(___shortcut_213_choice) if ("___shortcut_213_choice" in vars) else '', '___shortcut_214_choice': markdown_to_plaintext(___shortcut_214_choice) if ("___shortcut_214_choice" in vars) else '', '___shortcut_215_choice': markdown_to_plaintext(___shortcut_215_choice) if ("___shortcut_215_choice" in vars) else '', '___shortcut_216_choice': markdown_to_plaintext(___shortcut_216_choice) if ("___shortcut_216_choice" in vars) else '', '___shortcut_217_choice': markdown_to_plaintext(___shortcut_217_choice) if ("___shortcut_217_choice" in vars) else '', '___shortcut_218_choice': markdown_to_plaintext(___shortcut_218_choice) if ("___shortcut_218_choice" in vars) else '', '___shortcut_207_choice': markdown_to_plaintext(___shortcut_207_choice) if ("___shortcut_207_choice" in vars) else '', '___shortcut_219_choice': markdown_to_plaintext(___shortcut_219_choice) if ("___shortcut_219_choice" in vars) else '', '___ivn_191': markdown_to_plaintext(___ivn_191) if ("___ivn_191" in vars) else '', '___ivn_163': markdown_to_plaintext(___ivn_163) if ("___ivn_163" in vars) else '', '___ivn_38': markdown_to_plaintext(___ivn_38) if ("___ivn_38" in vars) else '', '___ivn_39': markdown_to_plaintext(___ivn_39) if ("___ivn_39" in vars) else '', '___shortcut_114_false': markdown_to_plaintext(___shortcut_114_false) if ("___shortcut_114_false" in vars) else '', '___ivn_114': markdown_to_plaintext(___ivn_114) if ("___ivn_114" in vars) else '', '___ivn_43': markdown_to_plaintext(___ivn_43) if ("___ivn_43" in vars) else '', '___ivn_198': markdown_to_plaintext(___ivn_198) if ("___ivn_198" in vars) else '', '___ivn_199': markdown_to_plaintext(___ivn_199) if ("___ivn_199" in vars) else '', '___shortcut_35_false': markdown_to_plaintext(___shortcut_35_false) if ("___shortcut_35_false" in vars) else '', '___ivn_35': markdown_to_plaintext(___ivn_35) if ("___ivn_35" in vars) else '', '___ivn_62': markdown_to_plaintext(___ivn_62) if ("___ivn_62" in vars) else '', '___ivn_42': markdown_to_plaintext(___ivn_42) if ("___ivn_42" in vars) else '', '___ivn_44': markdown_to_plaintext(___ivn_44) if ("___ivn_44" in vars) else '', '___shortcut_160_false': markdown_to_plaintext(___shortcut_160_false) if ("___shortcut_160_false" in vars) else '', '___ivn_160': markdown_to_plaintext(___ivn_160) if ("___ivn_160" in vars) else '', '___shortcut_161_false': markdown_to_plaintext(___shortcut_161_false) if ("___shortcut_161_false" in vars) else '', '___ivn_161': markdown_to_plaintext(___ivn_161) if ("___ivn_161" in vars) else '', '___ivn_40': markdown_to_plaintext(___ivn_40) if ("___ivn_40" in vars) else '', '___ivn_37': markdown_to_plaintext(___ivn_37) if ("___ivn_37" in vars) else '', '___ivn_200': markdown_to_plaintext(___ivn_200) if ("___ivn_200" in vars) else '', '___ivn_41': markdown_to_plaintext(___ivn_41) if ("___ivn_41" in vars) else '', '___shortcut_26_false': markdown_to_plaintext(___shortcut_26_false) if ("___shortcut_26_false" in vars) else '', '___ivn_26': markdown_to_plaintext(___ivn_26) if ("___ivn_26" in vars) else '', '___ivn_53': markdown_to_plaintext(___ivn_53) if ("___ivn_53" in vars) else '', '___ivn_54': markdown_to_plaintext(___ivn_54) if ("___ivn_54" in vars) else '', '___shortcut_150_false': markdown_to_plaintext(___shortcut_150_false) if ("___shortcut_150_false" in vars) else '', '___ivn_150': markdown_to_plaintext(___ivn_150) if ("___ivn_150" in vars) else '', '___ivn_152': markdown_to_plaintext(___ivn_152) if ("___ivn_152" in vars) else '', '___ivn_151': markdown_to_plaintext(___ivn_151) if ("___ivn_151" in vars) else '', '___ivn_153': markdown_to_plaintext(___ivn_153) if ("___ivn_153" in vars) else '', '___shortcut_115_false': markdown_to_plaintext(___shortcut_115_false) if ("___shortcut_115_false" in vars) else '', '___ivn_115': markdown_to_plaintext(___ivn_115) if ("___ivn_115" in vars) else '', '___ivn_60': markdown_to_plaintext(___ivn_60) if ("___ivn_60" in vars) else '', '___ivn_125': markdown_to_plaintext(___ivn_125) if ("___ivn_125" in vars) else '', '___ivn_29': markdown_to_plaintext(___ivn_29) if ("___ivn_29" in vars) else '', '___ivn_30': markdown_to_plaintext(___ivn_30) if ("___ivn_30" in vars) else '', '___ivn_124': markdown_to_plaintext(___ivn_124) if ("___ivn_124" in vars) else '', '___ivn_146': markdown_to_plaintext(___ivn_146) if ("___ivn_146" in vars) else '', '___ivn_57': markdown_to_plaintext(___ivn_57) if ("___ivn_57" in vars) else '', '___ivn_58': markdown_to_plaintext(___ivn_58) if ("___ivn_58" in vars) else '', '___ivn_126': markdown_to_plaintext(___ivn_126) if ("___ivn_126" in vars) else '', '___ivn_56': markdown_to_plaintext(___ivn_56) if ("___ivn_56" in vars) else '', '___ivn_52': markdown_to_plaintext(___ivn_52) if ("___ivn_52" in vars) else '', '___ivn_31': markdown_to_plaintext(___ivn_31) if ("___ivn_31" in vars) else '', '___shortcut_145_false': markdown_to_plaintext(___shortcut_145_false) if ("___shortcut_145_false" in vars) else '', '___ivn_145': markdown_to_plaintext(___ivn_145) if ("___ivn_145" in vars) else '', '___ivn_55': markdown_to_plaintext(___ivn_55) if ("___ivn_55" in vars) else '', '___shortcut_95_false': markdown_to_plaintext(___shortcut_95_false) if ("___shortcut_95_false" in vars) else '', '___ivn_95': markdown_to_plaintext(___ivn_95) if ("___ivn_95" in vars) else '', '___ivn_90': markdown_to_plaintext(___ivn_90) if ("___ivn_90" in vars) else '', '___shortcut_93_false': markdown_to_plaintext(___shortcut_93_false) if ("___shortcut_93_false" in vars) else '', '___ivn_93': markdown_to_plaintext(___ivn_93) if ("___ivn_93" in vars) else '', '___ivn_94': markdown_to_plaintext(___ivn_94) if ("___ivn_94" in vars) else '', '___ivn_177': markdown_to_plaintext(___ivn_177) if ("___ivn_177" in vars) else '', '___shortcut_101_false': markdown_to_plaintext(___shortcut_101_false) if ("___shortcut_101_false" in vars) else '', '___ivn_101': markdown_to_plaintext(___ivn_101) if ("___ivn_101" in vars) else '', '___ivn_96': markdown_to_plaintext(___ivn_96) if ("___ivn_96" in vars) else '', '___shortcut_100_false': markdown_to_plaintext(___shortcut_100_false) if ("___shortcut_100_false" in vars) else '', '___ivn_100': markdown_to_plaintext(___ivn_100) if ("___ivn_100" in vars) else '', '___ivn_97': markdown_to_plaintext(___ivn_97) if ("___ivn_97" in vars) else '', '___ivn_178': markdown_to_plaintext(___ivn_178) if ("___ivn_178" in vars) else '', '___ivn_102': markdown_to_plaintext(___ivn_102) if ("___ivn_102" in vars) else '', '___shortcut_106_false': markdown_to_plaintext(___shortcut_106_false) if ("___shortcut_106_false" in vars) else '', '___ivn_106': markdown_to_plaintext(___ivn_106) if ("___ivn_106" in vars) else '', '___ivn_103': markdown_to_plaintext(___ivn_103) if ("___ivn_103" in vars) else '', '___ivn_179': markdown_to_plaintext(___ivn_179) if ("___ivn_179" in vars) else '', '___ivn_67': markdown_to_plaintext(___ivn_67) if ("___ivn_67" in vars) else '', '___ivn_228': markdown_to_plaintext(___ivn_228) if ("___ivn_228" in vars) else '', '___ivn_167': markdown_to_plaintext(___ivn_167) if ("___ivn_167" in vars) else '', '___ivn_70': markdown_to_plaintext(___ivn_70) if ("___ivn_70" in vars) else '', '___ivn_71': markdown_to_plaintext(___ivn_71) if ("___ivn_71" in vars) else '', '___ivn_72': markdown_to_plaintext(___ivn_72) if ("___ivn_72" in vars) else '', '___ivn_73': markdown_to_plaintext(___ivn_73) if ("___ivn_73" in vars) else '', '___ivn_159': markdown_to_plaintext(___ivn_159) if ("___ivn_159" in vars) else '', '___shortcut_154_false': markdown_to_plaintext(___shortcut_154_false) if ("___shortcut_154_false" in vars) else '', '___ivn_154': markdown_to_plaintext(___ivn_154) if ("___ivn_154" in vars) else '', '___ivn_155': markdown_to_plaintext(___ivn_155) if ("___ivn_155" in vars) else '', '___ivn_148': markdown_to_plaintext(___ivn_148) if ("___ivn_148" in vars) else '', '___ivn_158': markdown_to_plaintext(___ivn_158) if ("___ivn_158" in vars) else '', '___ivn_157': markdown_to_plaintext(___ivn_157) if ("___ivn_157" in vars) else '', '___ivn_175': markdown_to_plaintext(___ivn_175) if ("___ivn_175" in vars) else '', '___ivn_169': markdown_to_plaintext(___ivn_169) if ("___ivn_169" in vars) else '', '___ivn_202': markdown_to_plaintext(___ivn_202) if ("___ivn_202" in vars) else '', '___ivn_171': markdown_to_plaintext(___ivn_171) if ("___ivn_171" in vars) else '', '___ivn_204': markdown_to_plaintext(___ivn_204) if ("___ivn_204" in vars) else '', '___ivn_203': markdown_to_plaintext(___ivn_203) if ("___ivn_203" in vars) else '', '___ivn_170': markdown_to_plaintext(___ivn_170) if ("___ivn_170" in vars) else '', '___ivn_168': markdown_to_plaintext(___ivn_168) if ("___ivn_168" in vars) else '', '___ivn_81': markdown_to_plaintext(___ivn_81) if ("___ivn_81" in vars) else '', '___ivn_172': markdown_to_plaintext(___ivn_172) if ("___ivn_172" in vars) else '', '___shortcut_89_false': markdown_to_plaintext(___shortcut_89_false) if ("___shortcut_89_false" in vars) else '', '___ivn_89': markdown_to_plaintext(___ivn_89) if ("___ivn_89" in vars) else '', '___ivn_112': markdown_to_plaintext(___ivn_112) if ("___ivn_112" in vars) else '', '___ivn_176': markdown_to_plaintext(___ivn_176) if ("___ivn_176" in vars) else '', '___ivn_82': markdown_to_plaintext(___ivn_82) if ("___ivn_82" in vars) else '', '___shortcut_83_choice': markdown_to_plaintext(___shortcut_83_choice) if ("___shortcut_83_choice" in vars) else '', '___shortcut_84_choice': markdown_to_plaintext(___shortcut_84_choice) if ("___shortcut_84_choice" in vars) else '', '___shortcut_85_choice': markdown_to_plaintext(___shortcut_85_choice) if ("___shortcut_85_choice" in vars) else '', '___shortcut_87_choice': markdown_to_plaintext(___shortcut_87_choice) if ("___shortcut_87_choice" in vars) else '', '___shortcut_86_choice': markdown_to_plaintext(___shortcut_86_choice) if ("___shortcut_86_choice" in vars) else '', '___shortcut_88_choice': markdown_to_plaintext(___shortcut_88_choice) if ("___shortcut_88_choice" in vars) else '', '___ivn_107': markdown_to_plaintext(___ivn_107) if ("___ivn_107" in vars) else '', '___shortcut_110_choice': markdown_to_plaintext(___shortcut_110_choice) if ("___shortcut_110_choice" in vars) else '', '___shortcut_109_choice': markdown_to_plaintext(___shortcut_109_choice) if ("___shortcut_109_choice" in vars) else '', '___shortcut_111_choice': markdown_to_plaintext(___shortcut_111_choice) if ("___shortcut_111_choice" in vars) else '', '___shortcut_108_choice': markdown_to_plaintext(___shortcut_108_choice) if ("___shortcut_108_choice" in vars) else '', '___shortcut_229_false': markdown_to_plaintext(___shortcut_229_false) if ("___shortcut_229_false" in vars) else '', '___ivn_229': markdown_to_plaintext(___ivn_229) if ("___ivn_229" in vars) else '', '___ivn_230': markdown_to_plaintext(___ivn_230) if ("___ivn_230" in vars) else '', '___ivn_69': markdown_to_plaintext(___ivn_69) if ("___ivn_69" in vars) else '', '___ivn_205': markdown_to_plaintext(___ivn_205) if ("___ivn_205" in vars) else '', '___ivn_156': markdown_to_plaintext(___ivn_156) if ("___ivn_156" in vars) else '', '___shortcut_23_false': markdown_to_plaintext(___shortcut_23_false) if ("___shortcut_23_false" in vars) else '', '___ivn_23': markdown_to_plaintext(___ivn_23) if ("___ivn_23" in vars) else '', '___ivn_196': markdown_to_plaintext(___ivn_196) if ("___ivn_196" in vars) else '', '___ivn_195': markdown_to_plaintext(___ivn_195) if ("___ivn_195" in vars) else '', '___ivn_194': markdown_to_plaintext(___ivn_194) if ("___ivn_194" in vars) else '', 'Today': markdown_to_plaintext(Today) if ("Today" in vars) else '', '___ivn_193': markdown_to_plaintext(___ivn_193) if ("___ivn_193" in vars) else '', '___ivn_120': markdown_to_plaintext(___ivn_120) if ("___ivn_120" in vars) else '', '___shortcut_122_choice': markdown_to_plaintext(___shortcut_122_choice) if ("___shortcut_122_choice" in vars) else '', '___shortcut_121_choice': markdown_to_plaintext(___shortcut_121_choice) if ("___shortcut_121_choice" in vars) else '', '___ivn_221': markdown_to_plaintext(___ivn_221) if ("___ivn_221" in vars) else '', '___shortcut_3_false': markdown_to_plaintext(___shortcut_3_false) if ("___shortcut_3_false" in vars) else '', '___ivn_3': markdown_to_plaintext(___ivn_3) if ("___ivn_3" in vars) else '', '___shortcut_184_false': markdown_to_plaintext(___shortcut_184_false) if ("___shortcut_184_false" in vars) else '', '___ivn_184': markdown_to_plaintext(___ivn_184) if ("___ivn_184" in vars) else '' }
		user_defined_names = { "Antipsych_1Add is false": generated_names['___shortcut_133_false'], "Antipsych_1Add": generated_names['___ivn_133'], "Antipsych_1Alt": generated_names['___ivn_137'], "Antipsych_1AltDose": generated_names['___ivn_138'], "Antipsych_1Dose": generated_names['___ivn_129'], "Antipsych_1Name": generated_names['___ivn_128'], "Antipsych_2Alt": generated_names['___ivn_140'], "Antipsych_2AltDose": generated_names['___ivn_141'], "Antipsych_2Dose": generated_names['___ivn_132'], "Antipsych_2Name": generated_names['___ivn_131'], "Antipsych_3Alt": generated_names['___ivn_143'], "Antipsych_3AltDose": generated_names['___ivn_144'], "Antipsych_3Dose": generated_names['___ivn_135'], "Antipsych_3Name": generated_names['___ivn_134'], "Antipsych_4Alt": generated_names['___ivn_181'], "Antipsych_4AltDose": generated_names['___ivn_182'], "Antipsych_Add is false": generated_names['___shortcut_130_false'], "Antipsych_Add": generated_names['___ivn_130'], "Antipsych_Alternative2 is false": generated_names['___shortcut_139_false'], "Antipsych_Alternative2": generated_names['___ivn_139'], "Antipsych_Alternative3 is false": generated_names['___shortcut_142_false'], "Antipsych_Alternative3": generated_names['___ivn_142'], "Antipsych_Alternative4 is false": generated_names['___shortcut_180_false'], "Antipsych_Alternative4": generated_names['___ivn_180'], "Antipsych_Alternatives is false": generated_names['___shortcut_136_false'], "Antipsych_Alternatives": generated_names['___ivn_136'], "Attorney_Known is false": generated_names['___shortcut_246_false'], "Attorney_Known": generated_names['___ivn_246'], "CoGaurdian_Last": generated_names['___ivn_226'], "CoGuardian_First": generated_names['___ivn_225'], "CoGuardian_Suffix": generated_names['___ivn_227'], "Co_Address_Same is false": generated_names['___shortcut_222_false'], "Co_Address_Same": generated_names['___ivn_222'], "Co_Guardian1 is false": generated_names['___shortcut_224_false'], "Co_Guardian1": generated_names['___ivn_224'], "Co_Guardian_Address": generated_names['___ivn_45'], "Co_Guardian_AptNo": generated_names['___ivn_46'], "Co_Guardian_City": generated_names['___ivn_47'], "Co_Guardian_Email": generated_names['___ivn_51'], "Co_Guardian_Phone": generated_names['___ivn_50'], "Co_Guardian_State": generated_names['___ivn_48'], "Co_Guardian_Zip": generated_names['___ivn_49'], "Conservator_Other is false": generated_names['___shortcut_162_false'], "Conservator_Other": generated_names['___ivn_162'], "Court": generated_names['___ivn_206'], "Court is \"Barnstable Probate & Family": generated_names['___shortcut_208_choice'], "Court is \"Berkshire Probate & Family": generated_names['___shortcut_209_choice'], "Court is \"Bristol Probate & Family": generated_names['___shortcut_210_choice'], "Court is \"Dukes Probate & Family": generated_names['___shortcut_211_choice'], "Court is \"Essex Probate & Family": generated_names['___shortcut_212_choice'], "Court is \"Franklin Probate & Family": generated_names['___shortcut_213_choice'], "Court is \"Hampshire Probate & Family": generated_names['___shortcut_214_choice'], "Court is \"Middlesex Probate & Family": generated_names['___shortcut_215_choice'], "Court is \"Nantucket Probate & Family": generated_names['___shortcut_216_choice'], "Court is \"Norfolk Probate & Family": generated_names['___shortcut_217_choice'], "Court is \"Plymouth Probate & Family": generated_names['___shortcut_218_choice'], "Court is \"Suffolk Probate & Family": generated_names['___shortcut_207_choice'], "Court is \"Worcester Probate & Family": generated_names['___shortcut_219_choice'], "Decree_Date_1": generated_names['___ivn_191'], "End": generated_names['___ivn_163'], "Guardian_AptNo": generated_names['___ivn_38'], "Guardian_City": generated_names['___ivn_39'], "Guardian_Conservator is false": generated_names['___shortcut_114_false'], "Guardian_Conservator": generated_names['___ivn_114'], "Guardian_Email": generated_names['___ivn_43'], "Guardian_First1": generated_names['___ivn_198'], "Guardian_Last1": generated_names['___ivn_199'], "Guardian_Monitor is false": generated_names['___shortcut_35_false'], "Guardian_Monitor": generated_names['___ivn_35'], "Guardian_MonitorDate": generated_names['___ivn_62'], "Guardian_Phone": generated_names['___ivn_42'], "Guardian_Relationship": generated_names['___ivn_44'], "Guardian_RepPayee is false": generated_names['___shortcut_160_false'], "Guardian_RepPayee": generated_names['___ivn_160'], "Guardian_RespFunds is false": generated_names['___shortcut_161_false'], "Guardian_RespFunds": generated_names['___ivn_161'], "Guardian_State": generated_names['___ivn_40'], "Guardian_Street": generated_names['___ivn_37'], "Guardian_Suffix1": generated_names['___ivn_200'], "Guardian_Zip": generated_names['___ivn_41'], "Guardian_sCare_PlanReport is false": generated_names['___shortcut_26_false'], "Guardian_sCare_PlanReport": generated_names['___ivn_26'], "Monitor_AptNo": generated_names['___ivn_53'], "Monitor_City": generated_names['___ivn_54'], "Monitor_Clinician is false": generated_names['___shortcut_150_false'], "Monitor_Clinician": generated_names['___ivn_150'], "Monitor_ClinicianF": generated_names['___ivn_152'], "Monitor_ClinicianT": generated_names['___ivn_151'], "Monitor_Comm": generated_names['___ivn_153'], "Monitor_Conservator is false": generated_names['___shortcut_115_false'], "Monitor_Conservator": generated_names['___ivn_115'], "Monitor_Date": generated_names['___ivn_60'], "Monitor_Discussion": generated_names['___ivn_125'], "Monitor_First": generated_names['___ivn_29'], "Monitor_Last": generated_names['___ivn_30'], "Monitor_MeetingDate": generated_names['___ivn_124'], "Monitor_NonCompliance": generated_names['___ivn_146'], "Monitor_Phone": generated_names['___ivn_57'], "Monitor_Relationship": generated_names['___ivn_58'], "Monitor_ReviewMedRec": generated_names['___ivn_126'], "Monitor_State": generated_names['___ivn_56'], "Monitor_Street": generated_names['___ivn_52'], "Monitor_Suffix": generated_names['___ivn_31'], "Monitor_TreatmentCompliance is false": generated_names['___shortcut_145_false'], "Monitor_TreatmentCompliance": generated_names['___ivn_145'], "Monitor_Zip": generated_names['___ivn_55'], "Resp_1ResAdd is false": generated_names['___shortcut_95_false'], "Resp_1ResAdd": generated_names['___ivn_95'], "Resp_1ResAddress": generated_names['___ivn_90'], "Resp_1ResFacility is false": generated_names['___shortcut_93_false'], "Resp_1ResFacility": generated_names['___ivn_93'], "Resp_1ResFacilityName": generated_names['___ivn_94'], "Resp_1ResRange": generated_names['___ivn_177'], "Resp_2ResAdd is false": generated_names['___shortcut_101_false'], "Resp_2ResAdd": generated_names['___ivn_101'], "Resp_2ResAddress": generated_names['___ivn_96'], "Resp_2ResFacility is false": generated_names['___shortcut_100_false'], "Resp_2ResFacility": generated_names['___ivn_100'], "Resp_2ResFacilityName": generated_names['___ivn_97'], "Resp_2ResRange": generated_names['___ivn_178'], "Resp_3ResAddress": generated_names['___ivn_102'], "Resp_3ResFacility is false": generated_names['___shortcut_106_false'], "Resp_3ResFacility": generated_names['___ivn_106'], "Resp_3ResFacilityName": generated_names['___ivn_103'], "Resp_3ResRange": generated_names['___ivn_179'], "Resp_Age": generated_names['___ivn_67'], "Resp_Attorney": generated_names['___ivn_228'], "Resp_BeginBalance": generated_names['___ivn_167'], "Resp_CAptNo": generated_names['___ivn_70'], "Resp_CCity": generated_names['___ivn_71'], "Resp_CState": generated_names['___ivn_72'], "Resp_CZip": generated_names['___ivn_73'], "Resp_ChangeGuardianship": generated_names['___ivn_159'], "Resp_Charges is false": generated_names['___shortcut_154_false'], "Resp_Charges": generated_names['___ivn_154'], "Resp_ChargesEx": generated_names['___ivn_155'], "Resp_Condition": generated_names['___ivn_148'], "Resp_ContinueGuardianship": generated_names['___ivn_158'], "Resp_DecisionMaking": generated_names['___ivn_157'], "Resp_Facility": generated_names['___ivn_175'], "Resp_FeeCareProvider": generated_names['___ivn_169'], "Resp_First1": generated_names['___ivn_202'], "Resp_GuardianFees": generated_names['___ivn_171'], "Resp_Last1": generated_names['___ivn_204'], "Resp_Middle1": generated_names['___ivn_203'], "Resp_MoneyPersonal": generated_names['___ivn_170'], "Resp_MoneyReceived": generated_names['___ivn_168'], "Resp_OtherEx": generated_names['___ivn_81'], "Resp_OtherExpenses": generated_names['___ivn_172'], "Resp_ResAdd is false": generated_names['___shortcut_89_false'], "Resp_ResAdd": generated_names['___ivn_89'], "Resp_ResBestIntEx": generated_names['___ivn_112'], "Resp_ResDate": generated_names['___ivn_176'], "Resp_ResExplained": generated_names['___ivn_82'], "Resp_ResExplained is \"Resp_ResCommunity": generated_names['___shortcut_83_choice'], "Resp_ResExplained is \"Resp_ResDDS": generated_names['___shortcut_84_choice'], "Resp_ResExplained is \"Resp_ResDMH": generated_names['___shortcut_85_choice'], "Resp_ResExplained is \"Resp_ResHome": generated_names['___shortcut_87_choice'], "Resp_ResExplained is \"Resp_ResNurse": generated_names['___shortcut_86_choice'], "Resp_ResExplained is \"Resp_ResOther": generated_names['___shortcut_88_choice'], "Resp_ResLevelCare": generated_names['___ivn_107'], "Resp_ResLevelCare is \"Adequate": generated_names['___shortcut_110_choice'], "Resp_ResLevelCare is \"Good": generated_names['___shortcut_109_choice'], "Resp_ResLevelCare is \"Poor": generated_names['___shortcut_111_choice'], "Resp_ResLevelCare is \"Very Good": generated_names['___shortcut_108_choice'], "Resp_SameAddress is false": generated_names['___shortcut_229_false'], "Resp_SameAddress": generated_names['___ivn_229'], "Resp_Services": generated_names['___ivn_230'], "Resp_Street": generated_names['___ivn_69'], "Resp_Suffix1": generated_names['___ivn_205'], "Resp_Visits": generated_names['___ivn_156'], "RogerAuthority is false": generated_names['___shortcut_23_false'], "RogerAuthority": generated_names['___ivn_23'], "RogersReview_Last": generated_names['___ivn_196'], "RogersReview_Next": generated_names['___ivn_195'], "TeratmentPlan_Expires1": generated_names['___ivn_194'], "Today": generated_names['Today'], "TreatmentPlan_Approved1": generated_names['___ivn_193'], "TreatmentPlan_ExtendAmend": generated_names['___ivn_120'], "TreatmentPlan_ExtendAmend is \"Change": generated_names['___shortcut_122_choice'], "TreatmentPlan_ExtendAmend is \"Continue": generated_names['___shortcut_121_choice'], "docket": generated_names['___ivn_221'], "variable_1 is false": generated_names['___shortcut_3_false'], "variable_1": generated_names['___ivn_3'], "variable_2 is false": generated_names['___shortcut_184_false'], "variable_2": generated_names['___ivn_184'] }
		return merge_two_dicts(generated_names, user_defined_names)
---
initial: True
code: |
	import requests, json, time

	def ___Rogers_Review_Hearing_Checklist__pdf_6196(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_6196_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Rogers_Review_Hearing_Checklist__pdf_6196_holder = DAFileCollection()
	    ___Rogers_Review_Hearing_Checklist__pdf_6196_holder.pdf = DAFile(filename='Rogers_Review_Hearing_Checklist_.pdf')

	    if done:
	      ___Rogers_Review_Hearing_Checklist__pdf_6196_holder.pdf.from_url(filled_attachment_url)
	      ___Rogers_Review_Hearing_Checklist__pdf_6196_holder.info = {'raw': '', 'name': 'Rogers Review Hearing Checklist ', 'filename': 'Rogers_Review_Hearing_Checklist_', 'description': ''}
	    else:
	      ___Rogers_Review_Hearing_Checklist__pdf_6196_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Rogers_Review_Hearing_Checklist__pdf_6196_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Rogers_Review_Hearing_Checklist_', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Rogers_Review_Hearing_Checklist__pdf_6196_holder
	    else:
	      define(attachment_name, ___Rogers_Review_Hearing_Checklist__pdf_6196_holder)
	      undefine('___Rogers_Review_Hearing_Checklist__pdf_6196_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Rogers_Review_Hearing_Checklist___Worcester_pdf_6195(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_6195_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Rogers_Review_Hearing_Checklist___Worcester_pdf_6195_holder = DAFileCollection()
	    ___Rogers_Review_Hearing_Checklist___Worcester_pdf_6195_holder.pdf = DAFile(filename='Rogers_Review_Hearing_Checklist___Worcester.pdf')

	    if done:
	      ___Rogers_Review_Hearing_Checklist___Worcester_pdf_6195_holder.pdf.from_url(filled_attachment_url)
	      ___Rogers_Review_Hearing_Checklist___Worcester_pdf_6195_holder.info = {'raw': '', 'name': 'Rogers Review Hearing Checklist - Worcester', 'filename': 'Rogers_Review_Hearing_Checklist___Worcester', 'description': ''}
	    else:
	      ___Rogers_Review_Hearing_Checklist___Worcester_pdf_6195_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Rogers_Review_Hearing_Checklist___Worcester_pdf_6195_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Rogers_Review_Hearing_Checklist___Worcester', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Rogers_Review_Hearing_Checklist___Worcester_pdf_6195_holder
	    else:
	      define(attachment_name, ___Rogers_Review_Hearing_Checklist___Worcester_pdf_6195_holder)
	      undefine('___Rogers_Review_Hearing_Checklist___Worcester_pdf_6195_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Rogers_Review_Hearing_Checklist___Plymouth_pdf_6194(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_6194_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Rogers_Review_Hearing_Checklist___Plymouth_pdf_6194_holder = DAFileCollection()
	    ___Rogers_Review_Hearing_Checklist___Plymouth_pdf_6194_holder.pdf = DAFile(filename='Rogers_Review_Hearing_Checklist___Plymouth.pdf')

	    if done:
	      ___Rogers_Review_Hearing_Checklist___Plymouth_pdf_6194_holder.pdf.from_url(filled_attachment_url)
	      ___Rogers_Review_Hearing_Checklist___Plymouth_pdf_6194_holder.info = {'raw': '', 'name': 'Rogers Review Hearing Checklist - Plymouth', 'filename': 'Rogers_Review_Hearing_Checklist___Plymouth', 'description': ''}
	    else:
	      ___Rogers_Review_Hearing_Checklist___Plymouth_pdf_6194_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Rogers_Review_Hearing_Checklist___Plymouth_pdf_6194_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Rogers_Review_Hearing_Checklist___Plymouth', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Rogers_Review_Hearing_Checklist___Plymouth_pdf_6194_holder
	    else:
	      define(attachment_name, ___Rogers_Review_Hearing_Checklist___Plymouth_pdf_6194_holder)
	      undefine('___Rogers_Review_Hearing_Checklist___Plymouth_pdf_6194_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Rogers_Review_Hearing_Checklist___Nantucket_pdf_6193(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_6193_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Rogers_Review_Hearing_Checklist___Nantucket_pdf_6193_holder = DAFileCollection()
	    ___Rogers_Review_Hearing_Checklist___Nantucket_pdf_6193_holder.pdf = DAFile(filename='Rogers_Review_Hearing_Checklist___Nantucket.pdf')

	    if done:
	      ___Rogers_Review_Hearing_Checklist___Nantucket_pdf_6193_holder.pdf.from_url(filled_attachment_url)
	      ___Rogers_Review_Hearing_Checklist___Nantucket_pdf_6193_holder.info = {'raw': '', 'name': 'Rogers Review Hearing Checklist - Nantucket', 'filename': 'Rogers_Review_Hearing_Checklist___Nantucket', 'description': ''}
	    else:
	      ___Rogers_Review_Hearing_Checklist___Nantucket_pdf_6193_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Rogers_Review_Hearing_Checklist___Nantucket_pdf_6193_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Rogers_Review_Hearing_Checklist___Nantucket', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Rogers_Review_Hearing_Checklist___Nantucket_pdf_6193_holder
	    else:
	      define(attachment_name, ___Rogers_Review_Hearing_Checklist___Nantucket_pdf_6193_holder)
	      undefine('___Rogers_Review_Hearing_Checklist___Nantucket_pdf_6193_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Rogers_Review_Hearing_Checklist___Norfolk_pdf_6192(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_6192_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Rogers_Review_Hearing_Checklist___Norfolk_pdf_6192_holder = DAFileCollection()
	    ___Rogers_Review_Hearing_Checklist___Norfolk_pdf_6192_holder.pdf = DAFile(filename='Rogers_Review_Hearing_Checklist___Norfolk.pdf')

	    if done:
	      ___Rogers_Review_Hearing_Checklist___Norfolk_pdf_6192_holder.pdf.from_url(filled_attachment_url)
	      ___Rogers_Review_Hearing_Checklist___Norfolk_pdf_6192_holder.info = {'raw': '', 'name': 'Rogers Review Hearing Checklist - Norfolk', 'filename': 'Rogers_Review_Hearing_Checklist___Norfolk', 'description': ''}
	    else:
	      ___Rogers_Review_Hearing_Checklist___Norfolk_pdf_6192_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Rogers_Review_Hearing_Checklist___Norfolk_pdf_6192_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Rogers_Review_Hearing_Checklist___Norfolk', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Rogers_Review_Hearing_Checklist___Norfolk_pdf_6192_holder
	    else:
	      define(attachment_name, ___Rogers_Review_Hearing_Checklist___Norfolk_pdf_6192_holder)
	      undefine('___Rogers_Review_Hearing_Checklist___Norfolk_pdf_6192_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Rogers_Review_Hearing_Checklist___Middlesex_pdf_6191(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_6191_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Rogers_Review_Hearing_Checklist___Middlesex_pdf_6191_holder = DAFileCollection()
	    ___Rogers_Review_Hearing_Checklist___Middlesex_pdf_6191_holder.pdf = DAFile(filename='Rogers_Review_Hearing_Checklist___Middlesex.pdf')

	    if done:
	      ___Rogers_Review_Hearing_Checklist___Middlesex_pdf_6191_holder.pdf.from_url(filled_attachment_url)
	      ___Rogers_Review_Hearing_Checklist___Middlesex_pdf_6191_holder.info = {'raw': '', 'name': 'Rogers Review Hearing Checklist - Middlesex', 'filename': 'Rogers_Review_Hearing_Checklist___Middlesex', 'description': ''}
	    else:
	      ___Rogers_Review_Hearing_Checklist___Middlesex_pdf_6191_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Rogers_Review_Hearing_Checklist___Middlesex_pdf_6191_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Rogers_Review_Hearing_Checklist___Middlesex', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Rogers_Review_Hearing_Checklist___Middlesex_pdf_6191_holder
	    else:
	      define(attachment_name, ___Rogers_Review_Hearing_Checklist___Middlesex_pdf_6191_holder)
	      undefine('___Rogers_Review_Hearing_Checklist___Middlesex_pdf_6191_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Rogers_Review_Hearing_Checklist___Hampshire_pdf_6190(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_6190_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Rogers_Review_Hearing_Checklist___Hampshire_pdf_6190_holder = DAFileCollection()
	    ___Rogers_Review_Hearing_Checklist___Hampshire_pdf_6190_holder.pdf = DAFile(filename='Rogers_Review_Hearing_Checklist___Hampshire.pdf')

	    if done:
	      ___Rogers_Review_Hearing_Checklist___Hampshire_pdf_6190_holder.pdf.from_url(filled_attachment_url)
	      ___Rogers_Review_Hearing_Checklist___Hampshire_pdf_6190_holder.info = {'raw': '', 'name': 'Rogers Review Hearing Checklist - Hampshire', 'filename': 'Rogers_Review_Hearing_Checklist___Hampshire', 'description': ''}
	    else:
	      ___Rogers_Review_Hearing_Checklist___Hampshire_pdf_6190_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Rogers_Review_Hearing_Checklist___Hampshire_pdf_6190_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Rogers_Review_Hearing_Checklist___Hampshire', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Rogers_Review_Hearing_Checklist___Hampshire_pdf_6190_holder
	    else:
	      define(attachment_name, ___Rogers_Review_Hearing_Checklist___Hampshire_pdf_6190_holder)
	      undefine('___Rogers_Review_Hearing_Checklist___Hampshire_pdf_6190_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Rogers_Review_Hearing_Checklist___Franklin_pdf_6189(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_6189_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Rogers_Review_Hearing_Checklist___Franklin_pdf_6189_holder = DAFileCollection()
	    ___Rogers_Review_Hearing_Checklist___Franklin_pdf_6189_holder.pdf = DAFile(filename='Rogers_Review_Hearing_Checklist___Franklin.pdf')

	    if done:
	      ___Rogers_Review_Hearing_Checklist___Franklin_pdf_6189_holder.pdf.from_url(filled_attachment_url)
	      ___Rogers_Review_Hearing_Checklist___Franklin_pdf_6189_holder.info = {'raw': '', 'name': 'Rogers Review Hearing Checklist - Franklin', 'filename': 'Rogers_Review_Hearing_Checklist___Franklin', 'description': ''}
	    else:
	      ___Rogers_Review_Hearing_Checklist___Franklin_pdf_6189_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Rogers_Review_Hearing_Checklist___Franklin_pdf_6189_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Rogers_Review_Hearing_Checklist___Franklin', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Rogers_Review_Hearing_Checklist___Franklin_pdf_6189_holder
	    else:
	      define(attachment_name, ___Rogers_Review_Hearing_Checklist___Franklin_pdf_6189_holder)
	      undefine('___Rogers_Review_Hearing_Checklist___Franklin_pdf_6189_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Rogers_Review_Hearing_Checklist___Essex_pdf_6188(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_6188_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Rogers_Review_Hearing_Checklist___Essex_pdf_6188_holder = DAFileCollection()
	    ___Rogers_Review_Hearing_Checklist___Essex_pdf_6188_holder.pdf = DAFile(filename='Rogers_Review_Hearing_Checklist___Essex.pdf')

	    if done:
	      ___Rogers_Review_Hearing_Checklist___Essex_pdf_6188_holder.pdf.from_url(filled_attachment_url)
	      ___Rogers_Review_Hearing_Checklist___Essex_pdf_6188_holder.info = {'raw': '', 'name': 'Rogers Review Hearing Checklist - Essex', 'filename': 'Rogers_Review_Hearing_Checklist___Essex', 'description': ''}
	    else:
	      ___Rogers_Review_Hearing_Checklist___Essex_pdf_6188_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Rogers_Review_Hearing_Checklist___Essex_pdf_6188_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Rogers_Review_Hearing_Checklist___Essex', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Rogers_Review_Hearing_Checklist___Essex_pdf_6188_holder
	    else:
	      define(attachment_name, ___Rogers_Review_Hearing_Checklist___Essex_pdf_6188_holder)
	      undefine('___Rogers_Review_Hearing_Checklist___Essex_pdf_6188_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Rogers_Review_Hearing_Checklist___Dukes_pdf_6187(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_6187_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Rogers_Review_Hearing_Checklist___Dukes_pdf_6187_holder = DAFileCollection()
	    ___Rogers_Review_Hearing_Checklist___Dukes_pdf_6187_holder.pdf = DAFile(filename='Rogers_Review_Hearing_Checklist___Dukes.pdf')

	    if done:
	      ___Rogers_Review_Hearing_Checklist___Dukes_pdf_6187_holder.pdf.from_url(filled_attachment_url)
	      ___Rogers_Review_Hearing_Checklist___Dukes_pdf_6187_holder.info = {'raw': '', 'name': 'Rogers Review Hearing Checklist - Dukes', 'filename': 'Rogers_Review_Hearing_Checklist___Dukes', 'description': ''}
	    else:
	      ___Rogers_Review_Hearing_Checklist___Dukes_pdf_6187_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Rogers_Review_Hearing_Checklist___Dukes_pdf_6187_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Rogers_Review_Hearing_Checklist___Dukes', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Rogers_Review_Hearing_Checklist___Dukes_pdf_6187_holder
	    else:
	      define(attachment_name, ___Rogers_Review_Hearing_Checklist___Dukes_pdf_6187_holder)
	      undefine('___Rogers_Review_Hearing_Checklist___Dukes_pdf_6187_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Rogers_Review_Hearing_Checklist___Bristol_pdf_6186(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_6186_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Rogers_Review_Hearing_Checklist___Bristol_pdf_6186_holder = DAFileCollection()
	    ___Rogers_Review_Hearing_Checklist___Bristol_pdf_6186_holder.pdf = DAFile(filename='Rogers_Review_Hearing_Checklist___Bristol.pdf')

	    if done:
	      ___Rogers_Review_Hearing_Checklist___Bristol_pdf_6186_holder.pdf.from_url(filled_attachment_url)
	      ___Rogers_Review_Hearing_Checklist___Bristol_pdf_6186_holder.info = {'raw': '', 'name': 'Rogers Review Hearing Checklist - Bristol', 'filename': 'Rogers_Review_Hearing_Checklist___Bristol', 'description': ''}
	    else:
	      ___Rogers_Review_Hearing_Checklist___Bristol_pdf_6186_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Rogers_Review_Hearing_Checklist___Bristol_pdf_6186_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Rogers_Review_Hearing_Checklist___Bristol', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Rogers_Review_Hearing_Checklist___Bristol_pdf_6186_holder
	    else:
	      define(attachment_name, ___Rogers_Review_Hearing_Checklist___Bristol_pdf_6186_holder)
	      undefine('___Rogers_Review_Hearing_Checklist___Bristol_pdf_6186_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Rogers_Review_Hearing_Checklist___Berkshire_pdf_6185(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_6185_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Rogers_Review_Hearing_Checklist___Berkshire_pdf_6185_holder = DAFileCollection()
	    ___Rogers_Review_Hearing_Checklist___Berkshire_pdf_6185_holder.pdf = DAFile(filename='Rogers_Review_Hearing_Checklist___Berkshire.pdf')

	    if done:
	      ___Rogers_Review_Hearing_Checklist___Berkshire_pdf_6185_holder.pdf.from_url(filled_attachment_url)
	      ___Rogers_Review_Hearing_Checklist___Berkshire_pdf_6185_holder.info = {'raw': '', 'name': 'Rogers Review Hearing Checklist - Berkshire', 'filename': 'Rogers_Review_Hearing_Checklist___Berkshire', 'description': ''}
	    else:
	      ___Rogers_Review_Hearing_Checklist___Berkshire_pdf_6185_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Rogers_Review_Hearing_Checklist___Berkshire_pdf_6185_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Rogers_Review_Hearing_Checklist___Berkshire', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Rogers_Review_Hearing_Checklist___Berkshire_pdf_6185_holder
	    else:
	      define(attachment_name, ___Rogers_Review_Hearing_Checklist___Berkshire_pdf_6185_holder)
	      undefine('___Rogers_Review_Hearing_Checklist___Berkshire_pdf_6185_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Rogers_Review_Hearing_Checklist___Barnstable_pdf_6184(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_6184_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Rogers_Review_Hearing_Checklist___Barnstable_pdf_6184_holder = DAFileCollection()
	    ___Rogers_Review_Hearing_Checklist___Barnstable_pdf_6184_holder.pdf = DAFile(filename='Rogers_Review_Hearing_Checklist___Barnstable.pdf')

	    if done:
	      ___Rogers_Review_Hearing_Checklist___Barnstable_pdf_6184_holder.pdf.from_url(filled_attachment_url)
	      ___Rogers_Review_Hearing_Checklist___Barnstable_pdf_6184_holder.info = {'raw': '', 'name': 'Rogers Review Hearing Checklist - Barnstable', 'filename': 'Rogers_Review_Hearing_Checklist___Barnstable', 'description': ''}
	    else:
	      ___Rogers_Review_Hearing_Checklist___Barnstable_pdf_6184_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Rogers_Review_Hearing_Checklist___Barnstable_pdf_6184_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Rogers_Review_Hearing_Checklist___Barnstable', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Rogers_Review_Hearing_Checklist___Barnstable_pdf_6184_holder
	    else:
	      define(attachment_name, ___Rogers_Review_Hearing_Checklist___Barnstable_pdf_6184_holder)
	      undefine('___Rogers_Review_Hearing_Checklist___Barnstable_pdf_6184_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Rogers_Review_Hearing_Checklist___Suffolk_pdf_6183(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_6183_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Rogers_Review_Hearing_Checklist___Suffolk_pdf_6183_holder = DAFileCollection()
	    ___Rogers_Review_Hearing_Checklist___Suffolk_pdf_6183_holder.pdf = DAFile(filename='Rogers_Review_Hearing_Checklist___Suffolk.pdf')

	    if done:
	      ___Rogers_Review_Hearing_Checklist___Suffolk_pdf_6183_holder.pdf.from_url(filled_attachment_url)
	      ___Rogers_Review_Hearing_Checklist___Suffolk_pdf_6183_holder.info = {'raw': '', 'name': 'Rogers Review Hearing Checklist - Suffolk', 'filename': 'Rogers_Review_Hearing_Checklist___Suffolk', 'description': ''}
	    else:
	      ___Rogers_Review_Hearing_Checklist___Suffolk_pdf_6183_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Rogers_Review_Hearing_Checklist___Suffolk_pdf_6183_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Rogers_Review_Hearing_Checklist___Suffolk', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Rogers_Review_Hearing_Checklist___Suffolk_pdf_6183_holder
	    else:
	      define(attachment_name, ___Rogers_Review_Hearing_Checklist___Suffolk_pdf_6183_holder)
	      undefine('___Rogers_Review_Hearing_Checklist___Suffolk_pdf_6183_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Clinician_Affidavit_pdf_6093(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_6093_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Clinician_Affidavit_pdf_6093_holder = DAFileCollection()
	    ___Clinician_Affidavit_pdf_6093_holder.pdf = DAFile(filename='Clinician_Affidavit.pdf')

	    if done:
	      ___Clinician_Affidavit_pdf_6093_holder.pdf.from_url(filled_attachment_url)
	      ___Clinician_Affidavit_pdf_6093_holder.info = {'raw': '', 'name': 'Clinician Affidavit', 'filename': 'Clinician_Affidavit', 'description': ''}
	    else:
	      ___Clinician_Affidavit_pdf_6093_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Clinician_Affidavit_pdf_6093_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Clinician_Affidavit', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Clinician_Affidavit_pdf_6093_holder
	    else:
	      define(attachment_name, ___Clinician_Affidavit_pdf_6093_holder)
	      undefine('___Clinician_Affidavit_pdf_6093_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Review_Order_Anipsychotic_Medication__pdf_4732(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_4732_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Review_Order_Anipsychotic_Medication__pdf_4732_holder = DAFileCollection()
	    ___Review_Order_Anipsychotic_Medication__pdf_4732_holder.pdf = DAFile(filename='Review_Order_Anipsychotic_Medication_.pdf')

	    if done:
	      ___Review_Order_Anipsychotic_Medication__pdf_4732_holder.pdf.from_url(filled_attachment_url)
	      ___Review_Order_Anipsychotic_Medication__pdf_4732_holder.info = {'raw': '', 'name': 'Review Order Anipsychotic Medication ', 'filename': 'Review_Order_Anipsychotic_Medication_', 'description': ''}
	    else:
	      ___Review_Order_Anipsychotic_Medication__pdf_4732_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Review_Order_Anipsychotic_Medication__pdf_4732_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Review_Order_Anipsychotic_Medication_', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Review_Order_Anipsychotic_Medication__pdf_4732_holder
	    else:
	      define(attachment_name, ___Review_Order_Anipsychotic_Medication__pdf_4732_holder)
	      undefine('___Review_Order_Anipsychotic_Medication__pdf_4732_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Motion_to_Extend_Amend_Treatment_Order_pdf_5229(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_5229_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Motion_to_Extend_Amend_Treatment_Order_pdf_5229_holder = DAFileCollection()
	    ___Motion_to_Extend_Amend_Treatment_Order_pdf_5229_holder.pdf = DAFile(filename='Motion_to_Extend_Amend_Treatment_Order.pdf')

	    if done:
	      ___Motion_to_Extend_Amend_Treatment_Order_pdf_5229_holder.pdf.from_url(filled_attachment_url)
	      ___Motion_to_Extend_Amend_Treatment_Order_pdf_5229_holder.info = {'raw': '', 'name': 'Motion to Extend Amend Treatment Order', 'filename': 'Motion_to_Extend_Amend_Treatment_Order', 'description': ''}
	    else:
	      ___Motion_to_Extend_Amend_Treatment_Order_pdf_5229_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Motion_to_Extend_Amend_Treatment_Order_pdf_5229_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Motion_to_Extend_Amend_Treatment_Order', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Motion_to_Extend_Amend_Treatment_Order_pdf_5229_holder
	    else:
	      define(attachment_name, ___Motion_to_Extend_Amend_Treatment_Order_pdf_5229_holder)
	      undefine('___Motion_to_Extend_Amend_Treatment_Order_pdf_5229_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Motion_to_Waive_Respondent_Appearance_pdf_5228(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_5228_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Motion_to_Waive_Respondent_Appearance_pdf_5228_holder = DAFileCollection()
	    ___Motion_to_Waive_Respondent_Appearance_pdf_5228_holder.pdf = DAFile(filename='Motion_to_Waive_Respondent_Appearance.pdf')

	    if done:
	      ___Motion_to_Waive_Respondent_Appearance_pdf_5228_holder.pdf.from_url(filled_attachment_url)
	      ___Motion_to_Waive_Respondent_Appearance_pdf_5228_holder.info = {'raw': '', 'name': 'Motion to Waive Respondent Appearance', 'filename': 'Motion_to_Waive_Respondent_Appearance', 'description': ''}
	    else:
	      ___Motion_to_Waive_Respondent_Appearance_pdf_5228_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Motion_to_Waive_Respondent_Appearance_pdf_5228_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Motion_to_Waive_Respondent_Appearance', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Motion_to_Waive_Respondent_Appearance_pdf_5228_holder
	    else:
	      define(attachment_name, ___Motion_to_Waive_Respondent_Appearance_pdf_5228_holder)
	      undefine('___Motion_to_Waive_Respondent_Appearance_pdf_5228_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Clinicians_Affidavit_Report_Extension_Amendment_of_Treatment_pdf_5227(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_5227_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Clinicians_Affidavit_Report_Extension_Amendment_of_Treatment_pdf_5227_holder = DAFileCollection()
	    ___Clinicians_Affidavit_Report_Extension_Amendment_of_Treatment_pdf_5227_holder.pdf = DAFile(filename='Clinicians_Affidavit_Report_Extension_Amendment_of_Treatment.pdf')

	    if done:
	      ___Clinicians_Affidavit_Report_Extension_Amendment_of_Treatment_pdf_5227_holder.pdf.from_url(filled_attachment_url)
	      ___Clinicians_Affidavit_Report_Extension_Amendment_of_Treatment_pdf_5227_holder.info = {'raw': '', 'name': 'Clinicians Affidavit Report Extension Amendment of Treatment', 'filename': 'Clinicians_Affidavit_Report_Extension_Amendment_of_Treatment', 'description': ''}
	    else:
	      ___Clinicians_Affidavit_Report_Extension_Amendment_of_Treatment_pdf_5227_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Clinicians_Affidavit_Report_Extension_Amendment_of_Treatment_pdf_5227_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Clinicians_Affidavit_Report_Extension_Amendment_of_Treatment', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Clinicians_Affidavit_Report_Extension_Amendment_of_Treatment_pdf_5227_holder
	    else:
	      define(attachment_name, ___Clinicians_Affidavit_Report_Extension_Amendment_of_Treatment_pdf_5227_holder)
	      undefine('___Clinicians_Affidavit_Report_Extension_Amendment_of_Treatment_pdf_5227_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Treatment_Plan_pdf_5226(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_5226_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Treatment_Plan_pdf_5226_holder = DAFileCollection()
	    ___Treatment_Plan_pdf_5226_holder.pdf = DAFile(filename='Treatment_Plan.pdf')

	    if done:
	      ___Treatment_Plan_pdf_5226_holder.pdf.from_url(filled_attachment_url)
	      ___Treatment_Plan_pdf_5226_holder.info = {'raw': '', 'name': 'Treatment Plan', 'filename': 'Treatment_Plan', 'description': ''}
	    else:
	      ___Treatment_Plan_pdf_5226_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Treatment_Plan_pdf_5226_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Treatment_Plan', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Treatment_Plan_pdf_5226_holder
	    else:
	      define(attachment_name, ___Treatment_Plan_pdf_5226_holder)
	      undefine('___Treatment_Plan_pdf_5226_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Report_of_Monitor_pdf_4735(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_4735_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Report_of_Monitor_pdf_4735_holder = DAFileCollection()
	    ___Report_of_Monitor_pdf_4735_holder.pdf = DAFile(filename='Report_of_Monitor.pdf')

	    if done:
	      ___Report_of_Monitor_pdf_4735_holder.pdf.from_url(filled_attachment_url)
	      ___Report_of_Monitor_pdf_4735_holder.info = {'raw': '', 'name': 'Report of Monitor', 'filename': 'Report_of_Monitor', 'description': ''}
	    else:
	      ___Report_of_Monitor_pdf_4735_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Report_of_Monitor_pdf_4735_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Report_of_Monitor', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Report_of_Monitor_pdf_4735_holder
	    else:
	      define(attachment_name, ___Report_of_Monitor_pdf_4735_holder)
	      undefine('___Report_of_Monitor_pdf_4735_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Guardianship_Care_Plan_Report_pdf_4734(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_4734_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Guardianship_Care_Plan_Report_pdf_4734_holder = DAFileCollection()
	    ___Guardianship_Care_Plan_Report_pdf_4734_holder.pdf = DAFile(filename='Guardianship_Care_Plan_Report.pdf')

	    if done:
	      ___Guardianship_Care_Plan_Report_pdf_4734_holder.pdf.from_url(filled_attachment_url)
	      ___Guardianship_Care_Plan_Report_pdf_4734_holder.info = {'raw': '', 'name': 'Guardianship Care Plan Report', 'filename': 'Guardianship_Care_Plan_Report', 'description': ''}
	    else:
	      ___Guardianship_Care_Plan_Report_pdf_4734_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Guardianship_Care_Plan_Report_pdf_4734_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Guardianship_Care_Plan_Report', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Guardianship_Care_Plan_Report_pdf_4734_holder
	    else:
	      define(attachment_name, ___Guardianship_Care_Plan_Report_pdf_4734_holder)
	      undefine('___Guardianship_Care_Plan_Report_pdf_4734_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Rep_Respondents_Counsel_mpc512_pdf_4733(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    playa_base = "https://playa.community.lawyer"
	    playa_fill_endpoint = "https://playa.community.lawyer/task"
	    playa_status_endpoint = "https://playa.community.lawyer/tasks"
	    post_data = ___pdf_template_4733_to_json()
	    fill_response = requests.post(playa_fill_endpoint, json=post_data).json()
	    task_id = fill_response.get('id')
	    access_key = fill_response.get('key')
	    filled_attachment_url = ""
	    done = False
	    attempts_count = 0
	    while not done and attempts_count < 250:
	      status_url = playa_status_endpoint + '/' + str(task_id) + '?key=' + str(access_key)
	      task_response = requests.get(status_url).json()
	      done = task_response.get('status') == 'done'
	      filled_attachment_url = playa_base + '/' + task_response.get('document_url')
	      attempts_count += 1
	      time.sleep(.1)

	    ___Rep_Respondents_Counsel_mpc512_pdf_4733_holder = DAFileCollection()
	    ___Rep_Respondents_Counsel_mpc512_pdf_4733_holder.pdf = DAFile(filename='Rep_Respondents_Counsel_mpc512.pdf')

	    if done:
	      ___Rep_Respondents_Counsel_mpc512_pdf_4733_holder.pdf.from_url(filled_attachment_url)
	      ___Rep_Respondents_Counsel_mpc512_pdf_4733_holder.info = {'raw': '', 'name': 'Rep_Respondents_Counsel_mpc512', 'filename': 'Rep_Respondents_Counsel_mpc512', 'description': ''}
	    else:
	      ___Rep_Respondents_Counsel_mpc512_pdf_4733_holder.pdf.from_url('https://community.lawyer/static/blank.pdf')
	      ___Rep_Respondents_Counsel_mpc512_pdf_4733_holder.info = {'raw': '', 'name': 'We encountered a problem', 'filename': 'Rep_Respondents_Counsel_mpc512', 'description': 'There was a problem filling your PDF - please try again'}

	    if attachment_name == '':
	      return ___Rep_Respondents_Counsel_mpc512_pdf_4733_holder
	    else:
	      define(attachment_name, ___Rep_Respondents_Counsel_mpc512_pdf_4733_holder)
	      undefine('___Rep_Respondents_Counsel_mpc512_pdf_4733_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def ___Rogers_Review_Hearing_Checklist_1_markdown_2356(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    vars = all_variables()
	    session_id = user_info().session
	    base_url = "https://wordwizard.community.lawyer/"

	    variables = { k: { 'text': v } for k, v in vars.items() }

	    image_type_variables = {  }
	    variables = merge_two_dicts(variables, image_type_variables)
	    variables = merge_two_dicts(variables, rich_text_variable_dictionary())

	    data = json.dumps({ "template": {"body": {"blocks":[{"key":"5prf8","data":{},"text":"________________________________________________________","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":56,"offset":0},{"style":"fontsize-16","length":56,"offset":0}]},{"key":"220sh","data":{},"text":"Rogers Review Hearing Checklist_________________________","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontsize-16","length":56,"offset":0},{"style":"BOLD","length":56,"offset":0},{"style":"UNDERLINE","length":56,"offset":0},{"style":"fontfamily-Palatino","length":56,"offset":0}]},{"key":"97h8s","data":{},"text":"","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[]},{"key":"7od8f","data":{},"text":"This checklist is a tool to help you prepare for your Rogers Review Hearing. ","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":77,"offset":0},{"style":"fontsize-11","length":77,"offset":0},{"style":"ITALIC","length":77,"offset":0}]},{"key":"7fq46","data":{},"text":"","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[]},{"key":"d92rl","data":{},"text":"1.  Complete the following forms:[TAB][TAB][TAB][TAB][TAB][TAB][TAB][TAB][TAB][TAB][TAB]  ","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":46,"offset":0},{"style":"BOLD","length":46,"offset":0},{"style":"fontsize-12","length":46,"offset":0}]},{"key":"f194m","data":{},"text":"","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[]},{"key":"rv9s","data":{},"text":"Guardianship Care/Plan Report","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":29,"offset":0},{"style":"fontsize-11","length":29,"offset":0}]},{"key":"fgo1g","data":{},"text":"The Rogers Review Assistant may have helped you fill this out. Please review the form for accuracy and completion before signing.","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":129,"offset":0},{"style":"fontsize-10","length":129,"offset":0},{"style":"ITALIC","length":129,"offset":0}]},{"key":"7b6e0","data":{},"text":"","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[]},{"key":"al783","data":{},"text":"Motion to Extend/Amend Treatment Plan","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":37,"offset":0},{"style":"fontsize-11","length":37,"offset":0}]},{"key":"2p3kj","data":{},"text":"The Rogers Review Assistant may have helped you fill this out. Please review the form for accuracy and completion before signing.","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":129,"offset":0},{"style":"ITALIC","length":129,"offset":0},{"style":"fontsize-10","length":129,"offset":0}]},{"key":"1e4qo","data":{},"text":"[TAB]","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":1,"offset":0},{"style":"fontsize-11","length":1,"offset":0}]},{"key":"1gptu","data":{},"text":"Monitor[u+2019]s Report ","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":17,"offset":0},{"style":"fontsize-11","length":17,"offset":0}]},{"key":"42gl4","data":{},"text":"Based on your answers to the interview, the Rogers Review Assistant may or may not have filled this form out.  If the form is filled out, please review it for accuracy and completion before signing. Otherwise, please contact the Rogers Monitor and ask them to complete this form. The Rogers Monitor must provide a copy of the completed report to the Guardian and Respondent[u+2019]s counsel 30 days prior to the review hearing.","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":420,"offset":0},{"style":"fontsize-10","length":420,"offset":0},{"style":"ITALIC","length":420,"offset":0}]},{"key":"e7kd3","data":{},"text":"[TAB]","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":1,"offset":0},{"style":"fontsize-11","length":1,"offset":0}]},{"key":"4ubso","data":{},"text":"Rogers Review Order","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":19,"offset":0},{"style":"fontsize-11","length":19,"offset":0}]},{"key":"4m8lk","data":{},"text":"This serves as a proposal for a new treatment plan. ","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":52,"offset":0},{"style":"fontsize-10","length":52,"offset":0},{"style":"ITALIC","length":52,"offset":0}]},{"key":"57a8u","data":{},"text":"[TAB]","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":1,"offset":0},{"style":"fontsize-11","length":1,"offset":0}]},{"key":"7d9k","data":{},"text":"Treatment Plan","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":14,"offset":0},{"style":"fontsize-11","length":14,"offset":0}]},{"key":"6b0iu","data":{},"text":"Based on your answers to the interview, the Rogers Review Assistant may or may not have filled this form out.  Please review this form to ensure that it is accurate and complete based on the Clinician[u+2019]s Affidavit. ","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":214,"offset":0},{"style":"ITALIC","length":214,"offset":0},{"style":"fontsize-10","length":214,"offset":0}]},{"key":"9bet0","data":{},"text":"[TAB]","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":1,"offset":0},{"style":"fontsize-11","length":1,"offset":0}]},{"key":"eq2g9","data":{},"text":"Clinician[u+2019]s Affidavit ","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":22,"offset":0},{"style":"fontsize-11","length":22,"offset":0}]},{"key":"350fj","data":{},"text":"The affidavit must be completed by the prescribing clinician and based on an examination of the Respondent within 60 days of signing, and preferably the review hearing. A copy of the Clinician[u+2019]s Affidavit must be provided to the Guardian and Respondent[u+2019]s counsel 30 days prior to the review hearing.[TAB]","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":300,"offset":0},{"style":"fontsize-10","length":300,"offset":0},{"style":"ITALIC","length":300,"offset":0}]},{"key":"60j4q","data":{},"text":"","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[]},{"key":"9pvq6","data":{},"text":"","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[]},{"key":"ctlu5","data":{},"text":"2. Review the forms for completion and accuracy. ","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":49,"offset":0},{"style":"BOLD","length":49,"offset":0},{"style":"fontsize-12","length":49,"offset":0}]},{"key":"15sdv","data":{},"text":"Consider enrolling in the Rogers Review Reminder System to receive text message reminders of your hearing.","type":"unstyled","depth":0,"entityRanges":[{"key":0,"length":29,"offset":26}],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":106,"offset":0},{"style":"ITALIC","length":106,"offset":0},{"style":"fontsize-10","length":106,"offset":0}]},{"key":"8kbq","data":{},"text":"","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[]},{"key":"7n99b","data":{},"text":"","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[]},{"key":"ber2","data":{},"text":"3. File the forms with the court in which you filed your initial gaurdianship pretition ___ivn_192.","type":"unstyled","depth":0,"entityRanges":[{"key":1,"length":10,"offset":88}],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":99,"offset":0},{"style":"BOLD","length":98,"offset":0},{"style":"fontsize-12","length":99,"offset":0}]},{"key":"2qk42","data":{},"text":"","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[]},{"key":"9apch","data":{},"text":"","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[]},{"key":"35k9p","data":{},"text":"4. Go to court for your Rogers Review Hearing  ___ivn_195 .","type":"unstyled","depth":0,"entityRanges":[{"key":2,"length":10,"offset":47}],"inlineStyleRanges":[{"style":"fontfamily-Palatino","length":59,"offset":0},{"style":"BOLD","length":59,"offset":0},{"style":"fontsize-12","length":59,"offset":0}]},{"key":"ebnki","data":{},"text":"","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[]},{"key":"65eji","data":{},"text":"","type":"unstyled","depth":0,"entityRanges":[],"inlineStyleRanges":[]}],"entityMap":{"0":{"data":{"url":"https://interviews-dev.gbls.org/interview?i=docassemble.playground51%3ARogersReviewReminderSystem.yml#page1","targetOption":"_blank"},"type":"LINK","mutability":"MUTABLE"},"1":{"data":{"variableName":"___ivn_192","inlineTransformationId":"4660"},"type":"VARIABLE","mutability":"IMMUTABLE"},"2":{"data":{"variableName":"___ivn_195"},"type":"VARIABLE","mutability":"IMMUTABLE"}}}, "marginLeft": 1.0, "marginRight": 1.0, "lineSpacing": 1.0, "testMode": True, "transformations": {}}, 'variables': variables, 'session_id': session_id })
	    response = requests.post(base_url + 'convert_to_docx', data=data, headers={'Accept': 'application/json', 'Content-Type': 'application/json'})
	    ___Rogers_Review_Hearing_Checklist_1_markdown_2356_json_filename = response.content.decode()

	    ___Rogers_Review_Hearing_Checklist_1_markdown_2356_holder = DAFileCollection()
	    ___Rogers_Review_Hearing_Checklist_1_markdown_2356_holder.docx = DAFile(filename='Rogers_Review_Hearing_Checklist_1.docx')
	    ___Rogers_Review_Hearing_Checklist_1_markdown_2356_holder.docx.from_url(base_url + 'retrieve/' + ___Rogers_Review_Hearing_Checklist_1_markdown_2356_json_filename + '/' + session_id)
	    ___Rogers_Review_Hearing_Checklist_1_markdown_2356_holder.info = {'raw': '', 'name': 'Rogers Review Hearing Checklist 1', 'filename': 'Rogers_Review_Hearing_Checklist_1', 'description': ''}

	    if attachment_name == '':
	      return ___Rogers_Review_Hearing_Checklist_1_markdown_2356_holder
	    else:
	      define(attachment_name, ___Rogers_Review_Hearing_Checklist_1_markdown_2356_holder)
	      undefine('___Rogers_Review_Hearing_Checklist_1_markdown_2356_holder')
	      return value(attachment_name)

	  else:
	    return ''

	def t_Rogers_Review_Hearing_Checklist_f873d340a581(attachment_condition, attachment_name):
	  if is_true(attachment_condition):
	    if attachment_name != "":
	      reconsider('t_Rogers_Review_Hearing_Checklist_f873d340a581_attachment_holder_cl_ignore')
	      define(attachment_name, t_Rogers_Review_Hearing_Checklist_f873d340a581_attachment_holder_cl_ignore)
	      return value(attachment_name)
	    else:
	      reconsider('t_Rogers_Review_Hearing_Checklist_f873d340a581_attachment_holder_cl_ignore')
	      return t_Rogers_Review_Hearing_Checklist_f873d340a581_attachment_holder_cl_ignore

	  else:
	    return ''
---
mandatory: True
code: |
  fill_response = requests.get('https://community.lawyer/docassemble_builder/docassemble_word_templates?access_key=cytaIAzGuXEdgOHlkxx9TwtjFcQX5w&id=3706').json()
  document_url = fill_response.get('document')
  t_Rogers_Review_Hearing_Checklist_f873d340a581_holder_cl_ignore = DAFileCollection()
  t_Rogers_Review_Hearing_Checklist_f873d340a581_holder_cl_ignore.docx = DAFile(filename='Rogers_Review_Hearing_Checklist.docx')
  t_Rogers_Review_Hearing_Checklist_f873d340a581_holder_cl_ignore.docx.from_url(document_url)
  t_Rogers_Review_Hearing_Checklist_f873d340a581_holder_cl_ignore.info = {'raw': '', 'name': 'Rogers Review Hearing Checklist', 'filename': 'Rogers_Review_Hearing_Checklist', 'description': ''}
---
attachment:
  name: "Rogers Review Hearing Checklist"
  filename: "Rogers Review Hearing Checklist"
  variable name: t_Rogers_Review_Hearing_Checklist_f873d340a581_attachment_holder_cl_ignore
  valid formats:
    - docx
  docx template file:
    code: |
      t_Rogers_Review_Hearing_Checklist_f873d340a581_holder_cl_ignore.docx
  code:
    passive_possible_variables()
---
mandatory: True
code: |
  import requests
  import json
  define("___authorized", requests.get("https://community.lawyer/docassemble_builder/docassemble_interviews/authorize?id=4728&key=" + str(url_args.get('key'))).json()['authorized'])
---
mandatory: |
  not ___authorized
question: Sorry, you are not authorized to access this page.
subquestion: Try signing into your account or contacting the App author.
---
features:
	debug: True
	inverse navbar: False
	progress bar: True
	javascript:
		- https://community.lawyer/static/system_d-22.js
	css:
		- https://community.lawyer/static/styles/jcc-13.css
---
metadata:
	title: |
		Rogers Review Assistant
---
initial: True
code: |
	set_language('en')
---
mandatory: True
code: |
  multi_user = True
---
mandatory: True
code: |
  from docassemble.base.util import device
  ___user_device = device().browser.family
---
mandatory: True
code: |
  if ___user_device == "IE":
    log("This app may not run as expected on Internet Explorer - please consider using a more modern browser, such as those found <a href='http://outdatedbrowser.com/en'>here</a>.", "warning")
---
id: 99179
mandatory: |
	True
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	\*\*\*\*\*\*\*\*\*\*\* For Demonstration Purposes Only \*\*\*\*\*\*\*\*\*\*\*

	This is a class project. You should not rely on it as a source of legal information. It is likely incomplete.

	\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*

	**The Rogers Review Assistant helps guardians with Rogers Authority, also refered to as substituted judgement authority, prepare for their annual Rogers Review hearings.**


	This interview should take approximately 20-30 minutes to complete.  At any time during the interview, you can save your answers and return later to finish the interview.


	To help you complete this interview, please have available the following forms:

	- [Decree & Order of Appointment of Guardianship for an Incapacited Person](https://mlursul.github.io/ctl_final/Docs/CourtDocs/Guardianship_DecreeOrder.pdf)
	- [Treatment Plan](https://mlursul.github.io/ctl_final/Docs/CourtDocs/TreatmentPlan.pdf)
	- [REVIEW ORDER Antipsychotic Medication  ](https://www.mass.gov/doc/review-order-antipsychotic-medication-mpc-827/download)

	At the end of this interview, you will be able to download documents and a "next steps" checklist.


	You also have the option to entroll in the [Rogers Review Reminder System ](https://calendly.com/rogersreviewremindersystem/rogers-review-hearing)receive email and text message alerts reminding you of your upcoming Rogers Review hearing. The reminders will be sent 60-days, 30-days, and 1-week before court.


	_Disclaimer: This questionaire is informational only, and is not legal advice.  Use of this questionaire does not create an attorney-client relationship.  Please contact an attorney for legal advice directed at any specific concerns you may have._
field: ___ivn_3

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 128976
mandatory: |
	True
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	**What is the Guardian's name?**


	The "guardian" is the person who has decisional authority over another.
fields:
	- "<span class=\"producer \" data-variable-name=\"___ivn_198\" data-field-id=\"235250\" >First Name:</span>": ___ivn_198
		datatype: text
		required: true

	- "<span class=\"producer \" data-variable-name=\"___ivn_199\" data-field-id=\"235251\" >Last Name:</span>": ___ivn_199
		datatype: text
		required: true

	- "<span class=\"producer \" data-variable-name=\"___ivn_200\" data-field-id=\"235252\" >Suffix:</span>": ___ivn_200
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_224\" data-field-id=\"235263\" >Is there a co-guardian?</span>": ___ivn_224
		datatype: yesnoradio
		required: true

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 128978
mandatory: |
	is_truthy((((augment(___ivn_224) if defined("___ivn_224") else Undefined()))))
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	**What is the Co-Guardian's name?**
fields:
	- "<span class=\"producer \" data-variable-name=\"___ivn_225\" data-field-id=\"235265\" >First Name:</span>": ___ivn_225
		datatype: text
		required: true

	- "<span class=\"producer \" data-variable-name=\"___ivn_226\" data-field-id=\"235266\" >Last Name:</span>": ___ivn_226
		datatype: text
		required: true

	- "<span class=\"producer \" data-variable-name=\"___ivn_227\" data-field-id=\"235267\" >Suffix</span>": ___ivn_227
		datatype: text
		required: false

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 99188
mandatory: |
	True
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	**Does ${___ivn_198 if defined("___ivn_198") else empty_string()} ${___ivn_199 if defined("___ivn_199") else empty_string()}  ${___ivn_200 if defined("___ivn_200") else empty_string()} have Rogers authority?**


	"Rogers authority" is the power to consent to and oversee extraordinary medical treatment, such as the use of anti-psychotic drugs.
fields:
	- "<span class=\"producer \" data-variable-name=\"___ivn_23\" data-field-id=\"196722\" ></span>": ___ivn_23
		datatype: yesnoradio
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_196\" data-field-id=\"231076\" >Date of your last Rogers Review hearing (leave blank if this will be your first Rogers Review hearing):</span>": ___ivn_196
		datatype: date
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_195\" data-field-id=\"231075\" >Date of your upcoming Rogers Review hearing:</span>": ___ivn_195
		datatype: date
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_193\" data-field-id=\"231073\" >Date the judge approved the current _Treatment Plan_:</span>": ___ivn_193
		datatype: date
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_194\" data-field-id=\"231074\" >Date the current _Treatment Plan_ expires:</span>": ___ivn_194
		datatype: date
		required: true

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

script: |
	<script>


    $(function(){
      window.CL.quicklyHideConditionalFields();

      window.CL.updateFieldVisibility = function () {
        if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_23))).wrapped))) { window.CL.showField("231076"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_23))).wrapped))) { window.CL.showField("231075"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_23))).wrapped))) { window.CL.showField("231073"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_23))).wrapped))) { window.CL.showField("231074"); }
        if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_23))).wrapped))) { window.CL.hideField("231076"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_23))).wrapped))) { window.CL.hideField("231075"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_23))).wrapped))) { window.CL.hideField("231073"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_23))).wrapped))) { window.CL.hideField("231074"); }
      };

      window.CL.recomputeDerivedVariables = function () {
        var variablesBefore = $.extend(true, {}, window.CL.variables);

        
        window.CL.variables.___shortcut_133_false = (window.CL.negate(window.CL.variables.___ivn_133))
    		window.CL.variables.___shortcut_130_false = (window.CL.negate(window.CL.variables.___ivn_130))
    		window.CL.variables.___shortcut_139_false = (window.CL.negate(window.CL.variables.___ivn_139))
    		window.CL.variables.___shortcut_142_false = (window.CL.negate(window.CL.variables.___ivn_142))
    		window.CL.variables.___shortcut_180_false = (window.CL.negate(window.CL.variables.___ivn_180))
    		window.CL.variables.___shortcut_136_false = (window.CL.negate(window.CL.variables.___ivn_136))
    		window.CL.variables.___shortcut_246_false = (window.CL.negate(window.CL.variables.___ivn_246))
    		window.CL.variables.___shortcut_222_false = (window.CL.negate(window.CL.variables.___ivn_222))
    		window.CL.variables.___shortcut_224_false = (window.CL.negate(window.CL.variables.___ivn_224))
    		window.CL.variables.___shortcut_162_false = (window.CL.negate(window.CL.variables.___ivn_162))
    		window.CL.variables.___shortcut_208_choice = (window.CL.variables.___ivn_206 === "Barnstable Probate & Family")
    		window.CL.variables.___shortcut_209_choice = (window.CL.variables.___ivn_206 === "Berkshire Probate & Family")
    		window.CL.variables.___shortcut_210_choice = (window.CL.variables.___ivn_206 === "Bristol Probate & Family")
    		window.CL.variables.___shortcut_211_choice = (window.CL.variables.___ivn_206 === "Dukes Probate & Family")
    		window.CL.variables.___shortcut_212_choice = (window.CL.variables.___ivn_206 === "Essex Probate & Family")
    		window.CL.variables.___shortcut_213_choice = (window.CL.variables.___ivn_206 === "Franklin Probate & Family")
    		window.CL.variables.___shortcut_214_choice = (window.CL.variables.___ivn_206 === "Hampshire Probate & Family")
    		window.CL.variables.___shortcut_215_choice = (window.CL.variables.___ivn_206 === "Middlesex Probate & Family")
    		window.CL.variables.___shortcut_216_choice = (window.CL.variables.___ivn_206 === "Nantucket Probate & Family")
    		window.CL.variables.___shortcut_217_choice = (window.CL.variables.___ivn_206 === "Norfolk Probate & Family")
    		window.CL.variables.___shortcut_218_choice = (window.CL.variables.___ivn_206 === "Plymouth Probate & Family")
    		window.CL.variables.___shortcut_207_choice = (window.CL.variables.___ivn_206 === "Suffolk Probate & Family")
    		window.CL.variables.___shortcut_219_choice = (window.CL.variables.___ivn_206 === "Worcester Probate & Family")
    		window.CL.variables.___shortcut_114_false = (window.CL.negate(window.CL.variables.___ivn_114))
    		window.CL.variables.___shortcut_35_false = (window.CL.negate(window.CL.variables.___ivn_35))
    		window.CL.variables.___shortcut_160_false = (window.CL.negate(window.CL.variables.___ivn_160))
    		window.CL.variables.___shortcut_161_false = (window.CL.negate(window.CL.variables.___ivn_161))
    		window.CL.variables.___shortcut_26_false = (window.CL.negate(window.CL.variables.___ivn_26))
    		window.CL.variables.___shortcut_150_false = (window.CL.negate(window.CL.variables.___ivn_150))
    		window.CL.variables.___shortcut_115_false = (window.CL.negate(window.CL.variables.___ivn_115))
    		window.CL.variables.___shortcut_145_false = (window.CL.negate(window.CL.variables.___ivn_145))
    		window.CL.variables.___shortcut_95_false = (window.CL.negate(window.CL.variables.___ivn_95))
    		window.CL.variables.___shortcut_93_false = (window.CL.negate(window.CL.variables.___ivn_93))
    		window.CL.variables.___shortcut_101_false = (window.CL.negate(window.CL.variables.___ivn_101))
    		window.CL.variables.___shortcut_100_false = (window.CL.negate(window.CL.variables.___ivn_100))
    		window.CL.variables.___shortcut_106_false = (window.CL.negate(window.CL.variables.___ivn_106))
    		window.CL.variables.___shortcut_154_false = (window.CL.negate(window.CL.variables.___ivn_154))
    		window.CL.variables.___shortcut_89_false = (window.CL.negate(window.CL.variables.___ivn_89))
    		window.CL.variables.___shortcut_83_choice = (window.CL.variables.___ivn_82 === "Resp_ResCommunity")
    		window.CL.variables.___shortcut_84_choice = (window.CL.variables.___ivn_82 === "Resp_ResDDS")
    		window.CL.variables.___shortcut_85_choice = (window.CL.variables.___ivn_82 === "Resp_ResDMH")
    		window.CL.variables.___shortcut_87_choice = (window.CL.variables.___ivn_82 === "Resp_ResHome")
    		window.CL.variables.___shortcut_86_choice = (window.CL.variables.___ivn_82 === "Resp_ResNurse")
    		window.CL.variables.___shortcut_88_choice = (window.CL.variables.___ivn_82 === "Resp_ResOther")
    		window.CL.variables.___shortcut_110_choice = (window.CL.variables.___ivn_107 === "Adequate")
    		window.CL.variables.___shortcut_109_choice = (window.CL.variables.___ivn_107 === "Good")
    		window.CL.variables.___shortcut_111_choice = (window.CL.variables.___ivn_107 === "Poor")
    		window.CL.variables.___shortcut_108_choice = (window.CL.variables.___ivn_107 === "Very Good")
    		window.CL.variables.___shortcut_229_false = (window.CL.negate(window.CL.variables.___ivn_229))
    		window.CL.variables.___shortcut_23_false = (window.CL.negate(window.CL.variables.___ivn_23))
    		window.CL.variables.___shortcut_122_choice = (window.CL.variables.___ivn_120 === "Change")
    		window.CL.variables.___shortcut_121_choice = (window.CL.variables.___ivn_120 === "Continue")
    		window.CL.variables.___shortcut_3_false = (window.CL.negate(window.CL.variables.___ivn_3))
    		window.CL.variables.___shortcut_184_false = (window.CL.negate(window.CL.variables.___ivn_184))
        
        

        if (!window.CL.objectsEqual(variablesBefore, window.CL.variables)) {
          return window.CL.recomputeDerivedVariables();
        }
        window.CL.updateFieldVisibility();
      };

      window.CL.updateValue = function (variableName, variableValue) {
        window.CL.variables[variableName] = variableValue;
        window.CL.recomputeDerivedVariables();
      };

      window.CL.assignFieldChangeListeners = function () {
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').on('input change', function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      };

      window.CL.assignEmbeddedFieldChangeListeners = function () {
        $('.embedded-field').each(function() {
          var wrapper = $(this);
          var variableName = wrapper.data('variable-name');
          wrapper.find('.input-embedded').on('input change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.radio-embedded').on('change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.checkbox-embedded').on('change', function() {
            var $this = $(this);
            var $id = $this.prop('id');
            var $labelContainer = $('label[for="' + $id +'"]');
            var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
            console.log("updating " + $variableName + ' to ' + $this.is(':checked'));
            window.CL.updateValue($variableName, $this.is(':checked'));
          });
        });
      };

      window.CL.assignFieldChangeListeners();
      window.CL.assignEmbeddedFieldChangeListeners();
      window.CL.getExistingVariables(function(){
        window.CL.recomputeDerivedVariables();
      });

      // uptake field values from the screen in case we went back
      // need to set timeout and wait or it doesn't work
      setTimeout(function(){
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').each(function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else if (this.type === 'radio') {
              if ($(this).is(':checked')) {
                window.CL.updateValue(variableName, this.value);
              }
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      }, 250);
    });


	</script>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 128977
mandatory: |
	is_truthy((((augment(___ivn_23) if defined("___ivn_23") else Undefined()))))
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	**What is the Respondent's name?**


	The "respondent" is the person who is under the guardianship of ${___ivn_198 if defined("___ivn_198") else empty_string()} ${___ivn_199 if defined("___ivn_199") else empty_string()}.
fields:
	- "<span class=\"producer \" data-variable-name=\"___ivn_202\" data-field-id=\"235253\" >First Name:</span>": ___ivn_202
		datatype: text
		required: true

	- "<span class=\"producer \" data-variable-name=\"___ivn_203\" data-field-id=\"235255\" >Middle Name:</span>": ___ivn_203
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_204\" data-field-id=\"235256\" >Last Name:</span>": ___ivn_204
		datatype: text
		required: true

	- "<span class=\"producer \" data-variable-name=\"___ivn_205\" data-field-id=\"235257\" >Suffix:</span>": ___ivn_205
		datatype: text
		required: false

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 125559
mandatory: |
	is_truthy((((augment(___ivn_23) if defined("___ivn_23") else Undefined()))))
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |

fields:
	- "<span class=\"producer \" data-variable-name=\"___ivn_191\" data-field-id=\"231071\" >When was ${___ivn_198 if defined(\"___ivn_198\") else empty_string()} ${___ivn_199 if defined(\"___ivn_199\") else empty_string()} ${___ivn_200 if defined(\"___ivn_200\") else empty_string()} first appointed gaurdian of ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()} ?</span>": ___ivn_191
		datatype: date
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_221\" data-field-id=\"235260\" >What is the docket number?</span>": ___ivn_221
		datatype: integer
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_206\" data-field-id=\"235258\" >Where was ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}'s guardianship hearing?</span>": ___ivn_206
		input type: dropdown
		required: true
		datatype: text
		choices:
			- "<span>Suffolk Probate and Family Court</span>": "Suffolk Probate & Family"
			- "<span>Barnstable Probate and Family Court</span>": "Barnstable Probate & Family"
			- "<span>Berkshire Probate and Family Court</span>": "Berkshire Probate & Family"
			- "<span>Bristol Probate and Family Court</span>": "Bristol Probate & Family"
			- "<span>Dukes Probate and Family Court</span>": "Dukes Probate & Family"
			- "<span>Essex Probate and Family Court</span>": "Essex Probate & Family"
			- "<span>Franklin Probate and Family Court</span>": "Franklin Probate & Family"
			- "<span>Hampshire Probate and Family Court</span>": "Hampshire Probate & Family"
			- "<span>Middlesex Probate and Family Court</span>": "Middlesex Probate & Family"
			- "<span>Nantucket Probate and Family Court</span>": "Nantucket Probate & Family"
			- "<span>Norfolk Probate and Family Court</span>": "Norfolk Probate & Family"
			- "<span>Plymouth Probate and Family Court</span>": "Plymouth Probate & Family"
			- "<span>Worcester Probate and Family Court</span>": "Worcester Probate & Family"

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 99190
mandatory: |
	is_truthy((((augment(___shortcut_23_false) if defined("___shortcut_23_false") else Undefined()))))
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	You do not have Rogers Authority and do not have to go through the Rogers Review process.


	All guardians must file a _[Guardian's Care/Plan Report](https://www.mass.gov/doc/guardians-care-planreport-mpc-821/download)_ 60 days after being appointed guardian and yearly following that.
field: ___ivn_26

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 97918
mandatory: |
	is_truthy((((augment(___ivn_23) if defined("___ivn_23") else Undefined()))))
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	**Tell me about ${___ivn_198 if defined("___ivn_198") else empty_string()} ${___ivn_199 if defined("___ivn_199") else empty_string()} ${___ivn_200 if defined("___ivn_200") else empty_string()}:**
fields:
	- "<span class=\"producer \" data-variable-name=\"___ivn_37\" data-field-id=\"226959\" >Street Address:</span>": ___ivn_37
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_38\" data-field-id=\"227005\" >Apartment or Unit Number:</span>": ___ivn_38
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_39\" data-field-id=\"227007\" >City or Town:</span>": ___ivn_39
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_40\" data-field-id=\"227008\" >State (abbreviated):</span>": ___ivn_40
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_41\" data-field-id=\"227009\" >Zip Code:</span>": ___ivn_41
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_42\" data-field-id=\"227010\" >Primary Phone Number:</span>": ___ivn_42
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_43\" data-field-id=\"227011\" >E-mail Address:</span>": ___ivn_43
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_44\" data-field-id=\"227012\" >Relationship to the Respondent (parent, child, sibling, aunt/uncle, grandparent, etc.):</span>": ___ivn_44
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_35\" data-field-id=\"226947\" >Are you also the Rogers monitor?</span>": ___ivn_35
		datatype: yesnoradio
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_62\" data-field-id=\"227045\" >When did the court appoint you as Rogers monitor?  The \"Rogers Monitor\" is the person who reports back to the court about ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}'s treatment.</span>": ___ivn_62
		datatype: date
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_114\" data-field-id=\"227180\" >Are you also the conservator?  The \"Conservator\" is the person appointed by the court to handle ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}'s finances.</span>": ___ivn_114
		datatype: yesnoradio
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_162\" data-field-id=\"227359\" >Is there a conservator appointed for ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}?</span>": ___ivn_162
		datatype: yesnoradio
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_160\" data-field-id=\"227354\" >Are you also ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}'s  representative payee? \"Representative Payee\" is someone who receives Social Security Disability or Supplemental Security Income for another person.</span>": ___ivn_160
		datatype: yesnoradio
		required: true

	- "<span class=\"producer \" data-variable-name=\"___ivn_161\" data-field-id=\"227358\" >Do you hold or receive funds belonging to ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()} in your role as guardian other than as a representative payee?</span>": ___ivn_161
		datatype: yesnoradio
		required: true

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

script: |
	<script>


    $(function(){
      window.CL.quicklyHideConditionalFields();

      window.CL.updateFieldVisibility = function () {
        if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_35))).wrapped))) { window.CL.showField("227045"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___shortcut_114_false))).wrapped))) { window.CL.showField("227359"); }
        if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_35))).wrapped))) { window.CL.hideField("227045"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___shortcut_114_false))).wrapped))) { window.CL.hideField("227359"); }
      };

      window.CL.recomputeDerivedVariables = function () {
        var variablesBefore = $.extend(true, {}, window.CL.variables);

        
        window.CL.variables.___shortcut_133_false = (window.CL.negate(window.CL.variables.___ivn_133))
    		window.CL.variables.___shortcut_130_false = (window.CL.negate(window.CL.variables.___ivn_130))
    		window.CL.variables.___shortcut_139_false = (window.CL.negate(window.CL.variables.___ivn_139))
    		window.CL.variables.___shortcut_142_false = (window.CL.negate(window.CL.variables.___ivn_142))
    		window.CL.variables.___shortcut_180_false = (window.CL.negate(window.CL.variables.___ivn_180))
    		window.CL.variables.___shortcut_136_false = (window.CL.negate(window.CL.variables.___ivn_136))
    		window.CL.variables.___shortcut_246_false = (window.CL.negate(window.CL.variables.___ivn_246))
    		window.CL.variables.___shortcut_222_false = (window.CL.negate(window.CL.variables.___ivn_222))
    		window.CL.variables.___shortcut_224_false = (window.CL.negate(window.CL.variables.___ivn_224))
    		window.CL.variables.___shortcut_162_false = (window.CL.negate(window.CL.variables.___ivn_162))
    		window.CL.variables.___shortcut_208_choice = (window.CL.variables.___ivn_206 === "Barnstable Probate & Family")
    		window.CL.variables.___shortcut_209_choice = (window.CL.variables.___ivn_206 === "Berkshire Probate & Family")
    		window.CL.variables.___shortcut_210_choice = (window.CL.variables.___ivn_206 === "Bristol Probate & Family")
    		window.CL.variables.___shortcut_211_choice = (window.CL.variables.___ivn_206 === "Dukes Probate & Family")
    		window.CL.variables.___shortcut_212_choice = (window.CL.variables.___ivn_206 === "Essex Probate & Family")
    		window.CL.variables.___shortcut_213_choice = (window.CL.variables.___ivn_206 === "Franklin Probate & Family")
    		window.CL.variables.___shortcut_214_choice = (window.CL.variables.___ivn_206 === "Hampshire Probate & Family")
    		window.CL.variables.___shortcut_215_choice = (window.CL.variables.___ivn_206 === "Middlesex Probate & Family")
    		window.CL.variables.___shortcut_216_choice = (window.CL.variables.___ivn_206 === "Nantucket Probate & Family")
    		window.CL.variables.___shortcut_217_choice = (window.CL.variables.___ivn_206 === "Norfolk Probate & Family")
    		window.CL.variables.___shortcut_218_choice = (window.CL.variables.___ivn_206 === "Plymouth Probate & Family")
    		window.CL.variables.___shortcut_207_choice = (window.CL.variables.___ivn_206 === "Suffolk Probate & Family")
    		window.CL.variables.___shortcut_219_choice = (window.CL.variables.___ivn_206 === "Worcester Probate & Family")
    		window.CL.variables.___shortcut_114_false = (window.CL.negate(window.CL.variables.___ivn_114))
    		window.CL.variables.___shortcut_35_false = (window.CL.negate(window.CL.variables.___ivn_35))
    		window.CL.variables.___shortcut_160_false = (window.CL.negate(window.CL.variables.___ivn_160))
    		window.CL.variables.___shortcut_161_false = (window.CL.negate(window.CL.variables.___ivn_161))
    		window.CL.variables.___shortcut_26_false = (window.CL.negate(window.CL.variables.___ivn_26))
    		window.CL.variables.___shortcut_150_false = (window.CL.negate(window.CL.variables.___ivn_150))
    		window.CL.variables.___shortcut_115_false = (window.CL.negate(window.CL.variables.___ivn_115))
    		window.CL.variables.___shortcut_145_false = (window.CL.negate(window.CL.variables.___ivn_145))
    		window.CL.variables.___shortcut_95_false = (window.CL.negate(window.CL.variables.___ivn_95))
    		window.CL.variables.___shortcut_93_false = (window.CL.negate(window.CL.variables.___ivn_93))
    		window.CL.variables.___shortcut_101_false = (window.CL.negate(window.CL.variables.___ivn_101))
    		window.CL.variables.___shortcut_100_false = (window.CL.negate(window.CL.variables.___ivn_100))
    		window.CL.variables.___shortcut_106_false = (window.CL.negate(window.CL.variables.___ivn_106))
    		window.CL.variables.___shortcut_154_false = (window.CL.negate(window.CL.variables.___ivn_154))
    		window.CL.variables.___shortcut_89_false = (window.CL.negate(window.CL.variables.___ivn_89))
    		window.CL.variables.___shortcut_83_choice = (window.CL.variables.___ivn_82 === "Resp_ResCommunity")
    		window.CL.variables.___shortcut_84_choice = (window.CL.variables.___ivn_82 === "Resp_ResDDS")
    		window.CL.variables.___shortcut_85_choice = (window.CL.variables.___ivn_82 === "Resp_ResDMH")
    		window.CL.variables.___shortcut_87_choice = (window.CL.variables.___ivn_82 === "Resp_ResHome")
    		window.CL.variables.___shortcut_86_choice = (window.CL.variables.___ivn_82 === "Resp_ResNurse")
    		window.CL.variables.___shortcut_88_choice = (window.CL.variables.___ivn_82 === "Resp_ResOther")
    		window.CL.variables.___shortcut_110_choice = (window.CL.variables.___ivn_107 === "Adequate")
    		window.CL.variables.___shortcut_109_choice = (window.CL.variables.___ivn_107 === "Good")
    		window.CL.variables.___shortcut_111_choice = (window.CL.variables.___ivn_107 === "Poor")
    		window.CL.variables.___shortcut_108_choice = (window.CL.variables.___ivn_107 === "Very Good")
    		window.CL.variables.___shortcut_229_false = (window.CL.negate(window.CL.variables.___ivn_229))
    		window.CL.variables.___shortcut_23_false = (window.CL.negate(window.CL.variables.___ivn_23))
    		window.CL.variables.___shortcut_122_choice = (window.CL.variables.___ivn_120 === "Change")
    		window.CL.variables.___shortcut_121_choice = (window.CL.variables.___ivn_120 === "Continue")
    		window.CL.variables.___shortcut_3_false = (window.CL.negate(window.CL.variables.___ivn_3))
    		window.CL.variables.___shortcut_184_false = (window.CL.negate(window.CL.variables.___ivn_184))
        
        

        if (!window.CL.objectsEqual(variablesBefore, window.CL.variables)) {
          return window.CL.recomputeDerivedVariables();
        }
        window.CL.updateFieldVisibility();
      };

      window.CL.updateValue = function (variableName, variableValue) {
        window.CL.variables[variableName] = variableValue;
        window.CL.recomputeDerivedVariables();
      };

      window.CL.assignFieldChangeListeners = function () {
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').on('input change', function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      };

      window.CL.assignEmbeddedFieldChangeListeners = function () {
        $('.embedded-field').each(function() {
          var wrapper = $(this);
          var variableName = wrapper.data('variable-name');
          wrapper.find('.input-embedded').on('input change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.radio-embedded').on('change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.checkbox-embedded').on('change', function() {
            var $this = $(this);
            var $id = $this.prop('id');
            var $labelContainer = $('label[for="' + $id +'"]');
            var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
            console.log("updating " + $variableName + ' to ' + $this.is(':checked'));
            window.CL.updateValue($variableName, $this.is(':checked'));
          });
        });
      };

      window.CL.assignFieldChangeListeners();
      window.CL.assignEmbeddedFieldChangeListeners();
      window.CL.getExistingVariables(function(){
        window.CL.recomputeDerivedVariables();
      });

      // uptake field values from the screen in case we went back
      // need to set timeout and wait or it doesn't work
      setTimeout(function(){
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').each(function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else if (this.type === 'radio') {
              if ($(this).is(':checked')) {
                window.CL.updateValue(variableName, this.value);
              }
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      }, 250);
    });


	</script>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 99181
mandatory: |
	is_truthy(((((augment(___ivn_224) if defined("___ivn_224") else Undefined()))).boolean_and(((augment(___ivn_23) if defined("___ivn_23") else Undefined())))))
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	**Tell me about ${___ivn_225 if defined("___ivn_225") else empty_string()} ${___ivn_226 if defined("___ivn_226") else empty_string()} ${___ivn_227 if defined("___ivn_227") else empty_string()}:**
fields:
	- "<span class=\"producer \" data-variable-name=\"___ivn_222\" data-field-id=\"235262\" >Do they live at the same address as ${___ivn_198 if defined(\"___ivn_198\") else empty_string()} ${___ivn_199 if defined(\"___ivn_199\") else empty_string()} ${___ivn_200 if defined(\"___ivn_200\") else empty_string()} ?</span>": ___ivn_222
		datatype: yesnoradio
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_45\" data-field-id=\"227013\" >Street Address:</span>": ___ivn_45
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_46\" data-field-id=\"227014\" >Apartment or Unit Number:</span>": ___ivn_46
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_47\" data-field-id=\"227015\" >City or Town:</span>": ___ivn_47
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_48\" data-field-id=\"227016\" >State (abbreviated):</span>": ___ivn_48
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_49\" data-field-id=\"227017\" >Zip Code:</span>": ___ivn_49
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_50\" data-field-id=\"227018\" >Primary Phone Number:</span>": ___ivn_50
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_51\" data-field-id=\"227021\" >E-mail Address:</span>": ___ivn_51
		datatype: text
		required: false

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

script: |
	<script>


    $(function(){
      window.CL.quicklyHideConditionalFields();

      window.CL.updateFieldVisibility = function () {
        if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___shortcut_222_false))).wrapped))) { window.CL.showField("227013"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___shortcut_222_false))).wrapped))) { window.CL.showField("227014"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___shortcut_222_false))).wrapped))) { window.CL.showField("227015"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___shortcut_222_false))).wrapped))) { window.CL.showField("227016"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___shortcut_222_false))).wrapped))) { window.CL.showField("227017"); }
        if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___shortcut_222_false))).wrapped))) { window.CL.hideField("227013"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___shortcut_222_false))).wrapped))) { window.CL.hideField("227014"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___shortcut_222_false))).wrapped))) { window.CL.hideField("227015"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___shortcut_222_false))).wrapped))) { window.CL.hideField("227016"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___shortcut_222_false))).wrapped))) { window.CL.hideField("227017"); }
      };

      window.CL.recomputeDerivedVariables = function () {
        var variablesBefore = $.extend(true, {}, window.CL.variables);

        
        window.CL.variables.___shortcut_133_false = (window.CL.negate(window.CL.variables.___ivn_133))
    		window.CL.variables.___shortcut_130_false = (window.CL.negate(window.CL.variables.___ivn_130))
    		window.CL.variables.___shortcut_139_false = (window.CL.negate(window.CL.variables.___ivn_139))
    		window.CL.variables.___shortcut_142_false = (window.CL.negate(window.CL.variables.___ivn_142))
    		window.CL.variables.___shortcut_180_false = (window.CL.negate(window.CL.variables.___ivn_180))
    		window.CL.variables.___shortcut_136_false = (window.CL.negate(window.CL.variables.___ivn_136))
    		window.CL.variables.___shortcut_246_false = (window.CL.negate(window.CL.variables.___ivn_246))
    		window.CL.variables.___shortcut_222_false = (window.CL.negate(window.CL.variables.___ivn_222))
    		window.CL.variables.___shortcut_224_false = (window.CL.negate(window.CL.variables.___ivn_224))
    		window.CL.variables.___shortcut_162_false = (window.CL.negate(window.CL.variables.___ivn_162))
    		window.CL.variables.___shortcut_208_choice = (window.CL.variables.___ivn_206 === "Barnstable Probate & Family")
    		window.CL.variables.___shortcut_209_choice = (window.CL.variables.___ivn_206 === "Berkshire Probate & Family")
    		window.CL.variables.___shortcut_210_choice = (window.CL.variables.___ivn_206 === "Bristol Probate & Family")
    		window.CL.variables.___shortcut_211_choice = (window.CL.variables.___ivn_206 === "Dukes Probate & Family")
    		window.CL.variables.___shortcut_212_choice = (window.CL.variables.___ivn_206 === "Essex Probate & Family")
    		window.CL.variables.___shortcut_213_choice = (window.CL.variables.___ivn_206 === "Franklin Probate & Family")
    		window.CL.variables.___shortcut_214_choice = (window.CL.variables.___ivn_206 === "Hampshire Probate & Family")
    		window.CL.variables.___shortcut_215_choice = (window.CL.variables.___ivn_206 === "Middlesex Probate & Family")
    		window.CL.variables.___shortcut_216_choice = (window.CL.variables.___ivn_206 === "Nantucket Probate & Family")
    		window.CL.variables.___shortcut_217_choice = (window.CL.variables.___ivn_206 === "Norfolk Probate & Family")
    		window.CL.variables.___shortcut_218_choice = (window.CL.variables.___ivn_206 === "Plymouth Probate & Family")
    		window.CL.variables.___shortcut_207_choice = (window.CL.variables.___ivn_206 === "Suffolk Probate & Family")
    		window.CL.variables.___shortcut_219_choice = (window.CL.variables.___ivn_206 === "Worcester Probate & Family")
    		window.CL.variables.___shortcut_114_false = (window.CL.negate(window.CL.variables.___ivn_114))
    		window.CL.variables.___shortcut_35_false = (window.CL.negate(window.CL.variables.___ivn_35))
    		window.CL.variables.___shortcut_160_false = (window.CL.negate(window.CL.variables.___ivn_160))
    		window.CL.variables.___shortcut_161_false = (window.CL.negate(window.CL.variables.___ivn_161))
    		window.CL.variables.___shortcut_26_false = (window.CL.negate(window.CL.variables.___ivn_26))
    		window.CL.variables.___shortcut_150_false = (window.CL.negate(window.CL.variables.___ivn_150))
    		window.CL.variables.___shortcut_115_false = (window.CL.negate(window.CL.variables.___ivn_115))
    		window.CL.variables.___shortcut_145_false = (window.CL.negate(window.CL.variables.___ivn_145))
    		window.CL.variables.___shortcut_95_false = (window.CL.negate(window.CL.variables.___ivn_95))
    		window.CL.variables.___shortcut_93_false = (window.CL.negate(window.CL.variables.___ivn_93))
    		window.CL.variables.___shortcut_101_false = (window.CL.negate(window.CL.variables.___ivn_101))
    		window.CL.variables.___shortcut_100_false = (window.CL.negate(window.CL.variables.___ivn_100))
    		window.CL.variables.___shortcut_106_false = (window.CL.negate(window.CL.variables.___ivn_106))
    		window.CL.variables.___shortcut_154_false = (window.CL.negate(window.CL.variables.___ivn_154))
    		window.CL.variables.___shortcut_89_false = (window.CL.negate(window.CL.variables.___ivn_89))
    		window.CL.variables.___shortcut_83_choice = (window.CL.variables.___ivn_82 === "Resp_ResCommunity")
    		window.CL.variables.___shortcut_84_choice = (window.CL.variables.___ivn_82 === "Resp_ResDDS")
    		window.CL.variables.___shortcut_85_choice = (window.CL.variables.___ivn_82 === "Resp_ResDMH")
    		window.CL.variables.___shortcut_87_choice = (window.CL.variables.___ivn_82 === "Resp_ResHome")
    		window.CL.variables.___shortcut_86_choice = (window.CL.variables.___ivn_82 === "Resp_ResNurse")
    		window.CL.variables.___shortcut_88_choice = (window.CL.variables.___ivn_82 === "Resp_ResOther")
    		window.CL.variables.___shortcut_110_choice = (window.CL.variables.___ivn_107 === "Adequate")
    		window.CL.variables.___shortcut_109_choice = (window.CL.variables.___ivn_107 === "Good")
    		window.CL.variables.___shortcut_111_choice = (window.CL.variables.___ivn_107 === "Poor")
    		window.CL.variables.___shortcut_108_choice = (window.CL.variables.___ivn_107 === "Very Good")
    		window.CL.variables.___shortcut_229_false = (window.CL.negate(window.CL.variables.___ivn_229))
    		window.CL.variables.___shortcut_23_false = (window.CL.negate(window.CL.variables.___ivn_23))
    		window.CL.variables.___shortcut_122_choice = (window.CL.variables.___ivn_120 === "Change")
    		window.CL.variables.___shortcut_121_choice = (window.CL.variables.___ivn_120 === "Continue")
    		window.CL.variables.___shortcut_3_false = (window.CL.negate(window.CL.variables.___ivn_3))
    		window.CL.variables.___shortcut_184_false = (window.CL.negate(window.CL.variables.___ivn_184))
        
        

        if (!window.CL.objectsEqual(variablesBefore, window.CL.variables)) {
          return window.CL.recomputeDerivedVariables();
        }
        window.CL.updateFieldVisibility();
      };

      window.CL.updateValue = function (variableName, variableValue) {
        window.CL.variables[variableName] = variableValue;
        window.CL.recomputeDerivedVariables();
      };

      window.CL.assignFieldChangeListeners = function () {
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').on('input change', function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      };

      window.CL.assignEmbeddedFieldChangeListeners = function () {
        $('.embedded-field').each(function() {
          var wrapper = $(this);
          var variableName = wrapper.data('variable-name');
          wrapper.find('.input-embedded').on('input change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.radio-embedded').on('change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.checkbox-embedded').on('change', function() {
            var $this = $(this);
            var $id = $this.prop('id');
            var $labelContainer = $('label[for="' + $id +'"]');
            var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
            console.log("updating " + $variableName + ' to ' + $this.is(':checked'));
            window.CL.updateValue($variableName, $this.is(':checked'));
          });
        });
      };

      window.CL.assignFieldChangeListeners();
      window.CL.assignEmbeddedFieldChangeListeners();
      window.CL.getExistingVariables(function(){
        window.CL.recomputeDerivedVariables();
      });

      // uptake field values from the screen in case we went back
      // need to set timeout and wait or it doesn't work
      setTimeout(function(){
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').each(function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else if (this.type === 'radio') {
              if ($(this).is(':checked')) {
                window.CL.updateValue(variableName, this.value);
              }
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      }, 250);
    });


	</script>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 99191
mandatory: |
	False
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	**Tell me about the Rogers Monitor:**


	The "Rogers Monitor" is the person who reports back to the court about ${___ivn_202 if defined("___ivn_202") else empty_string()} ${___ivn_204 if defined("___ivn_204") else empty_string()} ${___ivn_205 if defined("___ivn_205") else empty_string()}'s treatment.
fields:
	- "<span class=\"producer \" data-variable-name=\"___ivn_29\" data-field-id=\"196728\" >First Name:</span>": ___ivn_29
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_30\" data-field-id=\"196729\" >Last Name:</span>": ___ivn_30
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_31\" data-field-id=\"196730\" >Suffix:</span>": ___ivn_31
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_52\" data-field-id=\"227023\" >Street Address:</span>": ___ivn_52
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_53\" data-field-id=\"227024\" >Apartment or Unit Number:</span>": ___ivn_53
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_54\" data-field-id=\"227025\" >City or Town:</span>": ___ivn_54
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_56\" data-field-id=\"227028\" >State (abbreviated):</span>": ___ivn_56
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_55\" data-field-id=\"227027\" >Zip Code:</span>": ___ivn_55
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_57\" data-field-id=\"227032\" >Primary Phone Number:</span>": ___ivn_57
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_58\" data-field-id=\"227036\" >Relationship to the Respondent (parent, child, social worker, etc.):</span>": ___ivn_58
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_60\" data-field-id=\"227038\" >When did the court appoint the Rogers monitor?</span>": ___ivn_60
		datatype: date
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_115\" data-field-id=\"227181\" >Is the Rogers monitor also the conservator? \"Conservator\" refers to someone appointed by the court to handle the ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}'s  finances.</span>": ___ivn_115
		datatype: yesnoradio
		required: true

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

script: |
	<script>


    $(function(){
      window.CL.quicklyHideConditionalFields();

      window.CL.updateFieldVisibility = function () {
        if ((window.CL.isTruthy(((window.CL.augment(""))).wrapped))) { window.CL.showField("227181"); }
        if ((window.CL.isFalsy(((window.CL.augment(""))).wrapped))) { window.CL.hideField("227181"); }
      };

      window.CL.recomputeDerivedVariables = function () {
        var variablesBefore = $.extend(true, {}, window.CL.variables);

        
        window.CL.variables.___shortcut_133_false = (window.CL.negate(window.CL.variables.___ivn_133))
    		window.CL.variables.___shortcut_130_false = (window.CL.negate(window.CL.variables.___ivn_130))
    		window.CL.variables.___shortcut_139_false = (window.CL.negate(window.CL.variables.___ivn_139))
    		window.CL.variables.___shortcut_142_false = (window.CL.negate(window.CL.variables.___ivn_142))
    		window.CL.variables.___shortcut_180_false = (window.CL.negate(window.CL.variables.___ivn_180))
    		window.CL.variables.___shortcut_136_false = (window.CL.negate(window.CL.variables.___ivn_136))
    		window.CL.variables.___shortcut_246_false = (window.CL.negate(window.CL.variables.___ivn_246))
    		window.CL.variables.___shortcut_222_false = (window.CL.negate(window.CL.variables.___ivn_222))
    		window.CL.variables.___shortcut_224_false = (window.CL.negate(window.CL.variables.___ivn_224))
    		window.CL.variables.___shortcut_162_false = (window.CL.negate(window.CL.variables.___ivn_162))
    		window.CL.variables.___shortcut_208_choice = (window.CL.variables.___ivn_206 === "Barnstable Probate & Family")
    		window.CL.variables.___shortcut_209_choice = (window.CL.variables.___ivn_206 === "Berkshire Probate & Family")
    		window.CL.variables.___shortcut_210_choice = (window.CL.variables.___ivn_206 === "Bristol Probate & Family")
    		window.CL.variables.___shortcut_211_choice = (window.CL.variables.___ivn_206 === "Dukes Probate & Family")
    		window.CL.variables.___shortcut_212_choice = (window.CL.variables.___ivn_206 === "Essex Probate & Family")
    		window.CL.variables.___shortcut_213_choice = (window.CL.variables.___ivn_206 === "Franklin Probate & Family")
    		window.CL.variables.___shortcut_214_choice = (window.CL.variables.___ivn_206 === "Hampshire Probate & Family")
    		window.CL.variables.___shortcut_215_choice = (window.CL.variables.___ivn_206 === "Middlesex Probate & Family")
    		window.CL.variables.___shortcut_216_choice = (window.CL.variables.___ivn_206 === "Nantucket Probate & Family")
    		window.CL.variables.___shortcut_217_choice = (window.CL.variables.___ivn_206 === "Norfolk Probate & Family")
    		window.CL.variables.___shortcut_218_choice = (window.CL.variables.___ivn_206 === "Plymouth Probate & Family")
    		window.CL.variables.___shortcut_207_choice = (window.CL.variables.___ivn_206 === "Suffolk Probate & Family")
    		window.CL.variables.___shortcut_219_choice = (window.CL.variables.___ivn_206 === "Worcester Probate & Family")
    		window.CL.variables.___shortcut_114_false = (window.CL.negate(window.CL.variables.___ivn_114))
    		window.CL.variables.___shortcut_35_false = (window.CL.negate(window.CL.variables.___ivn_35))
    		window.CL.variables.___shortcut_160_false = (window.CL.negate(window.CL.variables.___ivn_160))
    		window.CL.variables.___shortcut_161_false = (window.CL.negate(window.CL.variables.___ivn_161))
    		window.CL.variables.___shortcut_26_false = (window.CL.negate(window.CL.variables.___ivn_26))
    		window.CL.variables.___shortcut_150_false = (window.CL.negate(window.CL.variables.___ivn_150))
    		window.CL.variables.___shortcut_115_false = (window.CL.negate(window.CL.variables.___ivn_115))
    		window.CL.variables.___shortcut_145_false = (window.CL.negate(window.CL.variables.___ivn_145))
    		window.CL.variables.___shortcut_95_false = (window.CL.negate(window.CL.variables.___ivn_95))
    		window.CL.variables.___shortcut_93_false = (window.CL.negate(window.CL.variables.___ivn_93))
    		window.CL.variables.___shortcut_101_false = (window.CL.negate(window.CL.variables.___ivn_101))
    		window.CL.variables.___shortcut_100_false = (window.CL.negate(window.CL.variables.___ivn_100))
    		window.CL.variables.___shortcut_106_false = (window.CL.negate(window.CL.variables.___ivn_106))
    		window.CL.variables.___shortcut_154_false = (window.CL.negate(window.CL.variables.___ivn_154))
    		window.CL.variables.___shortcut_89_false = (window.CL.negate(window.CL.variables.___ivn_89))
    		window.CL.variables.___shortcut_83_choice = (window.CL.variables.___ivn_82 === "Resp_ResCommunity")
    		window.CL.variables.___shortcut_84_choice = (window.CL.variables.___ivn_82 === "Resp_ResDDS")
    		window.CL.variables.___shortcut_85_choice = (window.CL.variables.___ivn_82 === "Resp_ResDMH")
    		window.CL.variables.___shortcut_87_choice = (window.CL.variables.___ivn_82 === "Resp_ResHome")
    		window.CL.variables.___shortcut_86_choice = (window.CL.variables.___ivn_82 === "Resp_ResNurse")
    		window.CL.variables.___shortcut_88_choice = (window.CL.variables.___ivn_82 === "Resp_ResOther")
    		window.CL.variables.___shortcut_110_choice = (window.CL.variables.___ivn_107 === "Adequate")
    		window.CL.variables.___shortcut_109_choice = (window.CL.variables.___ivn_107 === "Good")
    		window.CL.variables.___shortcut_111_choice = (window.CL.variables.___ivn_107 === "Poor")
    		window.CL.variables.___shortcut_108_choice = (window.CL.variables.___ivn_107 === "Very Good")
    		window.CL.variables.___shortcut_229_false = (window.CL.negate(window.CL.variables.___ivn_229))
    		window.CL.variables.___shortcut_23_false = (window.CL.negate(window.CL.variables.___ivn_23))
    		window.CL.variables.___shortcut_122_choice = (window.CL.variables.___ivn_120 === "Change")
    		window.CL.variables.___shortcut_121_choice = (window.CL.variables.___ivn_120 === "Continue")
    		window.CL.variables.___shortcut_3_false = (window.CL.negate(window.CL.variables.___ivn_3))
    		window.CL.variables.___shortcut_184_false = (window.CL.negate(window.CL.variables.___ivn_184))
        
        

        if (!window.CL.objectsEqual(variablesBefore, window.CL.variables)) {
          return window.CL.recomputeDerivedVariables();
        }
        window.CL.updateFieldVisibility();
      };

      window.CL.updateValue = function (variableName, variableValue) {
        window.CL.variables[variableName] = variableValue;
        window.CL.recomputeDerivedVariables();
      };

      window.CL.assignFieldChangeListeners = function () {
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').on('input change', function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      };

      window.CL.assignEmbeddedFieldChangeListeners = function () {
        $('.embedded-field').each(function() {
          var wrapper = $(this);
          var variableName = wrapper.data('variable-name');
          wrapper.find('.input-embedded').on('input change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.radio-embedded').on('change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.checkbox-embedded').on('change', function() {
            var $this = $(this);
            var $id = $this.prop('id');
            var $labelContainer = $('label[for="' + $id +'"]');
            var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
            console.log("updating " + $variableName + ' to ' + $this.is(':checked'));
            window.CL.updateValue($variableName, $this.is(':checked'));
          });
        });
      };

      window.CL.assignFieldChangeListeners();
      window.CL.assignEmbeddedFieldChangeListeners();
      window.CL.getExistingVariables(function(){
        window.CL.recomputeDerivedVariables();
      });

      // uptake field values from the screen in case we went back
      // need to set timeout and wait or it doesn't work
      setTimeout(function(){
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').each(function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else if (this.type === 'radio') {
              if ($(this).is(':checked')) {
                window.CL.updateValue(variableName, this.value);
              }
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      }, 250);
    });


	</script>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 99180
mandatory: |
	is_truthy((((augment(___ivn_23) if defined("___ivn_23") else Undefined()))))
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	**Tell me more about ${___ivn_202 if defined("___ivn_202") else empty_string()} ${___ivn_204 if defined("___ivn_204") else empty_string()} ${___ivn_205 if defined("___ivn_205") else empty_string()}:**
fields:
	- "<span class=\"producer \" data-variable-name=\"___ivn_67\" data-field-id=\"227145\" >Age:</span>": ___ivn_67
		datatype: integer
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_246\" data-field-id=\"251253\" >Do you know who ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}'s lawyer is?</span>": ___ivn_246
		datatype: yesnoradio
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_228\" data-field-id=\"235361\" >Who is ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}'s attorney?</span>": ___ivn_228
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_229\" data-field-id=\"235362\" >Does ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()} currently live with ${___ivn_198 if defined(\"___ivn_198\") else empty_string()} ${___ivn_199 if defined(\"___ivn_199\") else empty_string()} ${___ivn_200 if defined(\"___ivn_200\") else empty_string()}?</span>": ___ivn_229
		datatype: yesnoradio
		required: false

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

script: |
	<script>


    $(function(){
      window.CL.quicklyHideConditionalFields();

      window.CL.updateFieldVisibility = function () {
        if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_246))).wrapped))) { window.CL.showField("235361"); }
        if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_246))).wrapped))) { window.CL.hideField("235361"); }
      };

      window.CL.recomputeDerivedVariables = function () {
        var variablesBefore = $.extend(true, {}, window.CL.variables);

        
        window.CL.variables.___shortcut_133_false = (window.CL.negate(window.CL.variables.___ivn_133))
    		window.CL.variables.___shortcut_130_false = (window.CL.negate(window.CL.variables.___ivn_130))
    		window.CL.variables.___shortcut_139_false = (window.CL.negate(window.CL.variables.___ivn_139))
    		window.CL.variables.___shortcut_142_false = (window.CL.negate(window.CL.variables.___ivn_142))
    		window.CL.variables.___shortcut_180_false = (window.CL.negate(window.CL.variables.___ivn_180))
    		window.CL.variables.___shortcut_136_false = (window.CL.negate(window.CL.variables.___ivn_136))
    		window.CL.variables.___shortcut_246_false = (window.CL.negate(window.CL.variables.___ivn_246))
    		window.CL.variables.___shortcut_222_false = (window.CL.negate(window.CL.variables.___ivn_222))
    		window.CL.variables.___shortcut_224_false = (window.CL.negate(window.CL.variables.___ivn_224))
    		window.CL.variables.___shortcut_162_false = (window.CL.negate(window.CL.variables.___ivn_162))
    		window.CL.variables.___shortcut_208_choice = (window.CL.variables.___ivn_206 === "Barnstable Probate & Family")
    		window.CL.variables.___shortcut_209_choice = (window.CL.variables.___ivn_206 === "Berkshire Probate & Family")
    		window.CL.variables.___shortcut_210_choice = (window.CL.variables.___ivn_206 === "Bristol Probate & Family")
    		window.CL.variables.___shortcut_211_choice = (window.CL.variables.___ivn_206 === "Dukes Probate & Family")
    		window.CL.variables.___shortcut_212_choice = (window.CL.variables.___ivn_206 === "Essex Probate & Family")
    		window.CL.variables.___shortcut_213_choice = (window.CL.variables.___ivn_206 === "Franklin Probate & Family")
    		window.CL.variables.___shortcut_214_choice = (window.CL.variables.___ivn_206 === "Hampshire Probate & Family")
    		window.CL.variables.___shortcut_215_choice = (window.CL.variables.___ivn_206 === "Middlesex Probate & Family")
    		window.CL.variables.___shortcut_216_choice = (window.CL.variables.___ivn_206 === "Nantucket Probate & Family")
    		window.CL.variables.___shortcut_217_choice = (window.CL.variables.___ivn_206 === "Norfolk Probate & Family")
    		window.CL.variables.___shortcut_218_choice = (window.CL.variables.___ivn_206 === "Plymouth Probate & Family")
    		window.CL.variables.___shortcut_207_choice = (window.CL.variables.___ivn_206 === "Suffolk Probate & Family")
    		window.CL.variables.___shortcut_219_choice = (window.CL.variables.___ivn_206 === "Worcester Probate & Family")
    		window.CL.variables.___shortcut_114_false = (window.CL.negate(window.CL.variables.___ivn_114))
    		window.CL.variables.___shortcut_35_false = (window.CL.negate(window.CL.variables.___ivn_35))
    		window.CL.variables.___shortcut_160_false = (window.CL.negate(window.CL.variables.___ivn_160))
    		window.CL.variables.___shortcut_161_false = (window.CL.negate(window.CL.variables.___ivn_161))
    		window.CL.variables.___shortcut_26_false = (window.CL.negate(window.CL.variables.___ivn_26))
    		window.CL.variables.___shortcut_150_false = (window.CL.negate(window.CL.variables.___ivn_150))
    		window.CL.variables.___shortcut_115_false = (window.CL.negate(window.CL.variables.___ivn_115))
    		window.CL.variables.___shortcut_145_false = (window.CL.negate(window.CL.variables.___ivn_145))
    		window.CL.variables.___shortcut_95_false = (window.CL.negate(window.CL.variables.___ivn_95))
    		window.CL.variables.___shortcut_93_false = (window.CL.negate(window.CL.variables.___ivn_93))
    		window.CL.variables.___shortcut_101_false = (window.CL.negate(window.CL.variables.___ivn_101))
    		window.CL.variables.___shortcut_100_false = (window.CL.negate(window.CL.variables.___ivn_100))
    		window.CL.variables.___shortcut_106_false = (window.CL.negate(window.CL.variables.___ivn_106))
    		window.CL.variables.___shortcut_154_false = (window.CL.negate(window.CL.variables.___ivn_154))
    		window.CL.variables.___shortcut_89_false = (window.CL.negate(window.CL.variables.___ivn_89))
    		window.CL.variables.___shortcut_83_choice = (window.CL.variables.___ivn_82 === "Resp_ResCommunity")
    		window.CL.variables.___shortcut_84_choice = (window.CL.variables.___ivn_82 === "Resp_ResDDS")
    		window.CL.variables.___shortcut_85_choice = (window.CL.variables.___ivn_82 === "Resp_ResDMH")
    		window.CL.variables.___shortcut_87_choice = (window.CL.variables.___ivn_82 === "Resp_ResHome")
    		window.CL.variables.___shortcut_86_choice = (window.CL.variables.___ivn_82 === "Resp_ResNurse")
    		window.CL.variables.___shortcut_88_choice = (window.CL.variables.___ivn_82 === "Resp_ResOther")
    		window.CL.variables.___shortcut_110_choice = (window.CL.variables.___ivn_107 === "Adequate")
    		window.CL.variables.___shortcut_109_choice = (window.CL.variables.___ivn_107 === "Good")
    		window.CL.variables.___shortcut_111_choice = (window.CL.variables.___ivn_107 === "Poor")
    		window.CL.variables.___shortcut_108_choice = (window.CL.variables.___ivn_107 === "Very Good")
    		window.CL.variables.___shortcut_229_false = (window.CL.negate(window.CL.variables.___ivn_229))
    		window.CL.variables.___shortcut_23_false = (window.CL.negate(window.CL.variables.___ivn_23))
    		window.CL.variables.___shortcut_122_choice = (window.CL.variables.___ivn_120 === "Change")
    		window.CL.variables.___shortcut_121_choice = (window.CL.variables.___ivn_120 === "Continue")
    		window.CL.variables.___shortcut_3_false = (window.CL.negate(window.CL.variables.___ivn_3))
    		window.CL.variables.___shortcut_184_false = (window.CL.negate(window.CL.variables.___ivn_184))
        
        

        if (!window.CL.objectsEqual(variablesBefore, window.CL.variables)) {
          return window.CL.recomputeDerivedVariables();
        }
        window.CL.updateFieldVisibility();
      };

      window.CL.updateValue = function (variableName, variableValue) {
        window.CL.variables[variableName] = variableValue;
        window.CL.recomputeDerivedVariables();
      };

      window.CL.assignFieldChangeListeners = function () {
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').on('input change', function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      };

      window.CL.assignEmbeddedFieldChangeListeners = function () {
        $('.embedded-field').each(function() {
          var wrapper = $(this);
          var variableName = wrapper.data('variable-name');
          wrapper.find('.input-embedded').on('input change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.radio-embedded').on('change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.checkbox-embedded').on('change', function() {
            var $this = $(this);
            var $id = $this.prop('id');
            var $labelContainer = $('label[for="' + $id +'"]');
            var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
            console.log("updating " + $variableName + ' to ' + $this.is(':checked'));
            window.CL.updateValue($variableName, $this.is(':checked'));
          });
        });
      };

      window.CL.assignFieldChangeListeners();
      window.CL.assignEmbeddedFieldChangeListeners();
      window.CL.getExistingVariables(function(){
        window.CL.recomputeDerivedVariables();
      });

      // uptake field values from the screen in case we went back
      // need to set timeout and wait or it doesn't work
      setTimeout(function(){
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').each(function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else if (this.type === 'radio') {
              if ($(this).is(':checked')) {
                window.CL.updateValue(variableName, this.value);
              }
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      }, 250);
    });


	</script>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 122968
mandatory: |
	is_truthy((((augment(___ivn_23) if defined("___ivn_23") else Undefined()))))
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	**Tell me more about ${___ivn_202 if defined("___ivn_202") else empty_string()} ${___ivn_204 if defined("___ivn_204") else empty_string()} ${___ivn_205 if defined("___ivn_205") else empty_string()}'s _current_ housing or living arrangements.**
fields:
	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_69\" data-field-id=\"227147\" >Street Address:</span>": ___ivn_69
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_70\" data-field-id=\"227148\" >Apartment or Unit Number:</span>": ___ivn_70
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_71\" data-field-id=\"227149\" >City or Town:</span>": ___ivn_71
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_72\" data-field-id=\"227150\" >State (abbreviated):</span>": ___ivn_72
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_73\" data-field-id=\"227151\" >Zip Code:</span>": ___ivn_73
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_176\" data-field-id=\"227537\" >Date range ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()} has lived here for (example: 10/10/1999 - Present)</span>": ___ivn_176
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_82\" data-field-id=\"227155\" >The residence or facility is a:</span>": ___ivn_82
		input type: radio
		required: false
		datatype: text
		choices:
			- "<span>Community Residence</span>": "Resp_ResCommunity"
			- "<span>DDS - Operated Regional Center</span>": "Resp_ResDDS"
			- "<span>DMH Facility</span>": "Resp_ResDMH"
			- "<span>Nursing Home</span>": "Resp_ResNurse"
			- "<span>Private Home</span>": "Resp_ResHome"
			- "<span>Other</span>": "Resp_ResOther"

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_175\" data-field-id=\"227536\" >If this is a facility, please provide the name of the facility:</span>": ___ivn_175
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_81\" data-field-id=\"227153\" >Please briefly explain what you mean by \"other\":</span>": ___ivn_81
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_107\" data-field-id=\"227175\" >The current level of care and treatment ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()} recieves is:</span>": ___ivn_107
		input type: radio
		required: false
		datatype: text
		choices:
			- "<span>Very Good</span>": "Very Good"
			- "<span>Good</span>": "Good"
			- "<span>Adequate</span>": "Adequate"
			- "<span>Poor</span>": "Poor"

	- "<span class=\"producer \" data-variable-name=\"___ivn_112\" data-field-id=\"227178\" >Is the current living and care plan in ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}'s best interest?</span>": ___ivn_112
		datatype: area
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_89\" data-field-id=\"227156\" >During the current reporting period, between ${___ivn_193 if defined(\"___ivn_193\") else empty_string()} and ${___ivn_194 if defined(\"___ivn_194\") else empty_string()}, did ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()} reside or stay at other residences or facilities?</span>": ___ivn_89
		datatype: yesnoradio
		required: true

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

script: |
	<script>


    $(function(){
      window.CL.quicklyHideConditionalFields();

      window.CL.updateFieldVisibility = function () {
        if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___shortcut_229_false))).wrapped))) { window.CL.showField("227147"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___shortcut_229_false))).wrapped))) { window.CL.showField("227148"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___shortcut_229_false))).wrapped))) { window.CL.showField("227149"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___shortcut_229_false))).wrapped))) { window.CL.showField("227150"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___shortcut_229_false))).wrapped))) { window.CL.showField("227151"); }
    		if ((window.CL.isTruthy(((window.CL.augment(""))).wrapped))) { window.CL.showField("227536"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___shortcut_88_choice))).wrapped))) { window.CL.showField("227153"); }
        if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___shortcut_229_false))).wrapped))) { window.CL.hideField("227147"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___shortcut_229_false))).wrapped))) { window.CL.hideField("227148"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___shortcut_229_false))).wrapped))) { window.CL.hideField("227149"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___shortcut_229_false))).wrapped))) { window.CL.hideField("227150"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___shortcut_229_false))).wrapped))) { window.CL.hideField("227151"); }
    		if ((window.CL.isFalsy(((window.CL.augment(""))).wrapped))) { window.CL.hideField("227536"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___shortcut_88_choice))).wrapped))) { window.CL.hideField("227153"); }
      };

      window.CL.recomputeDerivedVariables = function () {
        var variablesBefore = $.extend(true, {}, window.CL.variables);

        
        window.CL.variables.___shortcut_133_false = (window.CL.negate(window.CL.variables.___ivn_133))
    		window.CL.variables.___shortcut_130_false = (window.CL.negate(window.CL.variables.___ivn_130))
    		window.CL.variables.___shortcut_139_false = (window.CL.negate(window.CL.variables.___ivn_139))
    		window.CL.variables.___shortcut_142_false = (window.CL.negate(window.CL.variables.___ivn_142))
    		window.CL.variables.___shortcut_180_false = (window.CL.negate(window.CL.variables.___ivn_180))
    		window.CL.variables.___shortcut_136_false = (window.CL.negate(window.CL.variables.___ivn_136))
    		window.CL.variables.___shortcut_246_false = (window.CL.negate(window.CL.variables.___ivn_246))
    		window.CL.variables.___shortcut_222_false = (window.CL.negate(window.CL.variables.___ivn_222))
    		window.CL.variables.___shortcut_224_false = (window.CL.negate(window.CL.variables.___ivn_224))
    		window.CL.variables.___shortcut_162_false = (window.CL.negate(window.CL.variables.___ivn_162))
    		window.CL.variables.___shortcut_208_choice = (window.CL.variables.___ivn_206 === "Barnstable Probate & Family")
    		window.CL.variables.___shortcut_209_choice = (window.CL.variables.___ivn_206 === "Berkshire Probate & Family")
    		window.CL.variables.___shortcut_210_choice = (window.CL.variables.___ivn_206 === "Bristol Probate & Family")
    		window.CL.variables.___shortcut_211_choice = (window.CL.variables.___ivn_206 === "Dukes Probate & Family")
    		window.CL.variables.___shortcut_212_choice = (window.CL.variables.___ivn_206 === "Essex Probate & Family")
    		window.CL.variables.___shortcut_213_choice = (window.CL.variables.___ivn_206 === "Franklin Probate & Family")
    		window.CL.variables.___shortcut_214_choice = (window.CL.variables.___ivn_206 === "Hampshire Probate & Family")
    		window.CL.variables.___shortcut_215_choice = (window.CL.variables.___ivn_206 === "Middlesex Probate & Family")
    		window.CL.variables.___shortcut_216_choice = (window.CL.variables.___ivn_206 === "Nantucket Probate & Family")
    		window.CL.variables.___shortcut_217_choice = (window.CL.variables.___ivn_206 === "Norfolk Probate & Family")
    		window.CL.variables.___shortcut_218_choice = (window.CL.variables.___ivn_206 === "Plymouth Probate & Family")
    		window.CL.variables.___shortcut_207_choice = (window.CL.variables.___ivn_206 === "Suffolk Probate & Family")
    		window.CL.variables.___shortcut_219_choice = (window.CL.variables.___ivn_206 === "Worcester Probate & Family")
    		window.CL.variables.___shortcut_114_false = (window.CL.negate(window.CL.variables.___ivn_114))
    		window.CL.variables.___shortcut_35_false = (window.CL.negate(window.CL.variables.___ivn_35))
    		window.CL.variables.___shortcut_160_false = (window.CL.negate(window.CL.variables.___ivn_160))
    		window.CL.variables.___shortcut_161_false = (window.CL.negate(window.CL.variables.___ivn_161))
    		window.CL.variables.___shortcut_26_false = (window.CL.negate(window.CL.variables.___ivn_26))
    		window.CL.variables.___shortcut_150_false = (window.CL.negate(window.CL.variables.___ivn_150))
    		window.CL.variables.___shortcut_115_false = (window.CL.negate(window.CL.variables.___ivn_115))
    		window.CL.variables.___shortcut_145_false = (window.CL.negate(window.CL.variables.___ivn_145))
    		window.CL.variables.___shortcut_95_false = (window.CL.negate(window.CL.variables.___ivn_95))
    		window.CL.variables.___shortcut_93_false = (window.CL.negate(window.CL.variables.___ivn_93))
    		window.CL.variables.___shortcut_101_false = (window.CL.negate(window.CL.variables.___ivn_101))
    		window.CL.variables.___shortcut_100_false = (window.CL.negate(window.CL.variables.___ivn_100))
    		window.CL.variables.___shortcut_106_false = (window.CL.negate(window.CL.variables.___ivn_106))
    		window.CL.variables.___shortcut_154_false = (window.CL.negate(window.CL.variables.___ivn_154))
    		window.CL.variables.___shortcut_89_false = (window.CL.negate(window.CL.variables.___ivn_89))
    		window.CL.variables.___shortcut_83_choice = (window.CL.variables.___ivn_82 === "Resp_ResCommunity")
    		window.CL.variables.___shortcut_84_choice = (window.CL.variables.___ivn_82 === "Resp_ResDDS")
    		window.CL.variables.___shortcut_85_choice = (window.CL.variables.___ivn_82 === "Resp_ResDMH")
    		window.CL.variables.___shortcut_87_choice = (window.CL.variables.___ivn_82 === "Resp_ResHome")
    		window.CL.variables.___shortcut_86_choice = (window.CL.variables.___ivn_82 === "Resp_ResNurse")
    		window.CL.variables.___shortcut_88_choice = (window.CL.variables.___ivn_82 === "Resp_ResOther")
    		window.CL.variables.___shortcut_110_choice = (window.CL.variables.___ivn_107 === "Adequate")
    		window.CL.variables.___shortcut_109_choice = (window.CL.variables.___ivn_107 === "Good")
    		window.CL.variables.___shortcut_111_choice = (window.CL.variables.___ivn_107 === "Poor")
    		window.CL.variables.___shortcut_108_choice = (window.CL.variables.___ivn_107 === "Very Good")
    		window.CL.variables.___shortcut_229_false = (window.CL.negate(window.CL.variables.___ivn_229))
    		window.CL.variables.___shortcut_23_false = (window.CL.negate(window.CL.variables.___ivn_23))
    		window.CL.variables.___shortcut_122_choice = (window.CL.variables.___ivn_120 === "Change")
    		window.CL.variables.___shortcut_121_choice = (window.CL.variables.___ivn_120 === "Continue")
    		window.CL.variables.___shortcut_3_false = (window.CL.negate(window.CL.variables.___ivn_3))
    		window.CL.variables.___shortcut_184_false = (window.CL.negate(window.CL.variables.___ivn_184))
        
        

        if (!window.CL.objectsEqual(variablesBefore, window.CL.variables)) {
          return window.CL.recomputeDerivedVariables();
        }
        window.CL.updateFieldVisibility();
      };

      window.CL.updateValue = function (variableName, variableValue) {
        window.CL.variables[variableName] = variableValue;
        window.CL.recomputeDerivedVariables();
      };

      window.CL.assignFieldChangeListeners = function () {
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').on('input change', function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      };

      window.CL.assignEmbeddedFieldChangeListeners = function () {
        $('.embedded-field').each(function() {
          var wrapper = $(this);
          var variableName = wrapper.data('variable-name');
          wrapper.find('.input-embedded').on('input change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.radio-embedded').on('change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.checkbox-embedded').on('change', function() {
            var $this = $(this);
            var $id = $this.prop('id');
            var $labelContainer = $('label[for="' + $id +'"]');
            var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
            console.log("updating " + $variableName + ' to ' + $this.is(':checked'));
            window.CL.updateValue($variableName, $this.is(':checked'));
          });
        });
      };

      window.CL.assignFieldChangeListeners();
      window.CL.assignEmbeddedFieldChangeListeners();
      window.CL.getExistingVariables(function(){
        window.CL.recomputeDerivedVariables();
      });

      // uptake field values from the screen in case we went back
      // need to set timeout and wait or it doesn't work
      setTimeout(function(){
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').each(function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else if (this.type === 'radio') {
              if ($(this).is(':checked')) {
                window.CL.updateValue(variableName, this.value);
              }
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      }, 250);
    });


	</script>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 122969
mandatory: |
	is_truthy((((augment(___ivn_89) if defined("___ivn_89") else Undefined()).boolean_and((augment(___ivn_23) if defined("___ivn_23") else Undefined())))))
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	**Tell me about ${___ivn_202 if defined("___ivn_202") else empty_string()} ${___ivn_204 if defined("___ivn_204") else empty_string()} ${___ivn_205 if defined("___ivn_205") else empty_string()}'s other living arrangements, between ${___ivn_193 if defined("___ivn_193") else empty_string()} and ${___ivn_194 if defined("___ivn_194") else empty_string()}:**
fields:
	- "<span class=\"producer \" data-variable-name=\"___ivn_90\" data-field-id=\"227157\" >Address (Street, Apt./Unit No., City, State, Zip):</span>": ___ivn_90
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_177\" data-field-id=\"227538\" >Please specify the date(s) and date range(s) they lived or stayed here (example: 10/10/1999 - 01/01/2001; 02/01/2011)</span>": ___ivn_177
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_93\" data-field-id=\"227161\" >Was this a facility?</span>": ___ivn_93
		datatype: yesnoradio
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_94\" data-field-id=\"227162\" >Please provide the name of the facility:</span>": ___ivn_94
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_95\" data-field-id=\"227163\" >Did the ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()} reside or stay at any other residences or facilities within this reporting period, ${___ivn_193 if defined(\"___ivn_193\") else empty_string()} - ${___ivn_194 if defined(\"___ivn_194\") else empty_string()}?</span>": ___ivn_95
		datatype: yesnoradio
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_96\" data-field-id=\"227164\" >Address (Street, Apt./Unit No., City, State, Zip):</span>": ___ivn_96
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_178\" data-field-id=\"227539\" >Please specify the date range they lived or stayed here (example: 10/10/1999 - 01/01/2001)</span>": ___ivn_178
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_100\" data-field-id=\"227168\" >Was this a facility?</span>": ___ivn_100
		datatype: yesnoradio
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_97\" data-field-id=\"227165\" >Please provide the name of the facility:</span>": ___ivn_97
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_101\" data-field-id=\"227169\" >Did the ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()} reside or stay at any other residences or facilities within this reporting period, ${___ivn_193 if defined(\"___ivn_193\") else empty_string()} - ${___ivn_194 if defined(\"___ivn_194\") else empty_string()}?</span>": ___ivn_101
		datatype: yesnoradio
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_102\" data-field-id=\"227170\" >Address (Street, Apt./Unit No., City, State, Zip):</span>": ___ivn_102
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_179\" data-field-id=\"227540\" >Please specify the date(s) and date range(s) they lived or stayed here (example: 10/10/1999 - 01/01/2001)</span>": ___ivn_179
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_106\" data-field-id=\"227174\" >Was this a facility?</span>": ___ivn_106
		datatype: yesnoradio
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_103\" data-field-id=\"227171\" >Please provide the name of the facility:</span>": ___ivn_103
		datatype: text
		required: false

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

script: |
	<script>


    $(function(){
      window.CL.quicklyHideConditionalFields();

      window.CL.updateFieldVisibility = function () {
        if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_93))).wrapped))) { window.CL.showField("227162"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_95))).wrapped))) { window.CL.showField("227164"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_95))).wrapped))) { window.CL.showField("227539"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_95))).wrapped))) { window.CL.showField("227168"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_95)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_95))), ((window.CL.augment(window.CL.variables.___ivn_100))), (window.CL.unknownInstance)))).wrapped))) { window.CL.showField("227165"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_95))).wrapped))) { window.CL.showField("227169"); }
    		if ((window.CL.isTruthy(((window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_95))), ((window.CL.augment(window.CL.variables.___ivn_101))), (window.CL.unknownInstance))).booleanAnd(window.CL.augment(window.CL.variables.___ivn_95))).wrapped))) { window.CL.showField("227170"); }
    		if ((window.CL.isTruthy(((window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_95))), ((window.CL.augment(window.CL.variables.___ivn_101))), (window.CL.unknownInstance))).booleanAnd(window.CL.augment(window.CL.variables.___ivn_95))).wrapped))) { window.CL.showField("227540"); }
    		if ((window.CL.isTruthy(((window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_95))), ((window.CL.augment(window.CL.variables.___ivn_101))), (window.CL.unknownInstance))).booleanAnd(window.CL.augment(window.CL.variables.___ivn_95))).wrapped))) { window.CL.showField("227174"); }
    		if ((window.CL.isTruthy(((window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_95))), ((window.CL.augment(window.CL.variables.___ivn_101))), (window.CL.unknownInstance))).booleanAnd(window.CL.ternary(((window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_95))), ((window.CL.augment(window.CL.variables.___ivn_101))), (window.CL.unknownInstance))).booleanAnd(window.CL.augment(window.CL.variables.___ivn_95))), ((window.CL.augment(window.CL.variables.___ivn_106))), (window.CL.unknownInstance)))).wrapped))) { window.CL.showField("227171"); }
        if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_93))).wrapped))) { window.CL.hideField("227162"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_95))).wrapped))) { window.CL.hideField("227164"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_95))).wrapped))) { window.CL.hideField("227539"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_95))).wrapped))) { window.CL.hideField("227168"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_95)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_95))), ((window.CL.augment(window.CL.variables.___ivn_100))), (window.CL.unknownInstance)))).wrapped))) { window.CL.hideField("227165"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_95))).wrapped))) { window.CL.hideField("227169"); }
    		if ((window.CL.isFalsy(((window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_95))), ((window.CL.augment(window.CL.variables.___ivn_101))), (window.CL.unknownInstance))).booleanAnd(window.CL.augment(window.CL.variables.___ivn_95))).wrapped))) { window.CL.hideField("227170"); }
    		if ((window.CL.isFalsy(((window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_95))), ((window.CL.augment(window.CL.variables.___ivn_101))), (window.CL.unknownInstance))).booleanAnd(window.CL.augment(window.CL.variables.___ivn_95))).wrapped))) { window.CL.hideField("227540"); }
    		if ((window.CL.isFalsy(((window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_95))), ((window.CL.augment(window.CL.variables.___ivn_101))), (window.CL.unknownInstance))).booleanAnd(window.CL.augment(window.CL.variables.___ivn_95))).wrapped))) { window.CL.hideField("227174"); }
    		if ((window.CL.isFalsy(((window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_95))), ((window.CL.augment(window.CL.variables.___ivn_101))), (window.CL.unknownInstance))).booleanAnd(window.CL.ternary(((window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_95))), ((window.CL.augment(window.CL.variables.___ivn_101))), (window.CL.unknownInstance))).booleanAnd(window.CL.augment(window.CL.variables.___ivn_95))), ((window.CL.augment(window.CL.variables.___ivn_106))), (window.CL.unknownInstance)))).wrapped))) { window.CL.hideField("227171"); }
      };

      window.CL.recomputeDerivedVariables = function () {
        var variablesBefore = $.extend(true, {}, window.CL.variables);

        
        window.CL.variables.___shortcut_133_false = (window.CL.negate(window.CL.variables.___ivn_133))
    		window.CL.variables.___shortcut_130_false = (window.CL.negate(window.CL.variables.___ivn_130))
    		window.CL.variables.___shortcut_139_false = (window.CL.negate(window.CL.variables.___ivn_139))
    		window.CL.variables.___shortcut_142_false = (window.CL.negate(window.CL.variables.___ivn_142))
    		window.CL.variables.___shortcut_180_false = (window.CL.negate(window.CL.variables.___ivn_180))
    		window.CL.variables.___shortcut_136_false = (window.CL.negate(window.CL.variables.___ivn_136))
    		window.CL.variables.___shortcut_246_false = (window.CL.negate(window.CL.variables.___ivn_246))
    		window.CL.variables.___shortcut_222_false = (window.CL.negate(window.CL.variables.___ivn_222))
    		window.CL.variables.___shortcut_224_false = (window.CL.negate(window.CL.variables.___ivn_224))
    		window.CL.variables.___shortcut_162_false = (window.CL.negate(window.CL.variables.___ivn_162))
    		window.CL.variables.___shortcut_208_choice = (window.CL.variables.___ivn_206 === "Barnstable Probate & Family")
    		window.CL.variables.___shortcut_209_choice = (window.CL.variables.___ivn_206 === "Berkshire Probate & Family")
    		window.CL.variables.___shortcut_210_choice = (window.CL.variables.___ivn_206 === "Bristol Probate & Family")
    		window.CL.variables.___shortcut_211_choice = (window.CL.variables.___ivn_206 === "Dukes Probate & Family")
    		window.CL.variables.___shortcut_212_choice = (window.CL.variables.___ivn_206 === "Essex Probate & Family")
    		window.CL.variables.___shortcut_213_choice = (window.CL.variables.___ivn_206 === "Franklin Probate & Family")
    		window.CL.variables.___shortcut_214_choice = (window.CL.variables.___ivn_206 === "Hampshire Probate & Family")
    		window.CL.variables.___shortcut_215_choice = (window.CL.variables.___ivn_206 === "Middlesex Probate & Family")
    		window.CL.variables.___shortcut_216_choice = (window.CL.variables.___ivn_206 === "Nantucket Probate & Family")
    		window.CL.variables.___shortcut_217_choice = (window.CL.variables.___ivn_206 === "Norfolk Probate & Family")
    		window.CL.variables.___shortcut_218_choice = (window.CL.variables.___ivn_206 === "Plymouth Probate & Family")
    		window.CL.variables.___shortcut_207_choice = (window.CL.variables.___ivn_206 === "Suffolk Probate & Family")
    		window.CL.variables.___shortcut_219_choice = (window.CL.variables.___ivn_206 === "Worcester Probate & Family")
    		window.CL.variables.___shortcut_114_false = (window.CL.negate(window.CL.variables.___ivn_114))
    		window.CL.variables.___shortcut_35_false = (window.CL.negate(window.CL.variables.___ivn_35))
    		window.CL.variables.___shortcut_160_false = (window.CL.negate(window.CL.variables.___ivn_160))
    		window.CL.variables.___shortcut_161_false = (window.CL.negate(window.CL.variables.___ivn_161))
    		window.CL.variables.___shortcut_26_false = (window.CL.negate(window.CL.variables.___ivn_26))
    		window.CL.variables.___shortcut_150_false = (window.CL.negate(window.CL.variables.___ivn_150))
    		window.CL.variables.___shortcut_115_false = (window.CL.negate(window.CL.variables.___ivn_115))
    		window.CL.variables.___shortcut_145_false = (window.CL.negate(window.CL.variables.___ivn_145))
    		window.CL.variables.___shortcut_95_false = (window.CL.negate(window.CL.variables.___ivn_95))
    		window.CL.variables.___shortcut_93_false = (window.CL.negate(window.CL.variables.___ivn_93))
    		window.CL.variables.___shortcut_101_false = (window.CL.negate(window.CL.variables.___ivn_101))
    		window.CL.variables.___shortcut_100_false = (window.CL.negate(window.CL.variables.___ivn_100))
    		window.CL.variables.___shortcut_106_false = (window.CL.negate(window.CL.variables.___ivn_106))
    		window.CL.variables.___shortcut_154_false = (window.CL.negate(window.CL.variables.___ivn_154))
    		window.CL.variables.___shortcut_89_false = (window.CL.negate(window.CL.variables.___ivn_89))
    		window.CL.variables.___shortcut_83_choice = (window.CL.variables.___ivn_82 === "Resp_ResCommunity")
    		window.CL.variables.___shortcut_84_choice = (window.CL.variables.___ivn_82 === "Resp_ResDDS")
    		window.CL.variables.___shortcut_85_choice = (window.CL.variables.___ivn_82 === "Resp_ResDMH")
    		window.CL.variables.___shortcut_87_choice = (window.CL.variables.___ivn_82 === "Resp_ResHome")
    		window.CL.variables.___shortcut_86_choice = (window.CL.variables.___ivn_82 === "Resp_ResNurse")
    		window.CL.variables.___shortcut_88_choice = (window.CL.variables.___ivn_82 === "Resp_ResOther")
    		window.CL.variables.___shortcut_110_choice = (window.CL.variables.___ivn_107 === "Adequate")
    		window.CL.variables.___shortcut_109_choice = (window.CL.variables.___ivn_107 === "Good")
    		window.CL.variables.___shortcut_111_choice = (window.CL.variables.___ivn_107 === "Poor")
    		window.CL.variables.___shortcut_108_choice = (window.CL.variables.___ivn_107 === "Very Good")
    		window.CL.variables.___shortcut_229_false = (window.CL.negate(window.CL.variables.___ivn_229))
    		window.CL.variables.___shortcut_23_false = (window.CL.negate(window.CL.variables.___ivn_23))
    		window.CL.variables.___shortcut_122_choice = (window.CL.variables.___ivn_120 === "Change")
    		window.CL.variables.___shortcut_121_choice = (window.CL.variables.___ivn_120 === "Continue")
    		window.CL.variables.___shortcut_3_false = (window.CL.negate(window.CL.variables.___ivn_3))
    		window.CL.variables.___shortcut_184_false = (window.CL.negate(window.CL.variables.___ivn_184))
        
        

        if (!window.CL.objectsEqual(variablesBefore, window.CL.variables)) {
          return window.CL.recomputeDerivedVariables();
        }
        window.CL.updateFieldVisibility();
      };

      window.CL.updateValue = function (variableName, variableValue) {
        window.CL.variables[variableName] = variableValue;
        window.CL.recomputeDerivedVariables();
      };

      window.CL.assignFieldChangeListeners = function () {
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').on('input change', function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      };

      window.CL.assignEmbeddedFieldChangeListeners = function () {
        $('.embedded-field').each(function() {
          var wrapper = $(this);
          var variableName = wrapper.data('variable-name');
          wrapper.find('.input-embedded').on('input change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.radio-embedded').on('change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.checkbox-embedded').on('change', function() {
            var $this = $(this);
            var $id = $this.prop('id');
            var $labelContainer = $('label[for="' + $id +'"]');
            var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
            console.log("updating " + $variableName + ' to ' + $this.is(':checked'));
            window.CL.updateValue($variableName, $this.is(':checked'));
          });
        });
      };

      window.CL.assignFieldChangeListeners();
      window.CL.assignEmbeddedFieldChangeListeners();
      window.CL.getExistingVariables(function(){
        window.CL.recomputeDerivedVariables();
      });

      // uptake field values from the screen in case we went back
      // need to set timeout and wait or it doesn't work
      setTimeout(function(){
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').each(function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else if (this.type === 'radio') {
              if ($(this).is(':checked')) {
                window.CL.updateValue(variableName, this.value);
              }
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      }, 250);
    });


	</script>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 123137
mandatory: |
	is_truthy((((augment(___ivn_23) if defined("___ivn_23") else Undefined()).boolean_and((augment(___ivn_35) if defined("___ivn_35") else Undefined())))))
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	**In your capacity as Rogers Monitor, please provide the following information.**
fields:
	- "<span class=\"producer \" data-variable-name=\"___ivn_124\" data-field-id=\"227316\" >Date you last met with the ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}:</span>": ___ivn_124
		datatype: date
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_125\" data-field-id=\"227317\" >What did you specifically discuss?</span>": ___ivn_125
		datatype: area
		required: false
		maxlength: 400

	- "<span class=\"producer \" data-variable-name=\"___ivn_126\" data-field-id=\"227318\" >Date you last reviewed ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}'s medical records and court approved _Treatment Plan_:</span>": ___ivn_126
		datatype: date
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_145\" data-field-id=\"227337\" >Is ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}'s current treatment with antipsychotic medication in compliance with the Court Order?</span>": ___ivn_145
		datatype: yesnoradio
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_146\" data-field-id=\"227338\" >Please explain the non-compliance:</span>": ___ivn_146
		datatype: area
		required: false
		minlength: 0
		maxlength: 400

	- "<span class=\"producer \" data-variable-name=\"___ivn_150\" data-field-id=\"227342\" >Have you discussed ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}'s present status and treatment needs with the treating clinician?</span>": ___ivn_150
		datatype: yesnoradio
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_151\" data-field-id=\"227343\" >Was this conversation in-person or over the phone? When did this conversation take place? Briefly describe what was discussed:</span>": ___ivn_151
		datatype: area
		required: false
		maxlength: 400

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_152\" data-field-id=\"227344\" >Did you review the clinician's progress notes?  Please describe your efforts to contact the clinician, including specific dates.</span>": ___ivn_152
		datatype: area
		required: false
		maxlength: 400

	- "<span class=\"producer \" data-variable-name=\"___ivn_153\" data-field-id=\"227345\" >Describe your communications with ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}'s Residential and/or Day program staff, if any, and with other treatment  providers regarding present status and current treatment needs.  Please specify with whom you communicated, whether this was in person or by telephone, and on what dates.</span>": ___ivn_153
		datatype: area
		required: false
		maxlength: 400

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

script: |
	<script>


    $(function(){
      window.CL.quicklyHideConditionalFields();

      window.CL.updateFieldVisibility = function () {
        if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___shortcut_145_false))).wrapped))) { window.CL.showField("227338"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_150))).wrapped))) { window.CL.showField("227343"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___shortcut_150_false))).wrapped))) { window.CL.showField("227344"); }
        if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___shortcut_145_false))).wrapped))) { window.CL.hideField("227338"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_150))).wrapped))) { window.CL.hideField("227343"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___shortcut_150_false))).wrapped))) { window.CL.hideField("227344"); }
      };

      window.CL.recomputeDerivedVariables = function () {
        var variablesBefore = $.extend(true, {}, window.CL.variables);

        
        window.CL.variables.___shortcut_133_false = (window.CL.negate(window.CL.variables.___ivn_133))
    		window.CL.variables.___shortcut_130_false = (window.CL.negate(window.CL.variables.___ivn_130))
    		window.CL.variables.___shortcut_139_false = (window.CL.negate(window.CL.variables.___ivn_139))
    		window.CL.variables.___shortcut_142_false = (window.CL.negate(window.CL.variables.___ivn_142))
    		window.CL.variables.___shortcut_180_false = (window.CL.negate(window.CL.variables.___ivn_180))
    		window.CL.variables.___shortcut_136_false = (window.CL.negate(window.CL.variables.___ivn_136))
    		window.CL.variables.___shortcut_246_false = (window.CL.negate(window.CL.variables.___ivn_246))
    		window.CL.variables.___shortcut_222_false = (window.CL.negate(window.CL.variables.___ivn_222))
    		window.CL.variables.___shortcut_224_false = (window.CL.negate(window.CL.variables.___ivn_224))
    		window.CL.variables.___shortcut_162_false = (window.CL.negate(window.CL.variables.___ivn_162))
    		window.CL.variables.___shortcut_208_choice = (window.CL.variables.___ivn_206 === "Barnstable Probate & Family")
    		window.CL.variables.___shortcut_209_choice = (window.CL.variables.___ivn_206 === "Berkshire Probate & Family")
    		window.CL.variables.___shortcut_210_choice = (window.CL.variables.___ivn_206 === "Bristol Probate & Family")
    		window.CL.variables.___shortcut_211_choice = (window.CL.variables.___ivn_206 === "Dukes Probate & Family")
    		window.CL.variables.___shortcut_212_choice = (window.CL.variables.___ivn_206 === "Essex Probate & Family")
    		window.CL.variables.___shortcut_213_choice = (window.CL.variables.___ivn_206 === "Franklin Probate & Family")
    		window.CL.variables.___shortcut_214_choice = (window.CL.variables.___ivn_206 === "Hampshire Probate & Family")
    		window.CL.variables.___shortcut_215_choice = (window.CL.variables.___ivn_206 === "Middlesex Probate & Family")
    		window.CL.variables.___shortcut_216_choice = (window.CL.variables.___ivn_206 === "Nantucket Probate & Family")
    		window.CL.variables.___shortcut_217_choice = (window.CL.variables.___ivn_206 === "Norfolk Probate & Family")
    		window.CL.variables.___shortcut_218_choice = (window.CL.variables.___ivn_206 === "Plymouth Probate & Family")
    		window.CL.variables.___shortcut_207_choice = (window.CL.variables.___ivn_206 === "Suffolk Probate & Family")
    		window.CL.variables.___shortcut_219_choice = (window.CL.variables.___ivn_206 === "Worcester Probate & Family")
    		window.CL.variables.___shortcut_114_false = (window.CL.negate(window.CL.variables.___ivn_114))
    		window.CL.variables.___shortcut_35_false = (window.CL.negate(window.CL.variables.___ivn_35))
    		window.CL.variables.___shortcut_160_false = (window.CL.negate(window.CL.variables.___ivn_160))
    		window.CL.variables.___shortcut_161_false = (window.CL.negate(window.CL.variables.___ivn_161))
    		window.CL.variables.___shortcut_26_false = (window.CL.negate(window.CL.variables.___ivn_26))
    		window.CL.variables.___shortcut_150_false = (window.CL.negate(window.CL.variables.___ivn_150))
    		window.CL.variables.___shortcut_115_false = (window.CL.negate(window.CL.variables.___ivn_115))
    		window.CL.variables.___shortcut_145_false = (window.CL.negate(window.CL.variables.___ivn_145))
    		window.CL.variables.___shortcut_95_false = (window.CL.negate(window.CL.variables.___ivn_95))
    		window.CL.variables.___shortcut_93_false = (window.CL.negate(window.CL.variables.___ivn_93))
    		window.CL.variables.___shortcut_101_false = (window.CL.negate(window.CL.variables.___ivn_101))
    		window.CL.variables.___shortcut_100_false = (window.CL.negate(window.CL.variables.___ivn_100))
    		window.CL.variables.___shortcut_106_false = (window.CL.negate(window.CL.variables.___ivn_106))
    		window.CL.variables.___shortcut_154_false = (window.CL.negate(window.CL.variables.___ivn_154))
    		window.CL.variables.___shortcut_89_false = (window.CL.negate(window.CL.variables.___ivn_89))
    		window.CL.variables.___shortcut_83_choice = (window.CL.variables.___ivn_82 === "Resp_ResCommunity")
    		window.CL.variables.___shortcut_84_choice = (window.CL.variables.___ivn_82 === "Resp_ResDDS")
    		window.CL.variables.___shortcut_85_choice = (window.CL.variables.___ivn_82 === "Resp_ResDMH")
    		window.CL.variables.___shortcut_87_choice = (window.CL.variables.___ivn_82 === "Resp_ResHome")
    		window.CL.variables.___shortcut_86_choice = (window.CL.variables.___ivn_82 === "Resp_ResNurse")
    		window.CL.variables.___shortcut_88_choice = (window.CL.variables.___ivn_82 === "Resp_ResOther")
    		window.CL.variables.___shortcut_110_choice = (window.CL.variables.___ivn_107 === "Adequate")
    		window.CL.variables.___shortcut_109_choice = (window.CL.variables.___ivn_107 === "Good")
    		window.CL.variables.___shortcut_111_choice = (window.CL.variables.___ivn_107 === "Poor")
    		window.CL.variables.___shortcut_108_choice = (window.CL.variables.___ivn_107 === "Very Good")
    		window.CL.variables.___shortcut_229_false = (window.CL.negate(window.CL.variables.___ivn_229))
    		window.CL.variables.___shortcut_23_false = (window.CL.negate(window.CL.variables.___ivn_23))
    		window.CL.variables.___shortcut_122_choice = (window.CL.variables.___ivn_120 === "Change")
    		window.CL.variables.___shortcut_121_choice = (window.CL.variables.___ivn_120 === "Continue")
    		window.CL.variables.___shortcut_3_false = (window.CL.negate(window.CL.variables.___ivn_3))
    		window.CL.variables.___shortcut_184_false = (window.CL.negate(window.CL.variables.___ivn_184))
        
        

        if (!window.CL.objectsEqual(variablesBefore, window.CL.variables)) {
          return window.CL.recomputeDerivedVariables();
        }
        window.CL.updateFieldVisibility();
      };

      window.CL.updateValue = function (variableName, variableValue) {
        window.CL.variables[variableName] = variableValue;
        window.CL.recomputeDerivedVariables();
      };

      window.CL.assignFieldChangeListeners = function () {
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').on('input change', function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      };

      window.CL.assignEmbeddedFieldChangeListeners = function () {
        $('.embedded-field').each(function() {
          var wrapper = $(this);
          var variableName = wrapper.data('variable-name');
          wrapper.find('.input-embedded').on('input change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.radio-embedded').on('change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.checkbox-embedded').on('change', function() {
            var $this = $(this);
            var $id = $this.prop('id');
            var $labelContainer = $('label[for="' + $id +'"]');
            var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
            console.log("updating " + $variableName + ' to ' + $this.is(':checked'));
            window.CL.updateValue($variableName, $this.is(':checked'));
          });
        });
      };

      window.CL.assignFieldChangeListeners();
      window.CL.assignEmbeddedFieldChangeListeners();
      window.CL.getExistingVariables(function(){
        window.CL.recomputeDerivedVariables();
      });

      // uptake field values from the screen in case we went back
      // need to set timeout and wait or it doesn't work
      setTimeout(function(){
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').each(function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else if (this.type === 'radio') {
              if ($(this).is(':checked')) {
                window.CL.updateValue(variableName, this.value);
              }
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      }, 250);
    });


	</script>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 123162
mandatory: |
	is_truthy((((augment(___ivn_23) if defined("___ivn_23") else Undefined()))))
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	**The next set of questions concern the** ${___ivn_202 if defined("___ivn_202") else empty_string()} ${___ivn_204 if defined("___ivn_204") else empty_string()} ${___ivn_205 if defined("___ivn_205") else empty_string()}'s **antipsychotic medications.**


	Please reference the current [Treatment Plan](https://mlursul.github.io/ctl_final/Docs/CourtDocs/TreatmentPlan.pdf) and most recent [Clinician's Affidavit](https://mlursul.github.io/ctl_final/Docs/CourtDocs/CliniciansAffidavitExtendAmendTreatment.pdf) to answer the following questions.
fields:
	- "<span class=\"producer \" data-variable-name=\"___ivn_128\" data-field-id=\"227319\" >Name of the antipsychotic medication:</span>": ___ivn_128
		datatype: text
		required: true

	- "<span class=\"producer \" data-variable-name=\"___ivn_129\" data-field-id=\"227320\" >Dosage or dose range:</span>": ___ivn_129
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_130\" data-field-id=\"227321\" >Any other antipsychotic medications?</span>": ___ivn_130
		datatype: yesnoradio
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_131\" data-field-id=\"227322\" >Name of the antipsychotic medication:</span>": ___ivn_131
		datatype: text
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_132\" data-field-id=\"227323\" >Dosage or dose range:</span>": ___ivn_132
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_133\" data-field-id=\"227324\" >Any other antipsychotic medications?</span>": ___ivn_133
		datatype: yesnoradio
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_134\" data-field-id=\"227325\" >Name of the antipsychotic medication:</span>": ___ivn_134
		datatype: text
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_135\" data-field-id=\"227326\" >Dosage or dose range:</span>": ___ivn_135
		datatype: text
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_136\" data-field-id=\"227327\" >Are there alternative antipsychotic medications availible?</span>": ___ivn_136
		datatype: yesnoradio
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_137\" data-field-id=\"227328\" >Name of alternative antipsychotic medication:</span>": ___ivn_137
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_138\" data-field-id=\"227329\" >Dosage or dose range:</span>": ___ivn_138
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_139\" data-field-id=\"227330\" >Would you like to list another alternative antipsychotic medciation?</span>": ___ivn_139
		datatype: yesnoradio
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_140\" data-field-id=\"227331\" >Name of alternative antipsychotic medication:</span>": ___ivn_140
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_141\" data-field-id=\"227332\" >Dosage or dose range:</span>": ___ivn_141
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_142\" data-field-id=\"227333\" >Would you like to list another alternative antipsychotic medication?</span>": ___ivn_142
		datatype: yesnoradio
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_143\" data-field-id=\"227334\" >Name of alternative antipsychotic medication:</span>": ___ivn_143
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_144\" data-field-id=\"227336\" >Dosage or dose range:</span>": ___ivn_144
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_180\" data-field-id=\"227541\" >Would you like to list another alternative antipsychotic medication?</span>": ___ivn_180
		datatype: yesnoradio
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_181\" data-field-id=\"227542\" >Name of altnernative antipsychotic medication:</span>": ___ivn_181
		datatype: text
		required: false

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_182\" data-field-id=\"227543\" >Dosage or dose range:</span>": ___ivn_182
		datatype: text
		required: false

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

script: |
	<script>


    $(function(){
      window.CL.quicklyHideConditionalFields();

      window.CL.updateFieldVisibility = function () {
        if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_130))).wrapped))) { window.CL.showField("227322"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_130))).wrapped))) { window.CL.showField("227323"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_130))).wrapped))) { window.CL.showField("227324"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_130)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_130))), ((window.CL.augment(window.CL.variables.___ivn_133))), (window.CL.unknownInstance)))).wrapped))) { window.CL.showField("227325"); }
    		if ((window.CL.isTruthy(((window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_130))), ((window.CL.augment(window.CL.variables.___ivn_133))), (window.CL.unknownInstance))).booleanAnd(window.CL.augment(window.CL.variables.___ivn_130))).wrapped))) { window.CL.showField("227326"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_136))).wrapped))) { window.CL.showField("227328"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_136))).wrapped))) { window.CL.showField("227329"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_136))).wrapped))) { window.CL.showField("227330"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136))), ((window.CL.augment(window.CL.variables.___ivn_139))), (window.CL.unknownInstance)))).wrapped))) { window.CL.showField("227331"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136))), ((window.CL.augment(window.CL.variables.___ivn_139))), (window.CL.unknownInstance)))).wrapped))) { window.CL.showField("227332"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136))), ((window.CL.augment(window.CL.variables.___ivn_139))), (window.CL.unknownInstance)))).wrapped))) { window.CL.showField("227333"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136))), ((window.CL.augment(window.CL.variables.___ivn_139))), (window.CL.unknownInstance)))), ((window.CL.augment(window.CL.variables.___ivn_142))), (window.CL.unknownInstance)))).wrapped))) { window.CL.showField("227334"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136))), ((window.CL.augment(window.CL.variables.___ivn_139))), (window.CL.unknownInstance)))), ((window.CL.augment(window.CL.variables.___ivn_142))), (window.CL.unknownInstance)))).wrapped))) { window.CL.showField("227336"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136))), ((window.CL.augment(window.CL.variables.___ivn_139))), (window.CL.unknownInstance)))), ((window.CL.augment(window.CL.variables.___ivn_142))), (window.CL.unknownInstance)))).wrapped))) { window.CL.showField("227541"); }
    		if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136))), ((window.CL.augment(window.CL.variables.___ivn_139))), (window.CL.unknownInstance)))), ((window.CL.augment(window.CL.variables.___ivn_142))), (window.CL.unknownInstance)))), ((window.CL.augment(window.CL.variables.___ivn_180))), (window.CL.unknownInstance)))).wrapped))) { window.CL.showField("227542"); }
    		if ((window.CL.isTruthy(((window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136))), ((window.CL.augment(window.CL.variables.___ivn_139))), (window.CL.unknownInstance)))), ((window.CL.augment(window.CL.variables.___ivn_142))), (window.CL.unknownInstance)))), ((window.CL.augment(window.CL.variables.___ivn_180))), (window.CL.unknownInstance))).booleanAnd(window.CL.augment(window.CL.variables.___ivn_136))).wrapped))) { window.CL.showField("227543"); }
        if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_130))).wrapped))) { window.CL.hideField("227322"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_130))).wrapped))) { window.CL.hideField("227323"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_130))).wrapped))) { window.CL.hideField("227324"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_130)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_130))), ((window.CL.augment(window.CL.variables.___ivn_133))), (window.CL.unknownInstance)))).wrapped))) { window.CL.hideField("227325"); }
    		if ((window.CL.isFalsy(((window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_130))), ((window.CL.augment(window.CL.variables.___ivn_133))), (window.CL.unknownInstance))).booleanAnd(window.CL.augment(window.CL.variables.___ivn_130))).wrapped))) { window.CL.hideField("227326"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_136))).wrapped))) { window.CL.hideField("227328"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_136))).wrapped))) { window.CL.hideField("227329"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_136))).wrapped))) { window.CL.hideField("227330"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136))), ((window.CL.augment(window.CL.variables.___ivn_139))), (window.CL.unknownInstance)))).wrapped))) { window.CL.hideField("227331"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136))), ((window.CL.augment(window.CL.variables.___ivn_139))), (window.CL.unknownInstance)))).wrapped))) { window.CL.hideField("227332"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136))), ((window.CL.augment(window.CL.variables.___ivn_139))), (window.CL.unknownInstance)))).wrapped))) { window.CL.hideField("227333"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136))), ((window.CL.augment(window.CL.variables.___ivn_139))), (window.CL.unknownInstance)))), ((window.CL.augment(window.CL.variables.___ivn_142))), (window.CL.unknownInstance)))).wrapped))) { window.CL.hideField("227334"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136))), ((window.CL.augment(window.CL.variables.___ivn_139))), (window.CL.unknownInstance)))), ((window.CL.augment(window.CL.variables.___ivn_142))), (window.CL.unknownInstance)))).wrapped))) { window.CL.hideField("227336"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136))), ((window.CL.augment(window.CL.variables.___ivn_139))), (window.CL.unknownInstance)))), ((window.CL.augment(window.CL.variables.___ivn_142))), (window.CL.unknownInstance)))).wrapped))) { window.CL.hideField("227541"); }
    		if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136))), ((window.CL.augment(window.CL.variables.___ivn_139))), (window.CL.unknownInstance)))), ((window.CL.augment(window.CL.variables.___ivn_142))), (window.CL.unknownInstance)))), ((window.CL.augment(window.CL.variables.___ivn_180))), (window.CL.unknownInstance)))).wrapped))) { window.CL.hideField("227542"); }
    		if ((window.CL.isFalsy(((window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136)).booleanAnd(window.CL.ternary(((window.CL.augment(window.CL.variables.___ivn_136))), ((window.CL.augment(window.CL.variables.___ivn_139))), (window.CL.unknownInstance)))), ((window.CL.augment(window.CL.variables.___ivn_142))), (window.CL.unknownInstance)))), ((window.CL.augment(window.CL.variables.___ivn_180))), (window.CL.unknownInstance))).booleanAnd(window.CL.augment(window.CL.variables.___ivn_136))).wrapped))) { window.CL.hideField("227543"); }
      };

      window.CL.recomputeDerivedVariables = function () {
        var variablesBefore = $.extend(true, {}, window.CL.variables);

        
        window.CL.variables.___shortcut_133_false = (window.CL.negate(window.CL.variables.___ivn_133))
    		window.CL.variables.___shortcut_130_false = (window.CL.negate(window.CL.variables.___ivn_130))
    		window.CL.variables.___shortcut_139_false = (window.CL.negate(window.CL.variables.___ivn_139))
    		window.CL.variables.___shortcut_142_false = (window.CL.negate(window.CL.variables.___ivn_142))
    		window.CL.variables.___shortcut_180_false = (window.CL.negate(window.CL.variables.___ivn_180))
    		window.CL.variables.___shortcut_136_false = (window.CL.negate(window.CL.variables.___ivn_136))
    		window.CL.variables.___shortcut_246_false = (window.CL.negate(window.CL.variables.___ivn_246))
    		window.CL.variables.___shortcut_222_false = (window.CL.negate(window.CL.variables.___ivn_222))
    		window.CL.variables.___shortcut_224_false = (window.CL.negate(window.CL.variables.___ivn_224))
    		window.CL.variables.___shortcut_162_false = (window.CL.negate(window.CL.variables.___ivn_162))
    		window.CL.variables.___shortcut_208_choice = (window.CL.variables.___ivn_206 === "Barnstable Probate & Family")
    		window.CL.variables.___shortcut_209_choice = (window.CL.variables.___ivn_206 === "Berkshire Probate & Family")
    		window.CL.variables.___shortcut_210_choice = (window.CL.variables.___ivn_206 === "Bristol Probate & Family")
    		window.CL.variables.___shortcut_211_choice = (window.CL.variables.___ivn_206 === "Dukes Probate & Family")
    		window.CL.variables.___shortcut_212_choice = (window.CL.variables.___ivn_206 === "Essex Probate & Family")
    		window.CL.variables.___shortcut_213_choice = (window.CL.variables.___ivn_206 === "Franklin Probate & Family")
    		window.CL.variables.___shortcut_214_choice = (window.CL.variables.___ivn_206 === "Hampshire Probate & Family")
    		window.CL.variables.___shortcut_215_choice = (window.CL.variables.___ivn_206 === "Middlesex Probate & Family")
    		window.CL.variables.___shortcut_216_choice = (window.CL.variables.___ivn_206 === "Nantucket Probate & Family")
    		window.CL.variables.___shortcut_217_choice = (window.CL.variables.___ivn_206 === "Norfolk Probate & Family")
    		window.CL.variables.___shortcut_218_choice = (window.CL.variables.___ivn_206 === "Plymouth Probate & Family")
    		window.CL.variables.___shortcut_207_choice = (window.CL.variables.___ivn_206 === "Suffolk Probate & Family")
    		window.CL.variables.___shortcut_219_choice = (window.CL.variables.___ivn_206 === "Worcester Probate & Family")
    		window.CL.variables.___shortcut_114_false = (window.CL.negate(window.CL.variables.___ivn_114))
    		window.CL.variables.___shortcut_35_false = (window.CL.negate(window.CL.variables.___ivn_35))
    		window.CL.variables.___shortcut_160_false = (window.CL.negate(window.CL.variables.___ivn_160))
    		window.CL.variables.___shortcut_161_false = (window.CL.negate(window.CL.variables.___ivn_161))
    		window.CL.variables.___shortcut_26_false = (window.CL.negate(window.CL.variables.___ivn_26))
    		window.CL.variables.___shortcut_150_false = (window.CL.negate(window.CL.variables.___ivn_150))
    		window.CL.variables.___shortcut_115_false = (window.CL.negate(window.CL.variables.___ivn_115))
    		window.CL.variables.___shortcut_145_false = (window.CL.negate(window.CL.variables.___ivn_145))
    		window.CL.variables.___shortcut_95_false = (window.CL.negate(window.CL.variables.___ivn_95))
    		window.CL.variables.___shortcut_93_false = (window.CL.negate(window.CL.variables.___ivn_93))
    		window.CL.variables.___shortcut_101_false = (window.CL.negate(window.CL.variables.___ivn_101))
    		window.CL.variables.___shortcut_100_false = (window.CL.negate(window.CL.variables.___ivn_100))
    		window.CL.variables.___shortcut_106_false = (window.CL.negate(window.CL.variables.___ivn_106))
    		window.CL.variables.___shortcut_154_false = (window.CL.negate(window.CL.variables.___ivn_154))
    		window.CL.variables.___shortcut_89_false = (window.CL.negate(window.CL.variables.___ivn_89))
    		window.CL.variables.___shortcut_83_choice = (window.CL.variables.___ivn_82 === "Resp_ResCommunity")
    		window.CL.variables.___shortcut_84_choice = (window.CL.variables.___ivn_82 === "Resp_ResDDS")
    		window.CL.variables.___shortcut_85_choice = (window.CL.variables.___ivn_82 === "Resp_ResDMH")
    		window.CL.variables.___shortcut_87_choice = (window.CL.variables.___ivn_82 === "Resp_ResHome")
    		window.CL.variables.___shortcut_86_choice = (window.CL.variables.___ivn_82 === "Resp_ResNurse")
    		window.CL.variables.___shortcut_88_choice = (window.CL.variables.___ivn_82 === "Resp_ResOther")
    		window.CL.variables.___shortcut_110_choice = (window.CL.variables.___ivn_107 === "Adequate")
    		window.CL.variables.___shortcut_109_choice = (window.CL.variables.___ivn_107 === "Good")
    		window.CL.variables.___shortcut_111_choice = (window.CL.variables.___ivn_107 === "Poor")
    		window.CL.variables.___shortcut_108_choice = (window.CL.variables.___ivn_107 === "Very Good")
    		window.CL.variables.___shortcut_229_false = (window.CL.negate(window.CL.variables.___ivn_229))
    		window.CL.variables.___shortcut_23_false = (window.CL.negate(window.CL.variables.___ivn_23))
    		window.CL.variables.___shortcut_122_choice = (window.CL.variables.___ivn_120 === "Change")
    		window.CL.variables.___shortcut_121_choice = (window.CL.variables.___ivn_120 === "Continue")
    		window.CL.variables.___shortcut_3_false = (window.CL.negate(window.CL.variables.___ivn_3))
    		window.CL.variables.___shortcut_184_false = (window.CL.negate(window.CL.variables.___ivn_184))
        
        

        if (!window.CL.objectsEqual(variablesBefore, window.CL.variables)) {
          return window.CL.recomputeDerivedVariables();
        }
        window.CL.updateFieldVisibility();
      };

      window.CL.updateValue = function (variableName, variableValue) {
        window.CL.variables[variableName] = variableValue;
        window.CL.recomputeDerivedVariables();
      };

      window.CL.assignFieldChangeListeners = function () {
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').on('input change', function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      };

      window.CL.assignEmbeddedFieldChangeListeners = function () {
        $('.embedded-field').each(function() {
          var wrapper = $(this);
          var variableName = wrapper.data('variable-name');
          wrapper.find('.input-embedded').on('input change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.radio-embedded').on('change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.checkbox-embedded').on('change', function() {
            var $this = $(this);
            var $id = $this.prop('id');
            var $labelContainer = $('label[for="' + $id +'"]');
            var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
            console.log("updating " + $variableName + ' to ' + $this.is(':checked'));
            window.CL.updateValue($variableName, $this.is(':checked'));
          });
        });
      };

      window.CL.assignFieldChangeListeners();
      window.CL.assignEmbeddedFieldChangeListeners();
      window.CL.getExistingVariables(function(){
        window.CL.recomputeDerivedVariables();
      });

      // uptake field values from the screen in case we went back
      // need to set timeout and wait or it doesn't work
      setTimeout(function(){
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').each(function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else if (this.type === 'radio') {
              if ($(this).is(':checked')) {
                window.CL.updateValue(variableName, this.value);
              }
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      }, 250);
    });


	</script>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 99182
mandatory: |
	is_truthy((((augment(___ivn_23) if defined("___ivn_23") else Undefined()))))
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |

fields:
	- "<span class=\"producer \" data-variable-name=\"___ivn_120\" data-field-id=\"227200\" >Have there been any changes to ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}'s care ?</span>": ___ivn_120
		input type: radio
		required: true
		datatype: text
		choices:
			- "<span>Yes</span>": "Continue"
			- "<span>No</span>": "Change"

	- "<span class=\"producer \" data-variable-name=\"___ivn_158\" data-field-id=\"227352\" >Describe the need to continue the guardianship. Include any recommended changes and/or limitations to the guardianship.</span>": ___ivn_158
		datatype: area
		required: false
		maxlength: 400

	- "<span class=\"producer \" data-variable-name=\"___ivn_159\" data-field-id=\"227353\" >Describe what residence, services and levels of personal/health care you expect might change during the next 18 months, if any.</span>": ___ivn_159
		datatype: area
		required: false
		maxlength: 400

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 123167
mandatory: |
	is_truthy((((augment(___ivn_23) if defined("___ivn_23") else Undefined()))))
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |

fields:
	- "<span class=\"producer \" data-variable-name=\"___ivn_148\" data-field-id=\"227340\" >Please describe the ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}'s current mental, physical, and social condition:</span>": ___ivn_148
		datatype: area
		required: false
		maxlength: 400

	- "<span class=\"producer \" data-variable-name=\"___ivn_230\" data-field-id=\"235412\" >Please describe the services ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()} currently receives (educational, vocation, medical, etc.):</span>": ___ivn_230
		datatype: area
		required: false
		maxlength: 400

	- "<span class=\"producer \" data-variable-name=\"___ivn_154\" data-field-id=\"227346\" >Have any criminal charges or reports of abuse or neglect involving ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()} been filed with a court or agency since the last report?</span>": ___ivn_154
		datatype: yesnoradio
		required: true

	- "<span class=\"producer conditional-field \" data-variable-name=\"___ivn_155\" data-field-id=\"227347\" >Please explain the charges or reports:</span>": ___ivn_155
		datatype: area
		required: false
		maxlength: 400

	- "<span class=\"producer \" data-variable-name=\"___ivn_156\" data-field-id=\"227348\" >Describe the nature and frequency of your visits ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()}, your contact with caregivers and health care providers, and any other activities you undertook as guardian during this reporting period, from ${___ivn_193 if defined(\"___ivn_193\") else empty_string()} to ${___ivn_194 if defined(\"___ivn_194\") else empty_string()}.</span>": ___ivn_156
		datatype: area
		required: false
		maxlength: 100

	- "<span class=\"producer \" data-variable-name=\"___ivn_157\" data-field-id=\"227351\" >Describe the extent to which the ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()} did/did not participate in decision-making about personal and health care decisions.</span>": ___ivn_157
		datatype: area
		required: false
		maxlength: 400

	- "<span class=\"producer \" data-variable-name=\"___ivn_163\" data-field-id=\"227360\" >Please describe any additional comments or concerns you have about ${___ivn_202 if defined(\"___ivn_202\") else empty_string()} ${___ivn_204 if defined(\"___ivn_204\") else empty_string()} ${___ivn_205 if defined(\"___ivn_205\") else empty_string()} or the guardianship:</span>": ___ivn_163
		datatype: area
		required: false
		maxlength: 400

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

script: |
	<script>


    $(function(){
      window.CL.quicklyHideConditionalFields();

      window.CL.updateFieldVisibility = function () {
        if ((window.CL.isTruthy(((window.CL.augment(window.CL.variables.___ivn_154))).wrapped))) { window.CL.showField("227347"); }
        if ((window.CL.isFalsy(((window.CL.augment(window.CL.variables.___ivn_154))).wrapped))) { window.CL.hideField("227347"); }
      };

      window.CL.recomputeDerivedVariables = function () {
        var variablesBefore = $.extend(true, {}, window.CL.variables);

        
        window.CL.variables.___shortcut_133_false = (window.CL.negate(window.CL.variables.___ivn_133))
    		window.CL.variables.___shortcut_130_false = (window.CL.negate(window.CL.variables.___ivn_130))
    		window.CL.variables.___shortcut_139_false = (window.CL.negate(window.CL.variables.___ivn_139))
    		window.CL.variables.___shortcut_142_false = (window.CL.negate(window.CL.variables.___ivn_142))
    		window.CL.variables.___shortcut_180_false = (window.CL.negate(window.CL.variables.___ivn_180))
    		window.CL.variables.___shortcut_136_false = (window.CL.negate(window.CL.variables.___ivn_136))
    		window.CL.variables.___shortcut_246_false = (window.CL.negate(window.CL.variables.___ivn_246))
    		window.CL.variables.___shortcut_222_false = (window.CL.negate(window.CL.variables.___ivn_222))
    		window.CL.variables.___shortcut_224_false = (window.CL.negate(window.CL.variables.___ivn_224))
    		window.CL.variables.___shortcut_162_false = (window.CL.negate(window.CL.variables.___ivn_162))
    		window.CL.variables.___shortcut_208_choice = (window.CL.variables.___ivn_206 === "Barnstable Probate & Family")
    		window.CL.variables.___shortcut_209_choice = (window.CL.variables.___ivn_206 === "Berkshire Probate & Family")
    		window.CL.variables.___shortcut_210_choice = (window.CL.variables.___ivn_206 === "Bristol Probate & Family")
    		window.CL.variables.___shortcut_211_choice = (window.CL.variables.___ivn_206 === "Dukes Probate & Family")
    		window.CL.variables.___shortcut_212_choice = (window.CL.variables.___ivn_206 === "Essex Probate & Family")
    		window.CL.variables.___shortcut_213_choice = (window.CL.variables.___ivn_206 === "Franklin Probate & Family")
    		window.CL.variables.___shortcut_214_choice = (window.CL.variables.___ivn_206 === "Hampshire Probate & Family")
    		window.CL.variables.___shortcut_215_choice = (window.CL.variables.___ivn_206 === "Middlesex Probate & Family")
    		window.CL.variables.___shortcut_216_choice = (window.CL.variables.___ivn_206 === "Nantucket Probate & Family")
    		window.CL.variables.___shortcut_217_choice = (window.CL.variables.___ivn_206 === "Norfolk Probate & Family")
    		window.CL.variables.___shortcut_218_choice = (window.CL.variables.___ivn_206 === "Plymouth Probate & Family")
    		window.CL.variables.___shortcut_207_choice = (window.CL.variables.___ivn_206 === "Suffolk Probate & Family")
    		window.CL.variables.___shortcut_219_choice = (window.CL.variables.___ivn_206 === "Worcester Probate & Family")
    		window.CL.variables.___shortcut_114_false = (window.CL.negate(window.CL.variables.___ivn_114))
    		window.CL.variables.___shortcut_35_false = (window.CL.negate(window.CL.variables.___ivn_35))
    		window.CL.variables.___shortcut_160_false = (window.CL.negate(window.CL.variables.___ivn_160))
    		window.CL.variables.___shortcut_161_false = (window.CL.negate(window.CL.variables.___ivn_161))
    		window.CL.variables.___shortcut_26_false = (window.CL.negate(window.CL.variables.___ivn_26))
    		window.CL.variables.___shortcut_150_false = (window.CL.negate(window.CL.variables.___ivn_150))
    		window.CL.variables.___shortcut_115_false = (window.CL.negate(window.CL.variables.___ivn_115))
    		window.CL.variables.___shortcut_145_false = (window.CL.negate(window.CL.variables.___ivn_145))
    		window.CL.variables.___shortcut_95_false = (window.CL.negate(window.CL.variables.___ivn_95))
    		window.CL.variables.___shortcut_93_false = (window.CL.negate(window.CL.variables.___ivn_93))
    		window.CL.variables.___shortcut_101_false = (window.CL.negate(window.CL.variables.___ivn_101))
    		window.CL.variables.___shortcut_100_false = (window.CL.negate(window.CL.variables.___ivn_100))
    		window.CL.variables.___shortcut_106_false = (window.CL.negate(window.CL.variables.___ivn_106))
    		window.CL.variables.___shortcut_154_false = (window.CL.negate(window.CL.variables.___ivn_154))
    		window.CL.variables.___shortcut_89_false = (window.CL.negate(window.CL.variables.___ivn_89))
    		window.CL.variables.___shortcut_83_choice = (window.CL.variables.___ivn_82 === "Resp_ResCommunity")
    		window.CL.variables.___shortcut_84_choice = (window.CL.variables.___ivn_82 === "Resp_ResDDS")
    		window.CL.variables.___shortcut_85_choice = (window.CL.variables.___ivn_82 === "Resp_ResDMH")
    		window.CL.variables.___shortcut_87_choice = (window.CL.variables.___ivn_82 === "Resp_ResHome")
    		window.CL.variables.___shortcut_86_choice = (window.CL.variables.___ivn_82 === "Resp_ResNurse")
    		window.CL.variables.___shortcut_88_choice = (window.CL.variables.___ivn_82 === "Resp_ResOther")
    		window.CL.variables.___shortcut_110_choice = (window.CL.variables.___ivn_107 === "Adequate")
    		window.CL.variables.___shortcut_109_choice = (window.CL.variables.___ivn_107 === "Good")
    		window.CL.variables.___shortcut_111_choice = (window.CL.variables.___ivn_107 === "Poor")
    		window.CL.variables.___shortcut_108_choice = (window.CL.variables.___ivn_107 === "Very Good")
    		window.CL.variables.___shortcut_229_false = (window.CL.negate(window.CL.variables.___ivn_229))
    		window.CL.variables.___shortcut_23_false = (window.CL.negate(window.CL.variables.___ivn_23))
    		window.CL.variables.___shortcut_122_choice = (window.CL.variables.___ivn_120 === "Change")
    		window.CL.variables.___shortcut_121_choice = (window.CL.variables.___ivn_120 === "Continue")
    		window.CL.variables.___shortcut_3_false = (window.CL.negate(window.CL.variables.___ivn_3))
    		window.CL.variables.___shortcut_184_false = (window.CL.negate(window.CL.variables.___ivn_184))
        
        

        if (!window.CL.objectsEqual(variablesBefore, window.CL.variables)) {
          return window.CL.recomputeDerivedVariables();
        }
        window.CL.updateFieldVisibility();
      };

      window.CL.updateValue = function (variableName, variableValue) {
        window.CL.variables[variableName] = variableValue;
        window.CL.recomputeDerivedVariables();
      };

      window.CL.assignFieldChangeListeners = function () {
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').on('input change', function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      };

      window.CL.assignEmbeddedFieldChangeListeners = function () {
        $('.embedded-field').each(function() {
          var wrapper = $(this);
          var variableName = wrapper.data('variable-name');
          wrapper.find('.input-embedded').on('input change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.radio-embedded').on('change', function() {
            console.log("updating " + variableName + ' to ' + this.value);
            window.CL.updateValue(variableName, this.value);
          });
          wrapper.find('.checkbox-embedded').on('change', function() {
            var $this = $(this);
            var $id = $this.prop('id');
            var $labelContainer = $('label[for="' + $id +'"]');
            var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
            console.log("updating " + $variableName + ' to ' + $this.is(':checked'));
            window.CL.updateValue($variableName, $this.is(':checked'));
          });
        });
      };

      window.CL.assignFieldChangeListeners();
      window.CL.assignEmbeddedFieldChangeListeners();
      window.CL.getExistingVariables(function(){
        window.CL.recomputeDerivedVariables();
      });

      // uptake field values from the screen in case we went back
      // need to set timeout and wait or it doesn't work
      setTimeout(function(){
        $('[data-variable-name]').each(function() {
          var field = $(this);
          var variableName = field.data('variable-name');
          field.closest('.form-group').find('input, select, textarea').each(function() {
            if (this.type === 'checkbox') {
              var $this = $(this);
              var $id = $this.prop('id');
              var $labelContainer = $('label[for="' + $id +'"]');
              var $variableName = $labelContainer.find('.checkbox-producer').data('variable-name');
              window.CL.updateValue($variableName, $this.is(':checked'));
            } else if (this.type === 'radio') {
              if ($(this).is(':checked')) {
                window.CL.updateValue(variableName, this.value);
              }
            } else {
              window.CL.updateValue(variableName, this.value);
            }
          });
        });
      }, 250);
    });


	</script>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 123183
mandatory: |
	is_truthy(((((augment(___ivn_161) if defined("___ivn_161") else Undefined()).boolean_and((augment(___shortcut_114_false) if defined("___shortcut_114_false") else Undefined())))).boolean_and(((augment(___shortcut_162_false) if defined("___shortcut_162_false") else Undefined())))))
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	**Please answer the following questions concern ${___ivn_202 if defined("___ivn_202") else empty_string()} ${___ivn_204 if defined("___ivn_204") else empty_string()} ${___ivn_205 if defined("___ivn_205") else empty_string()}'s  finances:**
fields:
	- "<span class=\"producer \" data-variable-name=\"___ivn_167\" data-field-id=\"227363\" >Beginning balance of bank accounts (savings, checking, CDs, money market, etc.)</span>": ___ivn_167
		datatype: currency
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_168\" data-field-id=\"227364\" >Money received from any source (Social Security, SSI, pension, disability, interest, etc.)</span>": ___ivn_168
		datatype: currency
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_169\" data-field-id=\"227365\" >Total fees to care providers</span>": ___ivn_169
		datatype: currency
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_170\" data-field-id=\"227366\" >Total money paid for such things as personal needs</span>": ___ivn_170
		datatype: currency
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_171\" data-field-id=\"227367\" >Total fees paid to guardian(s)</span>": ___ivn_171
		datatype: currency
		required: false

	- "<span class=\"producer \" data-variable-name=\"___ivn_172\" data-field-id=\"227369\" >All other expenses (housing, insurance, maintenance, etc.)</span>": ___ivn_172
		datatype: currency
		required: false

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 123267
mandatory: |
	is_truthy((((augment(___ivn_23) if defined("___ivn_23") else Undefined()))))
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	**Thank you for using the Rogers Review Assistant!**


	Would you like to receive reminders of your Rogers Review hearing date?


	Enroll in the [Rogers Review Reminder System](https://calendly.com/rogersreviewremindersystem/rogers-review-hearing) to recieve 60-day, 30-day, and 1-week email and text message reminders. The link will open the system in a new window.


	Click 'Continue' to download your _Guardian Care/Plan Report, Monitor Report, Treatment Plan, Motion to Extend/Amend Treatment Order,_ and _Rogers Review Hearing Checklist._
field: ___ivn_184

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

css: |
	<style>
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
id: 129322
mandatory: |
	is_truthy((((augment(___ivn_23) if defined("___ivn_23") else Undefined()))))
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	**Please download your Rogers Review documents.**

attachment code: |
	[___Treatment_Plan_pdf_5226(True, "t____Treatment_Plan_pdf_5226_attachment_5847"), ___Review_Order_Anipsychotic_Medication__pdf_4732(True, "t____Review_Order_Anipsychotic_Medication__pdf_4732_attachment_5848"), ___Guardianship_Care_Plan_Report_pdf_4734(True, "t____Guardianship_Care_Plan_Report_pdf_4734_attachment_5849"), ___Motion_to_Extend_Amend_Treatment_Order_pdf_5229(True, "t____Motion_to_Extend_Amend_Treatment_Order_pdf_5229_attachment_5850"), ___Report_of_Monitor_pdf_4735(True, "t____Report_of_Monitor_pdf_4735_attachment_5851"), ___Clinician_Affidavit_pdf_6093(True, "t____Clinician_Affidavit_pdf_6093_attachment_6258"), ___Rogers_Review_Hearing_Checklist___Suffolk_pdf_6183((augment(___shortcut_207_choice) if defined("___shortcut_207_choice") else Undefined()), "t____Rogers_Review_Hearing_Checklist___Suffolk_pdf_6183_attachment_6360"), ___Rogers_Review_Hearing_Checklist___Barnstable_pdf_6184((augment(___shortcut_208_choice) if defined("___shortcut_208_choice") else Undefined()), "t____Rogers_Review_Hearing_Checklist___Barnstable_pdf_6184_attachment_6361"), ___Rogers_Review_Hearing_Checklist___Hampshire_pdf_6190((augment(___shortcut_214_choice) if defined("___shortcut_214_choice") else Undefined()), "t____Rogers_Review_Hearing_Checklist___Hampshire_pdf_6190_attachment_6362"), ___Rogers_Review_Hearing_Checklist___Middlesex_pdf_6191((augment(___shortcut_215_choice) if defined("___shortcut_215_choice") else Undefined()), "t____Rogers_Review_Hearing_Checklist___Middlesex_pdf_6191_attachment_6363"), ___Rogers_Review_Hearing_Checklist___Norfolk_pdf_6192((augment(___shortcut_217_choice) if defined("___shortcut_217_choice") else Undefined()), "t____Rogers_Review_Hearing_Checklist___Norfolk_pdf_6192_attachment_6364"), ___Rogers_Review_Hearing_Checklist___Nantucket_pdf_6193((augment(___shortcut_216_choice) if defined("___shortcut_216_choice") else Undefined()), "t____Rogers_Review_Hearing_Checklist___Nantucket_pdf_6193_attachment_6365"), ___Rogers_Review_Hearing_Checklist___Plymouth_pdf_6194((augment(___shortcut_218_choice) if defined("___shortcut_218_choice") else Undefined()), "t____Rogers_Review_Hearing_Checklist___Plymouth_pdf_6194_attachment_6366"), ___Rogers_Review_Hearing_Checklist___Worcester_pdf_6195((augment(___shortcut_219_choice) if defined("___shortcut_219_choice") else Undefined()), "t____Rogers_Review_Hearing_Checklist___Worcester_pdf_6195_attachment_6367"), ___Rogers_Review_Hearing_Checklist___Berkshire_pdf_6185((augment(___shortcut_209_choice) if defined("___shortcut_209_choice") else Undefined()), "t____Rogers_Review_Hearing_Checklist___Berkshire_pdf_6185_attachment_6368"), ___Rogers_Review_Hearing_Checklist___Franklin_pdf_6189((augment(___shortcut_213_choice) if defined("___shortcut_213_choice") else Undefined()), "t____Rogers_Review_Hearing_Checklist___Franklin_pdf_6189_attachment_6369"), ___Rogers_Review_Hearing_Checklist___Essex_pdf_6188((augment(___shortcut_212_choice) if defined("___shortcut_212_choice") else Undefined()), "t____Rogers_Review_Hearing_Checklist___Essex_pdf_6188_attachment_6370"), ___Rogers_Review_Hearing_Checklist___Dukes_pdf_6187((augment(___shortcut_211_choice) if defined("___shortcut_211_choice") else Undefined()), "t____Rogers_Review_Hearing_Checklist___Dukes_pdf_6187_attachment_6371"), ___Rogers_Review_Hearing_Checklist___Bristol_pdf_6186((augment(___shortcut_210_choice) if defined("___shortcut_210_choice") else Undefined()), "t____Rogers_Review_Hearing_Checklist___Bristol_pdf_6186_attachment_6372")]
allow emailing: False

under: |
	<hr>	<div style='display:flex;justify-content:space-between;'><div>Powered by [Community.lawyer](https://community.lawyer/)</div><div>[Save and continue later](https://community.lawyer/app${ interview_url(local=True, interview_id=4728).replace('/interview?', '?') })</div><span class="is-final-block" /></div>
right: |
	<span class='test-mode-alert'>TEST MODE: This app is in test mode. To remove this message, you must activate the app.</span>

css: |
	<style>
		button.btn-primary[type='submit'] {
			display: none;
		}
		:root {
			--body-color: #fff;
			--navbar-color: #2D3C4E;
			--text-color: #212529;
			--primary-btn-background-color: #f4ac3b;
			--primary-btn-background-color-hover: #ef970d;
			--primary-btn-text-color: #212529;
			--secondary-btn-background-color: #ffc107;
			--secondary-btn-background-color-hover: #d39e00;
			--secondary-btn-text-color: #212529;
			--text-link-color: #007bff;
			--progress-bar-color: #f4ac3b;
			--hide-navbar-background-color: #fff;
		}

	</style>
---
mandatory: |
	True
question: |
	<span id="session-id" data-session-id="${user_info().session}">
	<span id="sends-answers" data-sends-answers="true">
	<span id="cl-endpoint" data-cl-endpoint="https://community.lawyer">
	<span id="interview-id" data-interview-id="4728">

subquestion: |
	Thank you for using this app. Your session is complete.
---
